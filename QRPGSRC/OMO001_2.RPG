      *$$\CRTOM CRTRPGPGM
      *$$ CVTOPT(*DATETIME *VARCHAR)
      *$$ REPLACE(*YES)
      *$$ TGTRLS(V4R5M0)
      *$$ USRPRF(*OWNER)
      *$$\ENDOM
      * ----------------------------------------------------------- *
      * Description                                                 *
      * ----------------------------------------------------------- *
      *                                                             *
      * Program ....: OMO001_2                                      *
      * Function ...: Fix Processing - Fix Processing               *
      * Author .....: W.S. Jongman.                                 *
      * Startdate ..: 13-09-1991.                                   *
      * Parameters .: P#TFRC  - Transfernumber character            *
      *               P#APPC  - Application code                    *
      *               P#FRPL  - From production level               *
      *               P#TOPL  - To   production level               *
      *               P#ODBL  - OMS database library                *
      *               P#STAT  - Status                              *
      *               P#OCC   - Number of objects created           *
      *               P#ONCC  - Number of objects not created       *
      *               P#ODC   - Number of objects deleted           *
      *               P#ONDC  - Number of objects not deleted       *
      *               P#OSC   - Number of objects saved             *
      *               P#ONSC  - Number of objects not saved         *
      *               P#ORC   - Number of objects restored          *
      *               P#ONRC  - Number of objects not restored      *
      *               P#ERC   - Number of errors                    *
      *               P#WRC   - Number of warnings                  *
      *               P#ADC   - Number of adresses distributed      *
      *               P#ANDC  - Number of adresses not distributed  *
      *                                                             *
      * This program is called when a user requested move or copy   *
      * of an object. The workfile OMOW3..  is filled with all the  *
      * objects that are to be moved or copied.                     *
      *                                                             *
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * Used files                                                  *
      * ----------------------------------------------------------- *
      *                                                             *
      *                                                             *
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * Sub programs                                                *
      * ----------------------------------------------------------- *
      * OMX960C - Library list handler.                             *
      *                                                             *
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * Used indicators.  0=false  1=true                           *
      * ----------------------------------------------------------- *
      *                                                             *
      * KEEP   - Keep defined for library.                          *
      * I#LDUP - Is this logical legible for CRTDUPOBJ              *
      *          1=Yes. Physicals are either in FROL or TOOL        *
      *          2=No.  Physical is not in FROL nor in TOOL         *
      *                                                             *
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * File specifications                                         *
      * ----------------------------------------------------------- *
     FOMOW3   UF  E                    DISK         KINFDS OW3
     F                                              KRECNO RRNW3
     F                                              KINFSR *PSSR
     FOMOW3L1 IF  E           K        DISK
     F            OMOW3R                            KRENAMEOW3L1
     F                                              KINFDS OW3I1
     F                                              KINFSR *PSSR
     FOMOW3L2 IF  E           K        DISK
     F            OMOW3R                            KRENAMEOW3L2
     F                                              KINFDS OW3I2
     F                                              KINFSR *PSSR
     FOMEROL1 UF  E           K        DISK         KINFDS EROL1
     F                                              KINFSR *PSSR
     FOMEROL7 IF  E           K        DISK         KINFDS EROL7      UC
     F            OMEROR                            KRENAMEOMEROB2
     F                                              KINFSR *PSSR
     FOMEROL3 IF  E           K        DISK         KINFDS EROL3
     F            OMEROR                            KRENAMEOMEROR3
     F                                              KINFSR *PSSR
     FOMEROL4 IF  E           K        DISK         KINFDS EROL4
     F            OMEROR                            KRENAMEOMEROR4
     F                                              KINFSR *PSSR
     FOMERSL1 UF  E           K        DISK         KINFDS ERSL1
     F                                              KINFSR *PSSR
     FOMLBLL1 IF  E           K        DISK         KINFDS LBLL1
     F                                              KINFSR *PSSR
     FOMLBDL1 IF  E           K        DISK         KINFDS LBDL1
     F                                              KINFSR *PSSR
     FOMLBDL2 IF  E           K        DISK         KINFDS LBDL2
     F            OMLBDR                            KRENAMEOMLBDR2
     F                                              KINFSR *PSSR
     FOMLBDL3 IF  E           K        DISK         KINFDS LBDL3
     F            OMLBDR                            KRENAMEOMLBDR3
     F                                              KINFSR *PSSR
     FOMOBJL4 IF  E           K        DISK         KINFDS OBJL4
     F            OMOBJR                            KRENAMEOMOBJR4
     F                                              KINFSR *PSSR
     FOMOBJL5 IF  E           K        DISK         KINFDS OBJL5
     F            OMOBJR                            KRENAMEOMOBJR5
     F                                              KINFSR *PSSR
     FOMOBJL7 IF  E           K        DISK         KINFDS OBJL7      UC
     F            OMOBJR                            KRENAMEOMOBJR7
     F                                              KINFSR *PSSR
     FOMOBJL8 UF  E           K        DISK         KINFDS OBJL8 A
     F            OMOBJR                            KRENAMEOMOBJR8
     F                                              KINFSR *PSSR
     FOMMBRL1 UF  E           K        DISK         KINFDS MBRL1 A
     F                                              KINFSR *PSSR
     FOMDMPL1 UF  E           K        DISK         KINFDS DMPL1 A
     F                                              KINFSR *PSSR
     FOMDMPL2 IF  E           K        DISK         KINFDS DMPL2
     F            OMDMPR                            KRENAMEDMPR2
     F                                              KINFSR *PSSR
     FOMFBC   O   E                    DISK         KINFDS FBC   A    UC
     F                                              KINFSR *PSSR
     FOMFLB   O   E                    DISK         KINFDS FLB   A    UC
     F                                              KINFSR *PSSR
     FOMLOG   O   E                    DISK         KINFDS LOG   A    UC
     F                                              KINFSR *PSSR
     FOMOVCL1 O   E                    DISK         KINFDS OVCL1 A    UC
     F                                              KINFSR *PSSR
     FOMOVCL2 IF  E           K        DISK         KINFDS OVCL2      UC
     F            OMOVCR                            KRENAMEOMOVCR2
     F                                              KINFSR *PSSR
     FOMOVCL3 IF  E           K        DISK         KINFDS OVCL3      UC
     F            OMOVCR                            KRENAMEOMOVCR3
     F                                              KINFSR *PSSR
     FOMOVCL5 UF  E           K        DISK         KINFDS OVCL5      UC
     F            OMOVCR                            KRENAMEOMOVCR5
     F                                              KINFSR *PSSR
     FOMXFUL1 IF  E           K        DISK         KINFDS XFUL1
     F                                              KINFSR *PSSR
     FOMXFUL2 IF  E           K        DISK         KINFDS XFUL2      UC
     F            OMXFUR                            KRENAMEOMXFUR2
     F                                              KINFSR *PSSR
     FOMXSEL1 IF  E           K        DISK         KINFDS XSEL1
     F                                              KINFSR *PSSR
     FOMSEQL3 IF  E           K        DISK         KINFDS SEQL3      UC
     F                                              KINFSR *PSSR
      *OMAIFL2  replaced by L4: applic interface only checked at APPC
      *         level, not at PDLC (envir.) level
     FOMAIFL4 IF  E           K        DISK         KINFDS AIFL4
     F            OMAIFR                            KRENAMEOMAIFR4
     F                                              KINFSR *PSSR
     FOMAPPL1 IF  E           K        DISK         KINFDS APPL1      UC
     F                                              KINFSR *PSSR
     FOMOTDL2 UF  E           K        DISK         KINFDS OTDL2
     F                                              KINFSR *PSSR
     FOMOW3L9 IF  E           K        DISK         KINFDS OW3L9
     F                                              KINFSR *PSSR
     FOMFCRL1 UF  E           K        DISK         KINFDS FCRL1      UC
     F                                              KINFSR *PSSR
     FOMHFSL1 IF  E           K        DISK         KINFDS HFSL1      UC
     F                                              KINFSR *PSSR
     FOMLOAL1 IF  E           K        DISK         KINFDS LOAL1      UC
     F                                              KINFSR *PSSR
     FOMPDLL1 IF  E           K        DISK         KINFDS PDLL1      UC
     F                                              KINFSR *PSSR
     FOMIOPL1 IF  E           K        DISK         KINFDS IOPL1      UC
     F                                              KINFSR *PSSR
     FOMIONL1 IF  E           K        DISK         KINFDS IONL1      UC
     F                                              KINFSR *PSSR
     FOMRTLL3 IF  E           K        DISK         KINFDS RTLL3      UC
     F                                              KINFSR *PSSR
     FOMRTLL5 IF  E           K        DISK         KINFDS RTLL5      UC
     F                                              KINFSR *PSSR
     F            OMRTLR                            KRENAMEOMRTLR5
     FOMLLCL1 IF  E           K        DISK         KINFDS LLCL1
     F                                              KINFSR *PSSR
     FOMLDCL1 IF  E           K        DISK         KINFDS LDCL1
     F                                              KINFSR *PSSR
     FOMO001W4O   E           K        DISK         KINFDS OW4        UC
     F            OMO001R                           KRENAMEOMO001R4
     F                                              KINFSR *PSSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * Extension specifications                                    *
      *                                                             *
      * MC    Used to fill message variables in message data parm.  *
      * APC   Contains all applications (current and related)       *
      * APT   Contains interface type (single or bi-directional)    *
      * APM   Contains the application managers per appc            *
      *                                                             *
      * FIX   the Fix numbers in this Object transfer               *
      * PGR   the Programmer involved in this transfer              *
      *                                                             *
      * PFP   Contains physicals processed per libl                 *
      * PFL   Related to PFP - the library where PF is created -    *
      * PFS   Related to PFP - the from library (source)            *
      * PFF   Related to PFP - fallback indicator -                 *
      *                                                             *
      * LIB   All libraries per environment                         *
      * SQ#   Library-list sequence number per library              *
      * ACT   Array for field W3ACTO                                *
      * LFR   LF related files/libraries                            *
      * PFR   PF related files/libraries                            *
      * RPF   Related physicals to a logical (the physical)         *
      * RPL   The library the RPF object is found                   *
      * LLA   Library list array in SR0051 and SR0036               *
      * LBO   Output library list.                                   *
      * LBI   Input library list.                                    *
      *                                                             *
      * IOB   Used for the OMQCHGOBDS structure to map full path    *
      * ID1   Directory in OMIOP                                    *
      *                                                             *
      *                                                             *
      * ----------------------------------------------------------- *
     E                    MC        256  1
     E                    ENV        49  5
     E                    EN#        49  5 0
     E                    AUT        49  1
     E                    LVC        49  1
     E                    LV#        49  3 0
     E                    APC        10  5
     E                    APT        10  1
     E                    APM        10 10
     E                    LIB       300 10
     E                    SQ#       300  3 0
     E                    ACT        40  1
     E                    ALT        20 62
     E*
     E                    FIX       999 10
     E                    PGR       999 10
     E*
     E                    PFP       999 10
     E                    PFL       999 10
     E                    PFS       999 10
     E                    PFF       999  1
     E*
     E                    LFR        32 20
     E                    PFR        32 20
     E                    RPF        32 10
     E                    RPL        32 10
     E                    LLA        26 10
      * 999 = C#XSEL
     E                    PSQ       999  3 0
     E                    SSQ       999  3 0
     E                    FUC       999 10
     E                    OBC       999 12
     E                    OBT       999  9
     E                    OBA       999 10
     E                    FOL       999 10
     E                    FPD       999  5
     E                    TOL       999 10
     E                    TPD       999  5
     E                    CRI       999  1
      * 200 = C#CMDL
     E                    TCX       200  1
      * 13  = C#VALL + 1
     E                    VAL        13  1
     E                    W3N        12  1
     E                    OBW        12  1
      * IFS arrays
     E                    IOB      5000  1
     E                    ID1       640  1
     E                    IO1       255  1
     E                    STIDRC    640  1
     E                    S4IDRC    640  1
     E                    LBO       250 11
     E                    LBI       250 11
     E/COPY QCPYSRC,OMSREFREN
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * Input pecifications                                         *
      * ----------------------------------------------------------- *
     IOMOVCR3
     I              VCAPPC                          U#APPC
     I              VCFIX#                          U#FIX#
     I              VCOBJC                          U#OBJC
     I              VCOBJT                          U#OBJT
     I              VCMBRC                          U#MBRC
     I              VCRAPC                          U#RAPC
     I              VCRFX#                          U#RFX#
     I              VCRMBC                          U#RMBC
     I              VCOVCC                          U#OVCC
     I              VCCMRQ                          U#CMRQ
     I              VCCMUS                          U#CMUS
     I              VCCMDT                          U#CMDT
     I              VCCMTM                          U#CMTM
     I              VCCMED                          U#CMED
      *
      *          ------------------------------------------
      *          IFS objects renames and mappings
      *          ------------------------------------------
     IOPIDRC      DS
     I                                        3 642 ID1
     IONIOBC      DS
     I                                        3 257 IO1
     IW#TDIR      DS                            640
     IW#FDIR      DS                            640
     IW#IDRC      DS                            640
     IP#IDRC      DS                            640
     IW#FULL      DS                             64
     IW#TFPC      DS                            640
     IW#FFPC      DS                            640
     IW#IFPC      DS                            640
     IMSGDTA      DS                            256
     I                                        1  80 MSGDT1
     I                                       81 160 MSGDT2
     I                                      161 240 MSGDT3
     I                                      241 256 MSGDT4
      *
      *          ------------------------------------------
      *          File data structure used to define constants
      *          ------------------------------------------
     I          E DSOMSREFAM
     I          E DSOMSREFNZ
      *
      *          ------------------------------------------
      *          Program data structure
      *          ------------------------------------------
     IPGM        SDS
     I                                     *PROGRAM PGMQ
     I                                     *PARMS   D#PARM
     I                                        1  10 D#PGM
     I                                      199 2000D#YYCC
     I                                      201 208 E#FILE
     I                                      264 2690D#JOB#
     IOMCVC       DS
     I                                        1   1 D#CMRQ
      *
      *
      *          ------------------------------------------
      *          DS for files in *PSSR
      *          ------------------------------------------
     IEROL1       DS                             57
     IOW3         DS                             57
     IOW3I1       DS
     I                                    B 397 4000RRNW31
     IOW3I2       DS
     I                                    B 397 4000RRNW32
     IEROL3       DS                             57
     IEROL4       DS                             57
     IEROL7       DS                             57
     IERSL1       DS                             57
     ILBLL1       DS                             57
     ILBDL1       DS                             57
     ILBDL2       DS                             57
     ILBDL3       DS                             57
     IOBJL4       DS                             57
     IOBJL5       DS                             57
     IOBJL7       DS                             57
     IOBJL8       DS                             57
     IMBRL1       DS                             57
     IDMPL1       DS                             57
     IDMPL2       DS                             57
     IFBC         DS                             57
     IFLB         DS                             57
     ILOG         DS                             57
     IOVCL1       DS                             57
     IOVCL2       DS                             57
     IOVCL3       DS                             57
     IOVCL5       DS                             57
     IXFUL1       DS                             57
     IXFUL2       DS                             57
     IXSEL1       DS                             57
     ISEQL3       DS                             57
     IAIFL2       DS                             57
     IAIFL4       DS                             57
     IAPPL1       DS                             57
     IOTDL2       DS                             57
     IOW3L9       DS                             57
     IFCRL1       DS                             57
     IHFSL1       DS                             57
     ILOAL1       DS                             57
     IPDLL1       DS                             57
     IIOPL1       DS                             57
     IIONL1       DS                             57
     IRTLL3       DS                             57
     IRTLL5       DS                             57
     ILLCL1       DS                             57
     ILDCL1       DS                             57
     IOW4         DS                             57
     ISYS         DS                             57
      *
      *          ------------------------------------------
      *          OMSDTA System portion
      *          ------------------------------------------
     IOMSDT1      DS                            200
     I                                        1  50 D#CONM
     I                                       51  60 D#OBEH
     I                                       61  70 D#USID
     I                                       71  80 D#USCL
     I                                       81  90 D#GRID
     I                                       91 100 D#GRCL
     I                                      101 150 D#USDC
     I                                      151 1520D#SEVL
     I                                      153 200 D#DUM1
      *
      *          ------------------------------------------
      *          OMSDTA Application portion
      *          ------------------------------------------
     IOMSDT2      DS                            200
     I                                        1   5 D#APPC
     I                                        6   6 D#AUTC
     I                                        7  36 D#APNM
     I                                       37  46 D#ERPR
     I                                       47  56 D#GL4N
     I                                       57  57 D#SRCI
     I                                       58  590D#ENV#
     I                                       60  64 D#EPLC
     I                                       65  69 D#LPLC
     I                                    P  70  720D#LPL#
     I                                       73  77 D#HPLC
     I                                    P  78  800D#HPL#
     I                                       81 200 D#DUM2
      *
      *          ------------------------------------------
      *          OMSDTA Environment portion
      *          ------------------------------------------
     IOMSDT3      DS                            624
     I                                        1 245 ENV
     I                                    P 246 3920EN#
     I                                      393 441 AUT
     I                                      442 490 LVC
     I                                    P 491 5880LV#
     I                                      589 624 D#DUM3
      *
      *          ------------------------------------------
      *          OMQRTVSR
      *          ------------------------------------------
     IA@ERR       DS
     I                                        1   7 A@MSID
     I                                        8   8 A@MSTP
     I                                        9 136 A@MSGD
     I                                       14  23 A@MSD1
     IA@PRCA      DS                             16
     I                                        1   1 A@EOP
     IA@KEYV      DS                            256
      *
      *          ------------------------------------------
      *          OMQCHGOB data buffer
      *          ------------------------------------------
      /COPY QCPYSRC,OMQCHGOBDS
      *
      *          ------------------------------------------
      *          OMQCHGSO data buffer
      *          ------------------------------------------
      /COPY QCPYSRC,OMQCHGSODS
      *
      *          ------------------------------------------
      *          Error buffer for API call.
      *          ------------------------------------------
      /COPY QAPISRC,ERR_BUFFER
      *
      *          ------------------------------------------
      *          Binary number definition
      *          ------------------------------------------
      /COPY QAPISRC,DEFBINARY
      *
      *          ------------------------------------------
      *          Exception buffer for W3 version V3R0M00
      *          ------------------------------------------
      /COPY QCPYSRC,XW3V3R0M00
      *
      *          ------------------------------------------
      *          IFS Object Information
      *          ------------------------------------------
      /COPY QCPYSRC,FILEINFO
      *
      *          ------------------------------------------
      *          The exception W3 buffer.
      *          ------------------------------------------
     IW3XBUF      DS                           1024
      *
      *          ------------------------------------------
      *          The OMOW3 record.
      *          ------------------------------------------
     ID#W3RC    E DSOMOW3                     2
     IS#W3RC      DS                            500
     IP#W3RC      DS                            500
      *
      *          ------------------------------------------
      *          DS for field W3ACTO various actions
      *          ------------------------------------------
     ID#ACTO      DS
     I                                        1  40 ACT
      *
      *          ------------------------------------------
      *          Output command buffer
      *          ------------------------------------------
     ID#XCO       DS                            999
      *
      *          ------------------------------------------
      *          DS for the type of W3 processing
      *          ------------------------------------------
     IS#TYPE      DS                             13
     ID#TYPE      DS                             13
     I                                        1   1 I#DOC
     I                                        2   2 I#4GL
     I                                        3   3 I#DTL
     I                                        4   4 I#DTLS
     I                                        5   5 I#DTLM
     I                                        6   6 I#DTLP
     I                                        7   7 I#DTLL
     I                                        8   8 I#TMP
     I                                        9   9 I#PF
     I                                       10  10 I#LF
     I                                       11  11 I#OTH
     I                                       12  12 I#IFS
     I                                       13  13 I#ILE
      *
      *          ------------------------------------------
      *          Parameter DS to hold related files
      *          ------------------------------------------
     IP#LFR       DS
     I                                        1 640 LFR
     IP#PFR       DS
     I                                        1 640 PFR
      *
      *          ------------------------------------------
      *          Data structure for a related file
      *          ------------------------------------------
     I            DS
     I                                        1  20 D#LFR
     I                                        1  10 D#LFRC
     I                                       11  20 D#LFRL
     I            DS
     I                                        1  20 D#PFR
     I                                        1  10 D#PFRC
     I                                       11  20 D#PFRL
      *
      *          ------------------------------------------
      *          DS met libraries per environment
      *          ------------------------------------------
     ID#ENV       DS                         49
     I                                        1   1 D#FILL
     I                                        23001 LIB
     I                                    P300236010SQ#
      *
      *          ------------------------------------------
      *          Dump member name generator.
      *          ------------------------------------------
     I            DS
     I                                        1  10 D#SAVM
     I                                        4  100D#SAV#
      *
      *          ------------------------------------------
      *          Current date data structure
      *          ------------------------------------------
     I            DS
     I                                        1   70D#DATE
     I                                        1   10D#CC
     I                                        1   1 D#CCC
     I                                        2   30D#YY
     I                                        4   50D#MM
     I                                        6   70D#DD
      *
      *          ------------------------------------------
      *          Map W3SEQ# to character
      *          ------------------------------------------
     I            DS
     I                                        1   30D#SEQ#
     I                                        1   3 D#SEQC
      *
      *          ------------------------------------------
      *          Map countfield to character
      *          ------------------------------------------
     I            DS
     I                                        1   20D#IZ#
     I                                        1   2 D#IZC
      *
      *          ------------------------------------------
      *          Map transfer number to packed
      *          ------------------------------------------
     IP#TFRC      DS                              8
     I                                        3   80P#NUM#
     I                                        3   8 P#NUMC
      *
      *          ------------------------------------------
      *          Application manager DS;
      *            array element covers subfield occurrence
      *          ------------------------------------------
     IAPMDS       DS                         10
     I                                        1 100 APM
      *
      *          ------------------------------------------
      *          Command string.
      *          ------------------------------------------
     IP#CMD       DS                           5700
      *
      *          ------------------------------------------
      *          DS for count fields at program level
      *          ------------------------------------------
     I            DS
     I I            0                     B   1   40D#OC#
     I I            0                     B   5   80D#ONC#
     I I            0                     B   9  120D#OD#
     I I            0                     B  13  160D#OND#
     I I            0                     B  17  200D#OS#
     I I            0                     B  21  240D#ONS#
     I I            0                     B  25  280D#OR#
     I I            0                     B  29  320D#ONR#
     I I            0                     B  33  360D#ER#
     I I            0                     B  37  400D#WR#
     I I            0                     B  41  440D#AD#
     I I            0                     B  45  480D#AND#
     I                                        1   4 D#OCC
     I                                        5   8 D#ONCC
     I                                        9  12 D#ODC
     I                                       13  16 D#ONDC
     I                                       17  20 D#OSC
     I                                       21  24 D#ONSC
     I                                       25  28 D#ORC
     I                                       29  32 D#ONRC
     I                                       33  36 D#ERC
     I                                       37  40 D#WRC
     I                                       41  44 D#ADC
     I                                       45  48 D#ANDC
      *
      *          ------------------------------------------
      *          DS when we are in receive mode
      *          D#MEDI is '0' for SNA job
      *          D#MEDI is '1' for TCP job
      *          D#MEDI is '2' for other medium (tape?)
      *          D#MEDI is filled in DMD011C and written to
      *          the flat file as an OMOTD record in DMD008. wj 01/2004
      *          ------------------------------------------
     I            DS
     I                                        1   8 D#SNDN
     I                                        9  12 D#SNDI
     I                                        9   9 D#DSTT
     I                                       10  10 D#SRCP
     I                                       11  11 D#MONI
     I                                       12  12 D#MEDI
      *
      *          ------------------------------------------
      *          DS for count fields for libl and remove
      *          ------------------------------------------
     I            DS
     I I            0                     B   1   40W#OC#
     I I            0                     B   5   80W#ONC#
     I I            0                     B  17  200W#OS#
     I I            0                     B  21  240W#ONS#
     I I            0                     B  25  280W#OR#
     I I            0                     B  29  320W#ONR#
     I I            0                     B  33  360W#ER#
     I I            0                     B  37  400W#WR#
     I I            0                     B  41  440W#OD#
     I I            0                     B  45  480W#OND#
     I I            0                     B  49  520W#AD#
     I I            0                     B  53  560W#AND#
     I                                        1   4 W#OCC
     I                                        5   8 W#ONCC
     I                                       17  20 W#OSC
     I                                       21  24 W#ONSC
     I                                       25  28 W#ORC
     I                                       29  32 W#ONRC
     I                                       33  36 W#ERC
     I                                       37  40 W#WRC
     I                                       41  44 W#ODC
     I                                       45  48 W#ONDC
     I                                       49  52 W#ADC
     I                                       53  56 W#ANDC
      *
      *          ------------------------------------------
      *          Data structure for OS/400 release.
      *          ------------------------------------------
     I            DS
     I                                        1   6 P#OSR#
     I                                        2   2 P#VER#
      *
      *          ------------------------------------------
      *          Request message data.
      *          ------------------------------------------
     ID#RQST      DS
     I                                        1   2 M#OPTI
     I                                        3  14 M#OBJC
     I                                       15  23 M#OBJT
     I                                       24  33 M#OBJL
     I                                       34  43 M#MBRC
     I I            'OMA001_2'               44  53 M#PGMC
     I                                       54 117 M#PRCN
      *
      *          ------------------------------------------
      *          Named constants
      *          ------------------------------------------
     I              'OMX960C'             C         C#X960
     I              'OMSMSG    *LIBL     'C         C#OMSG
     I              '*CMP '               C         C#COMP
     I              '*ANY '               C         C#ANY
     I              '*TERM'               C         C#TERM
     I              '*NORM'               C         C#NORM
     I              '*EXST'               C         C#EXST
     I              '*MORE'               C         C#MORE
     I              '*NEXT'               C         C#NEXT
     I              '*ACT '               C         C#ACT
     I              '*CRT '               C         C#CRT
     I              'PF        '          C         C#PF
     I              'PF38      '          C         C#PF38
     I              'LF        '          C         C#LF
     I              'LF38      '          C         C#LF38
     I              '*FILE    '           C         C#FILE
     I              '*MSGF'               C         C#MSGF
     I              '*SAME'               C         C#SAME
     I              '*OBJD'               C         C#OBJD
     I              '*BEST'               C         C#BEST
     I              '*RETRIEVE'           C         C#RTV
     I              '*'                   C         C#ASTR
     I              '*NONE'               C         C#NONE
     I              'NO *SOURCE'          C         C#NSRC
     I              '*NONE     '          C         C#NONC
     I              '*ALL       '         C         C#ALL
     I              '*ALL      '          C         C#ALL9
     I              '*SYNON'              C         C#SYN
     I              '*POWERH'             C         C#PWH
     I              '*IFSOBJ'             C         C#IFSO
     I              'OMSREFOBJ'           C         C#OMSR
     I              '*DTAARA'             C         C#DTAA
     I              '*DOC '               C         C#DOC
     I              '*YES'                C         C#YES
     I              '*NO'                 C         C#NO
     I              '*LIBL'               C         C#LIBL
     I              'OMX924C'             C         C#924C
     I              'OMS_ERROR '          C         C#LOG
     I              '*CHANGED  '          C         C#CHGC
     I              '*ADDED    '          C         C#ADDC
     I              '*DELETED  '          C         C#DELC
     I              'A'                   C         C#ACLS
     I              'B'                   C         C#BCLS
     I              '*ACTN'               C         C#ACTN
     I              '*EXCP'               C         C#EXCP
     I              '*STND'               C         C#STND
     I              '*OMSLIB'             C         C#OMSL
     I              '*MODULE'             C         C#MOD
     I              '*SRVPGM'             C         C#SRV
     I              'OMQILEPRC'           C         C#ILEP
     I              '*SYSTEM'             C         C#SYST
     I              'OMLDDTLCLASS'        C         C#LDTL
      *
      *          ------------------------------------------
      *          Exceptions Constatnts:
      *
      *            C#XBFX = User Exit Point Begin Fix
      *            C#XBSO = User Exit Point Begin Solution
      *            C#XPRC = User Exit Point Solution Processing
      *            C#XESO = User Exit Point End Solution
      *            C#XRSO = User Exit Point Remove Solution
      *            C#XEFX = User Exit Point End Fix
      *            C#XSEL = Max. Number of Selections in tabel
      *            C#CMDL = # Bytes of (SEXFUN = Command in OMXSE)
      *            C#SPCL = Length of special Keyword (e.g. "##OBJC")
      *            C#VALL = Max. Length of replacement Value
      *            C#KEYL = Length of C#XKE1 and C#XKE2
      *            C#CHGL = Length replacement value
      *            C#XW3F = Number of Special keywords
      *          ------------------------------------------
     I              '*V2R1M0 '            C         C#V210
     I              '*V3R0M0 '            C         C#V300
     I              '1'                   C         C#XBFX
     I              '3'                   C         C#XBSO
     I              '5'                   C         C#XPRC
     I              '7'                   C         C#XESO
     I              '8'                   C         C#XRSO
     I              '9'                   C         C#XEFX
     I              999                   C         C#XSEL
     I              200                   C         C#CMDL
     I              6                     C         C#SPCL
     I              12                    C         C#VALL
     I              7                     C         C#KEYL
     I              12                    C         C#CHGL
     I              'CHGVAROMS '          C         C#XCMD
     I              'OMSVAR('             C         C#XKE1
     I              ' VALUE('             C         C#XKE2
      *
      *          ------------------------------------------
      *          Good and bad copy or move counters.
      *          ------------------------------------------
     I            DS
     I                                        1   20D#GOOD
     I                                        1   2 D#GA
     I                                        3   40D#BAD
     I                                        3   4 D#BA
      *
     IP#IOBC      DS                            255
     IW#PATH      DS                            640
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * Main line                                                   *
      * ----------------------------------------------------------- *
      *
      *          ------------------------------------------
      *          Declare the parameters
      *          ------------------------------------------
     C           *ENTRY    PLIST
     C                     PARM           P#TFRC
     C                     PARM           P#APPC
     C                     PARM           P#FRPL
     C                     PARM           P#TOPL
     C                     PARM           P#ODBL
     C                     PARM           P#STAT
     C                     PARM           P#OCC   4        obj created
     C                     PARM           P#ONCC  4        obj not
     C                     PARM           P#ODC   4        obj deleted
     C                     PARM           P#ONDC  4        obj not
     C                     PARM           P#OSC   4        obj saved
     C                     PARM           P#ONSC  4        obj not
     C                     PARM           P#ORC   4        obj restor
     C                     PARM           P#ONRC  4        obj not
     C                     PARM           P#ERC   4        error#
     C                     PARM           P#WRC   4        warning#
     C                     PARM           P#ADC   4        address dist
     C                     PARM           P#ANDC  4        address not
      *
      *          ------------------------------------------
      *          Do the init routine
      *          ------------------------------------------
     C                     EXSR SRINIT
      *
      *          ------------------------------------------
      *          Do the processing routine.
      *          ------------------------------------------
     C                     EXSR SRVERW
      *
      *          ------------------------------------------
      *          Do the total last record routine
      *          ------------------------------------------
     C                     EXSR SRTTLR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SRVERW - Main program processing routine                    *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRVERW    BEGSR
      *
      *          ------------------------------------------
      *          Read first W3 to retrieve values
      *          ------------------------------------------
     C           K#TFRC    CHAINOMOW3L1              99
      *
      *          ------------------------------------------
      *          End program when no records in W3
      *          ------------------------------------------
     C           *IN99     IFEQ *ON                        B01
     C                     MOVELC#TERM    P#STAT
     C                     EXSR SRTTLR
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Log the start message
      *          ------------------------------------------
     C                     MOVEAP#TFRC    MC,1
     C                     MOVEAW3FIX#    MC,11
     C                     MOVEAW3RLS#    MC,21
     C                     MOVEAW3ERR#    MC,31
     C                     MOVEAW3APPC    MC,41
     C                     MOVE 'OTP0001' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
      *
      *          ------------------------------------------
      *          Save first librarylist number
      *          ------------------------------------------
     C                     Z-ADDW3SEQ#    S#SEQF
      *
      *          ------------------------------------------
      *          Build Program Tabel For UEP 1
      *          ------------------------------------------
     C                     MOVE *LOVAL    SEXUEP
     C                     MOVE C#XBFX    S#XUEP
     C                     Z-ADD*ZERO     S#XSEL
     C                     EXSR SRXBLD
     C                     Z-ADDS#XSEL    S#XSE1
      *
      *          ------------------------------------------
      *          Process Exceptions for UEP 1
      *          ------------------------------------------
     C                     MOVE C#XBFX    S#XUEP
     C                     EXSR SRXIFA
     C           XEOF      IFEQ *OFF                       B01
     C                     MOVE *OFF      ACT,31
     C                     Z-ADD31        AC
     C                     EXSR SRXPFA
     C           I#QPGM    CABEQ*ON       VERW80
     C                     MOVE *ON       ACT,31
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Process actions for Processing step SP
      *          ------------------------------------------
     C                     MOVEL'SP'      P#PRCS
     C                     MOVE *OFF      ACT,22
     C                     EXSR SRAPPR
     C           I#QPGM    CABEQ*ON       VERW80
     C                     MOVE *ON       ACT,22
      *
      *          ------------------------------------------
      *          Start Phase 1. Create objects in to-envir.
      *          When first record has objc=*NONE then
      *          fix contains no objects. Nothing has to be done
      *          ------------------------------------------
     C           W3OBJC    IFEQ C#NONC                     B01
      *
      *          ------------------------------------------
      *          Update this W3 record with *NORM
      *          ------------------------------------------
     C           RRNW31    CHAINOMOW3                99
     C                     MOVE *BLANK    D#ACTO
     C                     MOVE *ON       ACT,40
     C                     MOVE D#ACTO    W3ACTO
     C                     MOVE C#NORM    W3STAT
     C                     UPDATOMOW3R
     C                     GOTO VERW80
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Build Program Tabel For exception UEP 3
      *          ------------------------------------------
     C                     MOVE C#XBSO    S#XUEP
     C                     Z-ADD*ZERO     S#XSEL
     C                     EXSR SRXBLD
     C                     Z-ADDS#XSEL    S#XSE3
      *
      *          ------------------------------------------
      *          Build Program Tabel For exception UEP 5
      *          ------------------------------------------
     C                     MOVE C#XPRC    S#XUEP
     C                     EXSR SRXBLD
     C                     Z-ADDS#XSEL    S#XSE5
      *
      *          ------------------------------------------
      *          Build Program Tabel For exception UEP 7
      *          ------------------------------------------
     C                     MOVE C#XESO    S#XUEP
     C                     EXSR SRXBLD
     C                     Z-ADDS#XSEL    S#XSE7
      *
      *          ------------------------------------------
      *          Read first W3 record again (why ?)
      *          ------------------------------------------
     C           K#TFRC    CHAINOMOW3L1              99
      *
      *          ------------------------------------------
      *          Process until EOF-W3 or Quit-program
      *          ------------------------------------------
     C           *IN99     DOWEQ*OFF                       B01
     C           I#QPGM    ANDNE*ON
      *
      *          ------------------------------------------
      *          When libl has LBLT=2 we skip this one
      *          ------------------------------------------
     C           W3LBLT    IFEQ '2'                        B02
     C                     Z-ADDW3SEQ#    K#SEQ3
     C           $W31K1    SETGTOMOW3L1
     C           K#TFRC    READEOMOW3L1                  99
     C                     ITER
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Save the first local libl SEQ#
      *          ------------------------------------------
     C           S#SEQ1    IFEQ *ZERO                      B02
     C                     Z-ADDW3SEQ#    S#SEQ1
     C                     MOVE *ON       I#FRST
     C                     ELSE                            X02
     C                     MOVE *OFF      I#FRST
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Init per library-list
      *          ------------------------------------------
     C                     Z-ADDW3SEQ#    S#SEQC
     C                     Z-ADDW3SEQ#    K#SEQ3
     C                     MOVE *OFF      I#QLBL
     C                     MOVE *OFF      S#PF
     C                     MOVE *OFF      S#PFFB
     C                     MOVE *OFF      S#LF
     C                     MOVE *OFF      I#RCRT
     C                     MOVE *ON       I#CRIT
      *
      *          ------------------------------------------
      *          Init arrays with PF's to be processed
      *          ------------------------------------------
     C                     MOVE *OFF      I#PFER           PF error
     C                     MOVE *BLANK    PFP              PF processed
     C                     MOVE *BLANK    PFL              PF library t
     C                     MOVE *BLANK    PFS              PF library s
     C                     MOVE *BLANK    PFF              PF fallback
     C                     Z-ADD999       W#PF#            PF count
      *
      *          ------------------------------------------
      *          Init the count fields per libl
      *          ------------------------------------------
     C                     Z-ADD0         W#OC#
     C                     Z-ADD0         W#ONC#
     C                     Z-ADD0         W#OS#
     C                     Z-ADD0         W#ONS#
     C                     Z-ADD0         W#OR#
     C                     Z-ADD0         W#ONR#
     C                     Z-ADD0         W#ER#
     C                     Z-ADD0         W#WR#
     C                     Z-ADD0         W#DOC#
     C                     Z-ADD0         W#IFS#
      *
      *          ------------------------------------------
      *          Log the start libl message
      *          ------------------------------------------
     C                     MOVEAP#TFRC    MC,1
     C                     MOVEAW3APPC    MC,11
     C                     MOVEAW3TOPL    MC,16
     C                     Z-ADDW3SEQ#    D#SEQ#
     C                     MOVEAD#SEQC    MC,21
     C                     MOVE 'OTP0002' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
      *
      *          ------------------------------------------
      *          Process actions for processing step SL
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,22
     C                     MOVEL'SL'      P#PRCS
     C                     EXSR SRAPPR
     C           I#QPGM    CABEQ*ON       VERW80
     C                     MOVE *ON       ACT,22
      *
      *          ------------------------------------------
      *          Process until eof-libl or Quit-libl
      *          ------------------------------------------
     C           *IN99     DOWEQ*OFF                       B02
     C           I#QLBL    ANDEQ*OFF
      *
      *          ------------------------------------------
      *          Prefill ACT array with W3 values
      *          ------------------------------------------
     C                     MOVE W3ACTO    D#ACTO
      *
      *          ------------------------------------------
      *          Skip dummy record and set to local
      *          ------------------------------------------
     C           W3TOOL    IFEQ *BLANK                     B03
     C           W3SRCL    ANDEQ*BLANK
     C                     MOVE *ON       ACT,40
     C                     MOVE C#NORM    W3STAT
     C                     MOVE *BLANK    W3LBLT
     C                     GOTO VERW20
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Check for a restart of processing
      *          ------------------------------------------
     C           ACT,40    IFEQ *ON                        B03
      *
      *          ------------------------------------------
      *          Seton the Restart indicator
      *          ------------------------------------------
     C                     MOVE *ON       I#RSTR
      *
      *          ------------------------------------------
      *          Skip this record
      *          ------------------------------------------
     C                     GOTO VERW20
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Set the type of processing for object
      *          ------------------------------------------
     C                     EXSR SRTYPE
      *
      *          ------------------------------------------
      *          When SRCP=0 correct the to location
      *          ------------------------------------------
     C           W3SRCP    IFEQ *OFF                       B03
     C                     MOVE W3FSRF    W3SRCF
     C                     MOVE W3FSRL    W3SRCL
     C                     MOVE W3FSRM    W3SRCM
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          When PF processed and this is not PF or LF
      *          ------------------------------------------
     C           S#PF      IFEQ *ON                        B03
     C           I#PF      ANDNE*ON
     C           I#LF      ANDNE*ON
      *
      *          ------------------------------------------
      *          When LF processed and this is not a LF
      *          ------------------------------------------
     C           S#LF      OREQ *ON
     C           I#LF      ANDNE*ON
      *
      *          ------------------------------------------
      *          Save current W3 contents by using ocur
      *          ------------------------------------------
     C                     MOVELD#W3RC    S#W3RC    P
     C           2         OCUR D#W3RC
     C                     MOVELS#W3RC    D#W3RC    P
      *
      *          ------------------------------------------
      *          Check additional LF recreation is necessary
      *          ------------------------------------------
     C                     EXSR SR0053
     C                     MOVE *OFF      S#PF
     C                     MOVE *OFF      S#LF
      *
      *          ------------------------------------------
      *          Reset W3 contents by using ocur
      *          ------------------------------------------
     C           1         OCUR D#W3RC
     C                     MOVELS#W3RC    D#W3RC    P
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Init W3-record, W3ACTO and I#QW3
      *          ------------------------------------------
     C                     MOVE *OFF      I#QW3
     C                     MOVE *BLANK    D#ACTO
     C                     MOVE *OFF      ACT,40
     C                     MOVE D#ACTO    W3ACTO
     C                     MOVE C#ACT     W3STAT
      *
      *          ------------------------------------------
      *          Update W3 record - Read first with lock -
      *          ------------------------------------------
     C                     MOVELD#W3RC    S#W3RC    P
     C           RRNW31    CHAINOMOW3                99
     C                     MOVELS#W3RC    D#W3RC    P
     C                     UPDATOMOW3R
      *
      *          ------------------------------------------
      *          Log the start object message
      *          ------------------------------------------
     C           I#IFS     IFNE *ON                        B03
     C                     MOVEAW3APPC    MC,1
     C                     MOVEAW3FIX#    MC,6
     C                     MOVEAW3OBJC    MC,16
     C                     MOVEAW3OBJT    MC,28
     C                     MOVEAW3TOOL    MC,37
     C           W3MBRC    IFNE *BLANKS                    B04
     C                     MOVEAW3MBRC    MC,47
     C                     ELSE                            X04
     C                     MOVEAC#NONE    MC,47
     C                     ENDIF                           E04
     C                     MOVEAW3FROL    MC,57
     C                     MOVE 'OTP0003' MSGID
      *
     C                     ELSE                            X03
      *
     C                     MOVEAW3OBJT    MC,1
     C                     MOVEAIOB       MC,10
     C                     MOVEAIO1       MC,74
     C                     MOVEAW#TDIR    MC,106
     C                     MOVEAW#FDIR    MC,138
     C                     MOVEAW3FIX#    MC,170
     C                     MOVEAW3APPC    MC,180
     C                     MOVE 'OTP1003' MSGID
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Write Relation Entry (OMOTH)
      *          ------------------------------------------
     C           W3OBJC    IFNE *BLANKS                    B03
     C                     MOVE W3APPC    P#APPC
     C                     MOVE W3FIX#    P#FIX#
     C                     MOVE W3OBJC    P#OBJC
     C                     MOVE W3OBJT    P#OBJT
     C                     MOVE W3OBJA    P#OBJA
     C                     Z-ADDW3VRS#    P#VRS#
     C                     Z-ADDW3MOD#    P#MOD#
     C                     MOVE D#USID    P#USID
     C                     Z-ADDD#JOB#    P#JOB#
     C                     MOVELP#TFRC    P#JOBN
     C                     CALL 'OMI010'  $I010
     C                     ENDIF                           E03
      *
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
      *
      *          ------------------------------------------
      *          Create fall back environment if not already done.
      *          ------------------------------------------
     C                     EXSR SR0006
      *
      *          ------------------------------------------
      *          Different processing for SOLT=9
      *          ------------------------------------------
     C           W3SOLT    IFEQ '9'                        B03
      *
      *          ------------------------------------------
      *          Processing per object class/member etc.
      *          ------------------------------------------
     C           I#DOC     CASEQ*ON       SRDOC9
     C           I#IFS     CASEQ*ON       SRIFS9
     C           I#4GL     CASEQ*ON       SRGL49
     C           I#DTL     CASEQ*ON       SRDTL9
     C           I#TMP     CASEQ*ON       SROBJ9
     C                     CAS            SROBJ9
     C                     ENDCS
     C           I#QW3     CABEQ*ON       VERW20
      *
      *          ------------------------------------------
      *          Set W3 status to created
      *          ------------------------------------------
     C                     MOVE *ON       ACT,40
     C                     MOVE C#CRT     W3STAT
      *
      *          ------------------------------------------
      *          Quit to update and read next
      *          ------------------------------------------
     C                     GOTO VERW20
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Update OMERO for VRS#, MOD# (first libl)
      *          ------------------------------------------
     C           W3SEQ#    IFEQ S#SEQF                     B03
     C                     EXSR SR0041
     C           I#QW3     CABEQ*ON       VERW20
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Update from object
      *          ------------------------------------------
     C                     EXSR SR0042
     C           I#QW3     CABEQ*ON       VERW20
      *
      *          ------------------------------------------
      *          Execute exceptions for UEP 3
      *          ------------------------------------------
     C                     MOVE C#XBSO    S#XUEP
     C                     EXSR SRXIFA
     C           XEOF      IFEQ *OFF                       B03
     C                     Z-ADD4         AC
     C                     MOVE C#XBSO    S#XUEP
     C                     EXSR SRXPFA
     C           I#QW3     CABEQ*ON       VERW20
     C                     MOVE *ON       ACT,4
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Process actions for processing step SO
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,23
     C                     MOVEL'SO'      P#PRCS
     C                     EXSR SRAPPR
     C                     MOVE *ON       ACT,23
      *
      *          ------------------------------------------
      *          Skip dummy record again and set to local
      *          ------------------------------------------
     C           W3TOOL    IFEQ *BLANK                     B03
     C           W3SRCL    ANDEQ*BLANK
     C                     MOVE *ON       ACT,40
     C                     MOVE C#NORM    W3STAT
     C                     MOVE *BLANK    W3LBLT
     C                     GOTO VERW20
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Refresh FROL and TOOL for documents
      *          ------------------------------------------
     C           I#DOC     IFEQ *ON                        B03
     C                     EXSR SRTYPE
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Refresh W3 with OMERO and OMOBJ info
      *          ------------------------------------------
     C                     EXSR SR0045
     C           I#QW3     CABEQ*ON       VERW20
      *
      *          ------------------------------------------
      *          Check "Dubbel Onderhoud" (first libl)
      *          ------------------------------------------
     C           W3SEQ#    IFEQ S#SEQF                     B03
     C                     EXSR SR0091
     C           I#QW3     CABEQ*ON       VERW20
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Register a new Fix number
      *          ------------------------------------------
     C           W3FIX#    IFNE S#FIX#                     B03
     C                     EXSR SR0044
     C           I#QW3     CABEQ*ON       VERW20
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Check source copied before (next libl)
      *          ------------------------------------------
     C                     MOVE *OFF      I#SRCC
     C           W3SEQ#    IFNE S#SEQF                     B03
     C           W3SRCP    IFEQ *ON                        B04
     C           W3SRCL    IFEQ *BLANK                     B05
     C           W3SRCL    OREQ C#NSRC
     C                     EXSR SR0019
     C           I#QW3     CABEQ*ON       VERW20
     C                     ENDIF                           E05
     C                     ENDIF                           E04
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Processing per object class/member etc.
      *          ------------------------------------------
     C           I#DOC     CASEQ*ON       SRDOC
     C           I#IFS     CASEQ*ON       SRIFS
     C           I#4GL     CASEQ*ON       SRGL4
     C           I#DTL     CASEQ*ON       SRDTL
     C           I#TMP     CASEQ*ON       SROBJ
     C                     CAS            SROBJ
     C                     ENDCS
     C           I#QW3     CABEQ*ON       VERW20
      *
      *          ------------------------------------------
      *          Set W3 status to created
      *          ------------------------------------------
     C                     MOVE *ON       ACT,40
     C                     MOVE C#CRT     W3STAT
      *
      *          ------------------------------------------
      *          W3 record has been processed
      *          ------------------------------------------
     C           VERW20    TAG
      *
      *          ------------------------------------------
      *          Check if we processed the critical object
      *          ------------------------------------------
     C           W3OBJC    IFEQ TDTVL1                     B03
     C           W3OBJT    ANDEQTDTVL2
     C           W3OBJA    ANDEQTDTVL3
     C                     MOVE *OFF      I#CRIT
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Count the object created
      *          ------------------------------------------
     C           ACT,12    IFEQ *ON                        B03
     C           ACT,13    OREQ *ON
     C                     ADD  1         W#OC#
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Count the object not created
      *          ------------------------------------------
     C           ACT,12    IFEQ *OFF                       B03
     C           ACT,13    OREQ *OFF
     C                     ADD  1         W#ONC#
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Count the object saved
      *          ------------------------------------------
     C           ACT,8     IFEQ *ON                        B03
     C           ACT,9     OREQ *ON
     C                     ADD  1         W#OS#
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Count the object not saved
      *          ------------------------------------------
     C           ACT,8     IFEQ *OFF                       B03
     C           ACT,9     OREQ *OFF
     C                     ADD  1         W#ONS#
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Run Extended Relations program.
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B03
     C           LCRELI    IFEQ '1'                        B04
     C                     MOVE '2'       P#RELI
     C                     CALL 'OMU001C' $U001C
     C           P#STAT    CASNEC#NORM    SRTTLR
     C                     ENDCS
     C                     ENDIF                           E04
     C                     MOVE *OFF      I#CLBL
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Update W3 record
      *          ------------------------------------------
     C                     MOVE D#ACTO    W3ACTO
      *
      *          ------------------------------------------
      *          Update W3 record - Read first with lock -
      *          ------------------------------------------
     C                     MOVELD#W3RC    S#W3RC    P
     C           RRNW31    CHAINOMOW3                99
     C                     MOVELS#W3RC    D#W3RC    P
     C                     UPDATOMOW3R
      *
      *          ------------------------------------------
      *          Read next W3
      *          ------------------------------------------
     C           $W31K1    READEOMOW3L1                  99
     C                     ENDDO                           E02
      *
      *          ------------------------------------------
      *          This libl has been processed. Check again
      *          if a PF or LF processed.
      *          ------------------------------------------
     C           I#QLBL    IFNE *ON                        B02
     C           S#PF      IFEQ *ON                        B03
     C           S#LF      OREQ *ON
      *
      *          ------------------------------------------
      *          Save the W3 EOF indicator *IN99
      *          ------------------------------------------
     C                     MOVE *IN99     S#IN99
      *
      *          ------------------------------------------
      *          Save current W3 contents by using ocur
      *          ------------------------------------------
     C                     MOVELD#W3RC    S#W3RC    P
     C           2         OCUR D#W3RC
     C                     MOVELS#W3RC    D#W3RC    P
      *
      *          ------------------------------------------
      *          Check additional LF recreation is necessary
      *          ------------------------------------------
     C                     EXSR SR0053
      *
      *          ------------------------------------------
      *          Reset PF processed and EOF W3
      *          ------------------------------------------
     C                     MOVE *OFF      S#PF
     C                     MOVE *OFF      S#LF
     C                     MOVE S#IN99    *IN99
      *
      *          ------------------------------------------
      *          Reset W3 contents by using ocur
      *          ------------------------------------------
     C           1         OCUR D#W3RC
     C                     MOVELS#W3RC    D#W3RC    P
     C                     ENDIF                           E03
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Libl processed. Add the count fields
      *          ------------------------------------------
     C                     ADD  W#OC#     D#OC#
     C                     ADD  W#ONC#    D#ONC#
     C                     ADD  W#OS#     D#OS#
     C                     ADD  W#ONS#    D#ONS#
     C                     ADD  W#OR#     D#OR#
     C                     ADD  W#ONR#    D#ONR#
     C                     ADD  W#ER#     D#ER#
     C                     ADD  W#WR#     D#WR#
      *
      *          ------------------------------------------
      *          Set fields W#LBLE and W#LBLW
      *          ------------------------------------------
     C           I#FRST    IFEQ *ON                        B02
     C           W#ER#     IFGT *ZEROS                     B03
     C                     MOVE '1'       W#LBLE
     C                     ENDIF                           E03
     C           W#WR#     IFGT *ZEROS                     B03
     C                     MOVE '1'       W#LBLW
     C                     ENDIF                           E03
     C                     ELSE                            X02
     C           W#ER#     IFGT *ZEROS                     B03
     C           W#LBLE    ANDNE'1'
     C                     MOVE '2'       W#LBLE
     C                     ENDIF                           E03
     C           W#WR#     IFGT *ZEROS                     B03
     C           W#LBLW    ANDNE'1'
     C                     MOVE '2'       W#LBLW
     C                     ENDIF                           E03
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Process actions for processing step EL
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,24
     C                     MOVEL'EL'      P#PRCS
     C                     EXSR SRAPPR
     C                     MOVE *ON       ACT,24
      *
      *          ------------------------------------------
      *          Libl. processed. Save/Clear FallBack
      *          ------------------------------------------
     C                     EXSR SR0007
      *
      *          ------------------------------------------
      *          Libl. processed. Position to next libl
      *          ------------------------------------------
     C                     Z-ADDS#SEQC    K#SEQ3
     C           $W31K1    SETGTOMOW3L1
     C           K#TFRC    READEOMOW3L1                  99
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          All objects created locally
      *          ------------------------------------------
     C           VERW50    TAG
      *
      *          ------------------------------------------
      *          Quit when I#QPGM is *ON
      *          ------------------------------------------
     C           I#QPGM    CABEQ*ON       VERW80
      *
      *          ------------------------------------------
      *          Start Phase 2. Distribution
      *          Retrieve info about distribution
      *          ------------------------------------------
     C                     MOVE *OFF      S#DSTR
     C                     Z-ADD0         K#TSB#
     C                     MOVEL'START'   K#TKY1    P
     C                     MOVEL'ADDR'    K#TKY2    P
     C           $TD2K1    CHAINOMOTDL2             N9999
     C           *IN99     DOWEQ*OFF                       B01
     C                     MOVELTDTVL1    W#POS1  1
     C           W#POS1    IFNE '*'                        B02
     C                     MOVE *ON       S#DSTR
     C                     LEAVE
     C                     ENDIF                           E02
     C           $TD2K1    READEOMOTDL2             N    99
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          Start distribution
      *          ------------------------------------------
     C           S#DSTR    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Init the count fields parameters
      *          ------------------------------------------
     C                     Z-ADD*ZERO     W#AD#
     C                     Z-ADD*ZERO     W#AND#
      *
      *          ------------------------------------------
      *          Init the other parameters
      *          ------------------------------------------
     C                     MOVE W3FIX#    P#FIX#
     C                     MOVE W3ERR#    P#ERR#
     C                     MOVE W3RLS#    P#RLS#
      *
      *          ------------------------------------------
      *          Process actions for processing step SD
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,32
     C                     MOVEL'SD'      P#PRCS
     C                     EXSR SRAPPR
     C                     MOVE *ON       ACT,32
      *
      *          ------------------------------------------
      *          Continue if 'Distribution allowed' is *ON
      *          ------------------------------------------
     C           I#DSTA    IFEQ *ON                        B02
      *
      *          ------------------------------------------
      *          Fill key fields for format OMOW393 type doc/flr
      *          ------------------------------------------
     C                     MOVE C#ACLS    K#OCLS
      *
      *          ------------------------------------------
      *          Check if an object of class 'A' is about
      *          to be distributed to other systems
      *          ------------------------------------------
     C           $W39K3    SETLLOMOW3L93                 99
      *
      *          ------------------------------------------
      *          Set parameter Create Folder according to
      *          the result of the previous operation
      *          ------------------------------------------
     C                     MOVE *IN99     P#CFLR
      *
      *          ------------------------------------------
      *          Fill key fields for format OMOW393 type IFS
      *          ------------------------------------------
     C                     MOVE C#BCLS    K#OCLS
      *
      *          ------------------------------------------
      *          Check if an object of class 'B' is about
      *          to be distributed to other systems
      *          ------------------------------------------
     C           $W39K3    SETLLOMOW3L93                 99
      *
      *          ------------------------------------------
      *          Set parameter Create Directory according to
      *          the result of the previous operation
      *          ------------------------------------------
     C                     MOVE *IN99     P#CDIR
      *
      *          ------------------------------------------
      *          Call the distribution program
      *          ------------------------------------------
     C                     CALL 'DMD001C' $D001C
      *
      *          ------------------------------------------
      *          Check the result
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B03
      *
      *          ------------------------------------------
      *          When W#AND# is zero add 1 to D#ER#
      *          ------------------------------------------
     C           W#AND#    IFEQ *ZERO                      B04
     C                     ADD  1         D#ER#
     C                     ENDIF                           E04
      *
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Count the result count fields
      *          ------------------------------------------
     C                     ADD  W#AD#     D#AD#
     C                     ADD  W#AND#    D#AND#
     C                     ADD  W#AND#    D#ER#
      *
      *          ------------------------------------------
      *          Process actions for processing step ED
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,32
     C                     MOVEL'ED'      P#PRCS
     C                     EXSR SRAPPR
     C                     MOVE *ON       ACT,32
      *
      *          ------------------------------------------
      *          Else ('Distribution allowed' is *OFF)
      *          ------------------------------------------
     C                     ELSE                            X02
      *
      *          ------------------------------------------
      *          Log message
      *          ------------------------------------------
     C                     MOVE 'DST0007' MSGID
     C                     EXSR SNDMSG
      *
     C                     ENDIF                           E02
      *
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Distribution has been done
      *          ------------------------------------------
     C           VERW60    TAG
      *
      *          ------------------------------------------
      *          Quit when I#QPGM is *ON
      *          ------------------------------------------
     C           I#QPGM    CABEQ*ON       VERW80
      *
      *          ------------------------------------------
      *          Start Phase 3. Remove objects
      *          Build Program Tabel For Exception UEP 8
      *          ------------------------------------------
     C                     MOVE C#XRSO    S#XUEP
     C                     Z-ADD*ZERO     S#XSEL
     C                     EXSR SRXBLD
     C                     Z-ADDS#XSEL    S#XSE8
      *
      *          ------------------------------------------
      *          Init the count fields for removing part
      *          ------------------------------------------
     C                     Z-ADD0         W#OD#
     C                     Z-ADD0         W#OND#
     C                     Z-ADD0         W#ER#
     C                     Z-ADD0         W#WR#
      *
      *          ------------------------------------------
      *          Log message 'Starting clean-up'
      *          ------------------------------------------
     C                     MOVE 'OTP0013' MSGID
     C                     EXSR SNDMSG
      *
      *          ------------------------------------------
      *          Read first W3 again via OMOW3L2
      *          ------------------------------------------
     C           K#TFRC    SETLLOMOW3L2
     C           K#TFRC    READEOMOW3L2                  99
      *
      *          ------------------------------------------
      *          Process until EOF-W3 or Quit-program
      *          ------------------------------------------
     C           *IN99     DOWEQ*OFF                       B01
     C           I#QPGM    ANDNE*ON
      *
      *          ------------------------------------------
      *          Do init of a group.
      *          ------------------------------------------
     C                     MOVE C#NORM    S#SGRP           grp status
     C                     MOVE *OFF      I#OBJC           obj copied
     C                     MOVE *BLANK    S#TOOL
     C                     MOVE *OFF      I#SRCC           src copied
     C                     MOVE *BLANKS   S#TSRL
     C                     MOVE *BLANKS   S#TSRF
     C                     MOVE *BLANKS   S#TSRM
     C                     MOVE *OFF      I#OBJR           obj replaced
     C                     Z-ADD*ZERO     S#VRSR
     C                     Z-ADD*ZERO     S#MODR
     C                     Z-ADD*ZERO     S#SEQL           seq# local
      *
      *          ------------------------------------------
      *          Save keyfields of this group
      *          ------------------------------------------
     C                     MOVE W3SRTC    S#SRTC
     C                     MOVE W3OBJT    S#OBJT
     C                     MOVE W3OBJA    S#OBJA
     C                     MOVE W3OBJC    S#OBJC
     C                     MOVE W3MBRC    S#MBRC
     C                     MOVE W3FROL    S#FROL
     C                     MOVE W3SRTC    K#SRTC
     C                     MOVE W3OBJT    K#OBJT
     C                     MOVE W3OBJA    K#OBJA
     C                     MOVE W3OBJC    K#OBJC
     C                     MOVE W3MBRC    K#MBRC
     C                     MOVE W3FROL    K#FROL
      *
      *          ------------------------------------------
      *          Process this group. Check what happened
      *          ------------------------------------------
     C                     MOVE *OFF      *IN99
     C           *IN99     DOWEQ*OFF                       B02
     C           I#QPGM    ANDNE*ON
     C                     MOVE W3ACTO    D#ACTO
      *
      *          ------------------------------------------
      *          This W3 has error: Set group to error
      *          ------------------------------------------
     C           ACT,40    IFEQ *OFF                       B03
     C                     MOVELC#TERM    S#SGRP
      *
      *          ------------------------------------------
      *          No error for this W3: Analyze it
      *          ------------------------------------------
     C                     ELSE                            X03
      *
      *          ------------------------------------------
      *          Skip distribution only
      *          ------------------------------------------
     C           W3LBLT    IFNE '2'                        B04
      *
      *          ------------------------------------------
      *          Save replaced object info
      *          ------------------------------------------
     C           W3OBJR    IFEQ *ON                        B05
     C           I#OBJR    IFNE *ON                        B06
     C                     MOVE *ON       I#OBJR
     C                     Z-ADDW3VRSR    S#VRSR
     C                     Z-ADDW3MODR    S#MODR
     C                     ENDIF                           E06
     C                     ENDIF                           E05
      *
      *          ------------------------------------------
      *          Save copied source info
      *          ------------------------------------------
     C           ACT,11    IFEQ *ON                        B05
     C           I#SRCC    IFNE *ON                        B06
     C                     MOVE *ON       I#SRCC
     C                     MOVE W3SRCL    S#TSRL
     C                     MOVE W3SRCF    S#TSRF
     C                     MOVE W3SRCM    S#TSRM
     C                     MOVE W3SRCS    S#SRCS
     C                     ENDIF                           E06
     C                     ENDIF                           E05
      *
      *          ------------------------------------------
      *          Save copied object info
      *          ------------------------------------------
     C           ACT,12    IFEQ *ON                        B05
     C           ACT,13    OREQ *ON
     C           I#OBJC    IFNE *ON                        B06
     C                     MOVE *ON       I#OBJC
     C                     MOVE W3TOOL    S#TOOL
     C                     MOVE W3SEQ#    S#SEQL
     C                     ENDIF                           E06
     C                     ENDIF                           E05
     C                     ENDIF                           E04
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Run Extended Relations program.
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B03
     C           LCRELI    IFEQ '1'                        B04
     C                     MOVE '2'       P#RELI
     C                     CALL 'OMU001C' $U001C
     C           P#STAT    CASNEC#NORM    SRTTLR
     C                     ENDCS
     C                     ENDIF                           E04
     C                     MOVE *OFF      I#CLBL
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Read next W3 of this group
      *          ------------------------------------------
     C           $W32K2    READEOMOW3L2                  99
     C                     ENDDO                           E02
      *
      *          ------------------------------------------
      *          Continue when *NORM and locally processed
      *          ------------------------------------------
     C           S#SGRP    IFEQ C#NORM                     B02
     C           I#OBJC    ANDEQ*ON
      *
      *          ------------------------------------------
      *          Postion again to first record of group
      *          ------------------------------------------
     C           $W32K3    SETLLOMOW3L2
     C           $W32K3    READEOMOW3L2                  99
      *
      *          ------------------------------------------
      *          Set solution status / based-on version check
      *          and related applications.
      *          ------------------------------------------
     C                     EXSR SR0093
      *
      *          ------------------------------------------
      *          Process Exception for Exception UEP 8
      *          ------------------------------------------
     C                     MOVE C#XRSO    S#XUEP
     C                     EXSR SRXIFA
     C           XEOF      IFEQ *OFF                       B03
     C                     Z-ADD20        AC
     C                     EXSR SRXPFA
     C                     MOVE *ON       ACT,20
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Do the remove part when moved
      *          ------------------------------------------
     C           W3OPTI    IFEQ 'M'                        B03
      *
      *          ------------------------------------------
      *          Get the type of the W3 record
      *          ------------------------------------------
     C                     EXSR SRTYPE
      *
      *          ------------------------------------------
      *          Processing per object class/member etc.
      *          ------------------------------------------
     C           I#DOC     CASEQ*ON       SROBJR
     C           I#IFS     CASEQ*ON       SROBJR
     C           I#4GL     CASEQ*ON       SROBJR
     C           I#DTL     CASEQ*ON       SRDTLR
     C           I#TMP     CASEQ*ON       SROBJR
     C                     CAS            SROBJR
     C                     ENDCS
     C                     ENDIF                           E03
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Read first record of next group
      *          ------------------------------------------
     C                     MOVE S#SRTC    K#SRTC
     C                     MOVE S#OBJT    K#OBJT
     C                     MOVE S#OBJA    K#OBJA
     C                     MOVE S#OBJC    K#OBJC
     C                     MOVE S#MBRC    K#MBRC
     C                     MOVE S#FROL    K#FROL
     C           $W32K2    SETGTOMOW3L2
     C           K#TFRC    READEOMOW3L2                  99
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          Add the count fields
      *          ------------------------------------------
     C                     ADD  W#OD#     D#OD#
     C                     ADD  W#OND#    D#OND#
     C                     ADD  W#ER#     D#ER#
     C                     ADD  W#WR#     D#WR#
      *
      *          ------------------------------------------
      *          If no object deletion was attempted
      *          whatsoever, then log a confirmation so
      *          that clean-up section will not be empty
      *          ------------------------------------------
     C           W#OD#     IFEQ *ZEROS                     B01
     C           W#OND#    ANDEQ*ZEROS
     C                     MOVE 'DLT0031' MSGID
     C                     EXSR SNDMSG
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          We processed it all (almost)
      *          ------------------------------------------
     C           VERW80    TAG
      *
      *          ------------------------------------------
      *          Final part only when I#QPGM not *ON
      *          ------------------------------------------
     C           I#QPGM    IFNE *ON                        B01
      *
      *          ------------------------------------------
      *          Exception File Processing for UEP 9
      *          Build Program Tabel For Exception UEP 9
      *          ------------------------------------------
     C                     MOVE C#XEFX    S#XUEP
     C                     Z-ADD*ZERO     S#XSEL
     C                     EXSR SRXBLD
     C                     Z-ADDS#XSEL    S#XSE9
      *
      *          ------------------------------------------
      *          Process Exception for Exception UEP 9
      *          ------------------------------------------
     C                     MOVE C#XEFX    S#XUEP
     C                     EXSR SRXIFA
     C           XEOF      IFEQ *OFF                       B02
     C                     Z-ADD30        AC
     C                     EXSR SRXPFA
     C                     MOVE *ON       ACT,30
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Process actions for processing step EP
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,24
     C                     MOVEL'EP'      P#PRCS
     C                     EXSR SRAPPR
     C                     MOVE *ON       ACT,24
      *
      *          ------------------------------------------
      *          End of processing exits processed. Count the
      *          errors and warnings.
      *          ------------------------------------------
     C                     ADD  W#ER#     D#ER#
     C                     ADD  W#WR#     D#WR#
      *
      *          ------------------------------------------
      *          Set fix status.
      *          ------------------------------------------
     C                     EXSR SR0094
      *
      *          ------------------------------------------
      *          Delete fallback library / folder when used
      *          ------------------------------------------
     C           I#FLBC    IFEQ *ON                        B02
     C                     CALL 'OMX990C' $X990C
     C                     ENDIF                           E02
     C           I#DOCC    IFEQ *ON                        B02
     C                     CALL 'OMX809C' $X809C
     C                     ENDIF                           E02
     C           I#IFSC    IFEQ *ON                        B02
     C           '/'       CAT  W#FLBL:0  P#IDRC
     C                     CALL 'OMX409C' $X409C
     C                     ENDIF                           E02
      *
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Move count fields to parameter
      *          ------------------------------------------
     C                     MOVE D#OCC     P#OCC
     C                     MOVE D#ONCC    P#ONCC
     C                     MOVE D#ODC     P#ODC
     C                     MOVE D#ONDC    P#ONDC
     C                     MOVE D#OSC     P#OSC
     C                     MOVE D#ONSC    P#ONSC
     C                     MOVE D#ORC     P#ORC
     C                     MOVE D#ONRC    P#ONRC
     C                     MOVE D#ERC     P#ERC
     C                     MOVE D#WRC     P#WRC
     C                     MOVE D#ADC     P#ADC
     C                     MOVE D#ANDC    P#ANDC
      *
      *          ------------------------------------------
      *          Fill the result message buffer
      *          ------------------------------------------
     C                     MOVEAP#APPC    MC,1
     C                     MOVEAP#FRPL    MC,6
     C                     MOVEAP#TOPL    MC,11
     C                     MOVEAP#TFRC    MC,16
     C                     MOVEAD#ERC     MC,24
     C                     MOVEAD#WRC     MC,28
     C                     MOVEAD#OCC     MC,32
     C                     MOVEAD#ONCC    MC,36
     C                     MOVEAD#ODC     MC,40
     C                     MOVEAD#ONDC    MC,44
     C                     MOVEAD#OSC     MC,48
     C                     MOVEAD#ONSC    MC,52
     C                     MOVEAD#ORC     MC,56
     C                     MOVEAD#ONRC    MC,60
     C                     MOVEAD#ADC     MC,64
     C                     MOVEAD#ANDC    MC,68
     C                     MOVEAMC        MSGDTA
     C           D#ER#     IFNE *ZERO                      B01
     C           I#QPGM    OREQ *ON
     C                     MOVE 'OTP0007' MSGID
     C                     MOVE '1'       P#ERRN
     C                     ELSE                            X01
     C           D#WR#     IFNE *ZERO                      B02
     C                     MOVE 'OTP0008' MSGID
     C                     MOVE '1'       P#ERRN
     C                     ELSE                            X02
     C           D#AD#     IFNE *ZERO                      B03
     C                     MOVE 'OTP0010' MSGID
     C                     MOVE '0'       P#ERRN
     C                     ELSE                            X03
     C                     MOVE 'OTP0009' MSGID
     C                     MOVE '0'       P#ERRN
     C                     ENDIF                           E03
     C                     ENDIF                           E02
     C                     ENDIF                           E01
     C                     EXSR SNDMSG
      *          ------------------------------------------
      *          Write Relation Entry (OMFTH)
      *          ------------------------------------------
     C                     MOVE *BLANKS   P#OBJC
     C                     MOVE W3APPC    P#APPC
     C                     MOVE W3FIX#    P#FIX#
     C                     Z-ADDW3VRS#    P#VRS#
     C                     Z-ADDW3MOD#    P#MOD#
     C                     MOVE D#USID    P#USID
     C                     Z-ADDD#JOB#    P#JOB#
     C                     MOVELP#TFRC    P#JOBN
     C                     CALL 'OMI010'  $I010
      *
      *          ------------------------------------------
      *          Send rebuild relations message
      *          ------------------------------------------
     C                     MOVE 'PRC0006' MSGID
     C                     EXSR SNDMSG
      *
      *          ------------------------------------------
      *          Close API's and rebuild relations
      *          ------------------------------------------
     C                     CALL 'OMX940'
     C                     CALL 'OMQCHGSO'
      *
      *          ------------------------------------------
      *          Close W4 and process jobrel
      *          ------------------------------------------
     C           I#OPW4    IFEQ *ON                        B01
     C                     CLOSEOMO001W4               99
     C                     MOVE *OFF      I#OPW4
     C                     ENDIF                           E01
      *
     C                     MOVE '80'      O4ACTC
     C                     MOVE *ON       O4EOP
     C                     MOVE *ON       O4UPD
     C                     MOVE *BLANK    O4JOBA
     C                     CALL 'OMQCHGOB'$QCHGO
      *
      *          ------------------------------------------
      *          Close CHGVAROMS convertor.
      *          ------------------------------------------
     C           I#X303    IFEQ *ON                        B01
     C                     CALL 'OMX303'
     C                     MOVE *OFF      I#X303
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Close excpetion command variable substitutor
      *          ------------------------------------------
     C           I#X304    IFEQ *ON                        B01
     C                     CALL 'OMX304'
     C                     MOVE *OFF      I#X304
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Close Action selection program
      *          ------------------------------------------
     C           I#C007    IFEQ *ON                        B01
     C                     CALL 'OMC007'
     C                     MOVE *OFF      I#C007
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Start cleaning when no errors
      *          ------------------------------------------
     C           D#ER#     IFEQ *ZERO                      B01
     C           I#QPGM    ANDNE*ON
      *
      *          ------------------------------------------
      *          Do the cleaning for OMOW3
      *          ------------------------------------------
     C           K#TFRC    CHAINOMOW3L1              99
     C           *IN99     DOWEQ*OFF                       B02
     C           RRNW31    CHAINOMOW3                99
     C                     DELETOMOW3R
     C           K#TFRC    CHAINOMOW3L1              99
     C                     ENDDO                           E02
      *
      *          ------------------------------------------
      *          Do the cleaning for OMOTD
      *          ------------------------------------------
     C           K#TFRC    CHAINOMOTDL2              99
     C           *IN99     DOWEQ*OFF                       B02
     C                     DELETOMOTDR
     C           K#TFRC    CHAINOMOTDL2              99
     C                     ENDDO                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          When monitoring inform sender we ended
      *          ------------------------------------------
     C           I#RCVM    IFEQ *ON                        B01
     C           D#MONI    ANDEQ*ON
     C           D#ER#     IFNE *ZERO                      B02
     C           I#QPGM    OREQ *ON
     C                     MOVEL'*ERR'    P#ACTI    P
     C                     ELSE                            X02
     C                     MOVEL'*END'    P#ACTI    P
     C                     ENDIF                           E02
     C                     CALL 'OMX994C' $X994C
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set the result parameter
      *          ------------------------------------------
     C           D#ER#     IFNE *ZERO                      B01
     C           I#QPGM    OREQ *ON
     C                     MOVELC#TERM    P#STAT    P
     C                     ELSE                            X01
     C                     MOVELC#NORM    P#STAT    P
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           VERW99    TAG
     C                     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SRTYPE - Set the type of the W3 processing record           *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRTYPE    BEGSR
      *
      *          ------------------------------------------
      *          Set the type of processing for object
      *          ------------------------------------------
     C                     MOVE *BLANK    D#TYPE
      *
      *          ------------------------------------------
      *          Documents
      *          ------------------------------------------
     C                     SELEC                           B01
     C           W3OCLS    WHEQ 'A'                        X01
     C                     MOVE *ON       I#DOC
      *
      *                    --------------------------------
      *                    Open OMHFS when not open
      *                    --------------------------------
     C           I#OHFS    IFNE *ON                        B02
     C                     OPEN OMHFSL1
     C                     MOVE *ON       I#OHFS
     C                     ENDIF                           E02
      *
      *                    --------------------------------
      *                    Get the from-foldername for documents
      *                    --------------------------------
     C           W3FROL    CHAINOMHFSL1              99
      *
      *                    --------------------------------
      *                    If no record found in OMHFSL1
      *                    --------------------------------
     C           *IN99     IFEQ *ON                        B02
      *
      *                    --------------------------------
      *                    Use W3FROL directly as a folder name, and
      *                    check if document can be found in W3FROL
      *                    --------------------------------
     C                     MOVE W3OBJC    P#OBJC
     C                     MOVELW3FROL    P#FLRC    P
     C                     MOVE W3OBJT    P#OBJT
     C                     CALL 'OMX813C' $X813C
      *
      *                    --------------------------------
      *                    If return status is *NORM, then document
      *                    was found - use W3FROL for field W#FFLR.
      *                    Else signal an error situation.
      *                    --------------------------------
     C           P#STAT    IFEQ C#NORM                     B03
     C                     MOVE *ON       ACT,28
     C                     MOVELW3FROL    W#FFLR
     C                     ELSE                            X03
     C                     MOVE *OFF      ACT,28
     C                     MOVE *BLANK    W#FFLR
     C                     EXSR SRERR
     C                     ENDIF                           E03
      *
      *                    --------------------------------
      *                    Else (record found in OMHFSL1)
      *                    --------------------------------
     C                     ELSE                            X02
      *
      *                    --------------------------------
      *                    Use the folder name found in OMHFSL1
      *                    --------------------------------
     C                     MOVE *ON       ACT,28
     C                     MOVELFSFLRC    W#FFLR
      *
     C                     ENDIF                           E02
      *
      *                    --------------------------------
      *                    Get the to-foldername for documents
      *                    --------------------------------
     C           W3TOOL    CHAINOMHFSL1              99
     C           *IN99     IFEQ *ON                        B02
     C                     MOVE *BLANK    W#TFLR
     C                     ELSE                            X02
     C                     MOVELFSFLRC    W#TFLR
     C                     ENDIF                           E02
      *
      * ***      ------------------------------------------
      * ***      IFS objects
      * ***      ------------------------------------------
     C           W3OCLS    WHEQ 'B'                        X01
     C                     MOVE *ON       I#IFS
      *
      *                    --------------------------------
      *                    Open IFS files when not open
      *                    --------------------------------
     C           I#OIFS    IFNE *ON                        B02
     C                     OPEN OMIOPL1
     C                     OPEN OMIONL1
     C                     MOVE *ON       I#OIFS
     C                     ENDIF                           E02
      *
      *                    --------------------------------
      *                    Get the object name
      *                    --------------------------------
     C           W3OBJC    CHAINOMIONL1              99
     C           *IN99     IFEQ *ON                        B02
     C                     MOVE *OFF      ACT,28
     C                     MOVE *BLANK    W#FDIR
     C                     EXSR SRERR
     C                     ENDIF                           E02
      *
      *                    --------------------------------
      *                    Get the from-foldername for documents
      *                    --------------------------------
     C           W3FROL    CHAINOMIOPL1              99
      *
      *                    --------------------------------
      *                    If no record found in OMIOPL1
      *                    --------------------------------
     C           *IN99     IFEQ *ON                        B02
     C                     MOVE *OFF      ACT,28
     C                     MOVE *BLANK    W#FDIR
     C                     EXSR SRERR
      *
      *                    --------------------------------
      *                    Else (record found in OMIOPL1)
      *                    --------------------------------
     C                     ELSE                            X02
      *
      *                    --------------------------------
      *                    Use the directory found in OMIOPL1
      *                    --------------------------------
     C                     MOVE *ON       ACT,28
     C                     MOVEAID1       W#FDIR
      *
     C                     ENDIF                           E02
      *
      *                    --------------------------------
      *                    Get the target directory documents
      *                    --------------------------------
     C           W3TOOL    CHAINOMIOPL1              99
     C           *IN99     IFEQ *ON                        B02
     C                     MOVE *BLANK    W#TDIR
     C                     ELSE                            X02
     C                     MOVEAID1       W#TDIR
     C                     ENDIF                           E02
      *
      *                    --------------------------------
      *                    Create the full path (From & To)
      *                    --------------------------------
     C                     MOVEAIO1       W#TFPC
     C           W#TDIR    CAT  W#TFPC:0  W#TFPC
     C                     MOVEAW#TFPC    IOB
      *
     C                     MOVEAIO1       W#FFPC
     C           W#FDIR    CAT  W#FFPC:0  W#FFPC
      *
      *          ------------------------------------------
      *          Object class other than '0' then 4GL
      *          ------------------------------------------
     C           W3OCLS    WHNE *OFF                       X01
     C                     MOVE *ON       I#4GL
      *
      *          ------------------------------------------
      *          Check if this is a detail
      *          ------------------------------------------
     C           W3MBRC    WHNE *BLANK                     X01
     C                     MOVE *ON       I#DTL
      *
      *          ------------------------------------------
      *          Further specification for details
      *          ------------------------------------------
     C                     SELEC                           B02
     C           W3SRCP    WHEQ *ON                        X02
     C                     MOVE *ON       I#DTLS
     C           W3OBJT    WHEQ C#MSGF                     X02
     C                     MOVE *ON       I#DTLM
     C           W3OBJA    WHEQ C#PF                       X02
     C                     MOVE *ON       I#DTLP
     C           W3OBJA    WHEQ C#PF38                     X02
     C                     MOVE *ON       I#DTLP
     C           W3OBJA    WHEQ C#LF                       X02
     C                     MOVE *ON       I#DTLL
     C           W3OBJA    WHEQ C#LF38                     X02
     C                     MOVE *ON       I#DTLL
     C                     ENDSL                           E02
      *
      *          ------------------------------------------
      *          Continue with OS/400 objects
      *          ------------------------------------------
     C                     OTHER                           X01
     C           W3EXCI    IFEQ *ON                        B02
     C                     MOVE *ON       I#TMP
     C                     ENDIF                           E02
     C                     SELEC                           B02
     C           W3OBJA    WHEQ C#PF                       X02
     C                     MOVE *ON       I#PF
     C           W3OBJA    WHEQ C#PF38                     X02
     C                     MOVE *ON       I#PF
     C           W3OBJA    WHEQ C#LF                       X02
     C                     MOVE *ON       I#LF
     C           W3OBJA    WHEQ C#LF38                     X02
     C                     MOVE *ON       I#LF
     C                     OTHER                           X02
     C                     MOVE *ON       I#OTH
     C                     ENDSL                           E02
     C           W3OBJT    IFEQ C#MOD                      B02
     C           W3OBJT    OREQ C#SRV                      B02
     C                     MOVE *ON       I#ILE
     C                     ENDIF                           E02
     C                     ENDSL                           E01
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           TYP99     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SROBJ9 - Processing for solution type = 9 *TERMINATE        *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SROBJ9    BEGSR
      *
      *          ------------------------------------------
      *          Check if from-object record can be found
      *          ------------------------------------------
     C                     MOVELW3OBJC    K#OBJC    P
     C                     MOVE W3OBJT    K#OBJT
     C                     MOVE W3FROL    K#OBJL
     C           $BJ8K1    CHAINOMOBJL8             N9999
      *
      *          ------------------------------------------
      *          Fill from values when found
      *          ------------------------------------------
     C           *IN99     IFNE *ON                        B01
     C                     MOVE RJSRCF    W3FSRF
     C                     MOVE RJSRCL    W3FSRL
     C                     MOVE RJSRCM    W3FSRM
     C                     MOVE RJSRCS    W3SRCS
     C                     ELSE                            X01
     C                     MOVE *BLANK    W3FSRF
     C                     MOVE *BLANK    W3FSRL
     C                     MOVE *BLANK    W3FSRM
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Add to-object (in case not loaded)
      *          ------------------------------------------
     C                     MOVE '60'      O4ACTC
     C                     MOVE *BLANK    O4EOP
     C                     MOVE *BLANK    O4W4
     C                     MOVE *BLANK    O4PRT
     C                     MOVE *BLANK    O4PR2
     C                     MOVE *ON       O4UPD
     C                     MOVE *ON       O4UPB
     C                     MOVE *ON       O4LIB
     C                     MOVE W3APPC    O4APPC
     C                     MOVE W3TOPL    O4PDLC
     C                     MOVE W3OBJC    O4OBJC
     C                     MOVE W3TOOL    O4OBJL
     C                     MOVE W3OBJT    O4OBJT
     C                     MOVELC#OBJD    O4OBJA    P
     C                     MOVELC#OBJD    O4OBJD    P
     C                     MOVELC#OBJD    O4OCRT    P
     C                     MOVELC#SAME    O4SRCL    P
     C                     MOVELC#SAME    O4SRCF    P
     C                     MOVELC#SAME    O4SRCM    P
     C                     MOVELC#SAME    O4SRCS
     C                     MOVE *BLANK    O4SRCX
     C                     MOVE *BLANK    O4OBJX
     C                     MOVE *BLANK    O4FIX#
     C                     MOVELC#SAME    O4USDF
     C                     MOVE *OFF      O4EXCI
     C                     MOVE W3OCLS    O4OCLS
     C                     Z-ADD0         O4VRS#
     C                     Z-ADD0         O4MOD#
     C                     MOVE *BLANK    O4CHGX
     C                     CALL 'OMQCHGOB'$QCHGO
      *
      *          ------------------------------------------
      *          Check if to-object record can be found
      *          ------------------------------------------
     C                     MOVE W3TOOL    K#OBJL
     C           $BJ8K1    CHAINOMOBJL8             N9999
      *
      *          ------------------------------------------
      *          Fill to values when found
      *          ------------------------------------------
     C           *IN99     IFNE *ON                        B01
     C           W3SRCL    ANDNE*BLANK
     C                     MOVE RJSRCF    W3SRCF
     C                     MOVE RJSRCM    W3SRCM
     C                     ELSE                            X01
     C                     MOVE *BLANK    W3SRCF
     C                     MOVE *BLANK    W3SRCL
     C                     MOVE *BLANK    W3SRCM
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Update OMERO for VRS#, MOD# (first libl)
      *          ------------------------------------------
     C           W3SEQ#    IFEQ S#SEQF                     B01
     C                     EXSR SR0041
     C           I#QW3     CABEQ*ON       OBJ999
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Register a new Fix number
      *          ------------------------------------------
     C           W3FIX#    IFNE S#FIX#                     B01
     C                     EXSR SR0044
     C           I#QW3     CABEQ*ON       OBJ999
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          First some actions for object with source
      *          ------------------------------------------
     C           W3SRCP    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Dump from source if required
      *          ------------------------------------------
     C           PPDMPL    IFNE *BLANK                     B02
     C           W3FSRL    ANDNE*BLANK
     C                     EXSR SR0018
     C           I#QW3     CABEQ*ON       OBJ999
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Move to-source to fall-back
      *          ------------------------------------------
     C           W3FLBI    IFNE *OFF                       B02
     C           I#PF      OREQ *ON
     C           I#LF      OREQ *ON
     C                     EXSR SR0004
     C           I#QW3     CABEQ*ON       OBJ999
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Move to-object to fall-back
      *          ------------------------------------------
     C           W3FLBI    IFNE *OFF                       B01
     C           I#PF      OREQ *ON
     C           I#LF      OREQ *ON
     C                     EXSR SR0005
     C           I#QW3     CABEQ*ON       OBJ999
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set dummy *ON to object created
      *          ------------------------------------------
     C                     MOVE *ON       ACT,12
      *
      *          ------------------------------------------
      *          Delete the object record, object and source
      *          ------------------------------------------
     C                     EXSR SR0016
     C           I#QW3     CABEQ*ON       OBJ999
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           OBJ999    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SRDOC9 - Processing for solution type = 9 *TERMINATE        *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRDOC9    BEGSR
      *
      *          ------------------------------------------
      *          Check if from-object record can be found
      *          ------------------------------------------
     C                     MOVELW3OBJC    K#OBJC    P
     C                     MOVE W3OBJT    K#OBJT
     C                     MOVE W3FROL    K#OBJL
     C           $BJ8K1    CHAINOMOBJL8             N9999
      *
      *          ------------------------------------------
      *          Fill from values when found
      *          ------------------------------------------
     C           *IN99     IFNE *ON                        B01
     C                     MOVE RJSRCF    W3FSRF
     C                     MOVE RJSRCL    W3FSRL
     C                     MOVE RJSRCM    W3FSRM
     C                     MOVE RJSRCS    W3SRCS
     C                     ELSE                            X01
     C                     MOVE *BLANK    W3FSRF
     C                     MOVE *BLANK    W3FSRL
     C                     MOVE *BLANK    W3FSRM
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Add to-object (in case not loaded)
      *          ------------------------------------------
     C                     MOVE '60'      O4ACTC
     C                     MOVE *BLANK    O4EOP
     C                     MOVE *BLANK    O4W4
     C                     MOVE *BLANK    O4PRT
     C                     MOVE *BLANK    O4PR2
     C                     MOVE *ON       O4UPD
     C                     MOVE *ON       O4UPB
     C                     MOVE *ON       O4LIB
     C                     MOVE W3APPC    O4APPC
     C                     MOVE W3TOPL    O4PDLC
     C                     MOVE W3OBJC    O4OBJC
     C                     MOVE W3TOOL    O4OBJL
     C                     MOVE W3OBJT    O4OBJT
     C                     MOVELC#OBJD    O4OBJA    P
     C                     MOVELC#OBJD    O4OBJD    P
     C                     MOVELC#OBJD    O4OCRT    P
     C                     MOVELC#SAME    O4SRCL    P
     C                     MOVELC#NONE    O4SRCF    P
     C                     MOVELC#SAME    O4SRCM    P
     C                     MOVELC#SAME    O4SRCS
     C                     MOVE *BLANK    O4SRCX
     C                     MOVE *BLANK    O4OBJX
     C                     MOVE *BLANK    O4FIX#
     C                     MOVELC#SAME    O4USDF
     C                     MOVE *OFF      O4EXCI
     C                     MOVE W3OCLS    O4OCLS
     C                     Z-ADD0         O4VRS#
     C                     Z-ADD0         O4MOD#
     C                     MOVE *BLANK    O4CHGX
     C                     CALL 'OMQCHGOB'$QCHGO
      *
      *          ------------------------------------------
      *          Check if to-object record can be found
      *          ------------------------------------------
     C                     MOVE W3TOOL    K#OBJL
     C           $BJ8K1    CHAINOMOBJL8             N9999
      *
      *          ------------------------------------------
      *          Fill to values when found
      *          ------------------------------------------
     C           *IN99     IFNE *ON                        B01
     C           W3SRCL    ANDNE*BLANK
     C                     MOVE RJSRCF    W3SRCF
     C                     MOVE RJSRCM    W3SRCM
     C                     ELSE                            X01
     C                     MOVE *BLANK    W3SRCF
     C                     MOVE *BLANK    W3SRCL
     C                     MOVE *BLANK    W3SRCM
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Update OMERO for VRS#, MOD# (first libl)
      *          ------------------------------------------
     C           W3SEQ#    IFEQ S#SEQF                     B01
     C                     EXSR SR0041
     C           I#QW3     CABEQ*ON       DOC999
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Register a new Fix number
      *          ------------------------------------------
     C           W3FIX#    IFNE S#FIX#                     B01
     C                     EXSR SR0044
     C           I#QW3     CABEQ*ON       DOC999
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          First some actions for object with source
      *          ------------------------------------------
     C           W3SRCP    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Dump from source if required
      *          ------------------------------------------
     C           PPDMPL    IFNE *BLANK                     B02
     C           W3FSRL    ANDNE*BLANK
     C                     EXSR SR0018
     C           I#QW3     CABEQ*ON       DOC999
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Move to-source to fall-back
      *          ------------------------------------------
     C           W3FLBI    IFNE *OFF                       B02
     C                     EXSR SR0004
     C           I#QW3     CABEQ*ON       DOC999
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Move to-object to fall-back
      *          ------------------------------------------
     C           W3FLBI    IFNE *OFF                       B01
     C                     EXSR SR0061
     C           I#QW3     CABEQ*ON       DOC999
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set dummy *ON to object created
      *          ------------------------------------------
     C                     MOVE *ON       ACT,12
      *
      *          ------------------------------------------
      *          Delete the object record, object and source
      *          ------------------------------------------
     C                     EXSR SR0016
     C           I#QW3     CABEQ*ON       DOC999
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           DOC999    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SRIFS9 - Processing for solution type = 9 *TERMINATE        *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRIFS9    BEGSR
      *
      *          ------------------------------------------
      *          Check if from-object record can be found
      *          ------------------------------------------
     C                     MOVELW3OBJC    K#OBJC    P
     C                     MOVE W3OBJT    K#OBJT
     C                     MOVE W3FROL    K#OBJL
     C           $BJ8K1    CHAINOMOBJL8             N9999
      *
      *          ------------------------------------------
      *          Fill from values when found
      *          ------------------------------------------
     C           *IN99     IFNE *ON                        B01
     C                     MOVE RJSRCF    W3FSRF
     C                     MOVE RJSRCL    W3FSRL
     C                     MOVE RJSRCM    W3FSRM
     C                     MOVE RJSRCS    W3SRCS
     C                     ELSE                            X01
     C                     MOVE *BLANK    W3FSRF
     C                     MOVE *BLANK    W3FSRL
     C                     MOVE *BLANK    W3FSRM
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Add to-object (in case not loaded)
      *          ------------------------------------------
     C                     MOVE '60'      O4ACTC
     C                     MOVE *BLANK    O4EOP
     C                     MOVE *BLANK    O4W4
     C                     MOVE *BLANK    O4PRT
     C                     MOVE *BLANK    O4PR2
     C                     MOVE *ON       O4UPD
     C                     MOVE *ON       O4UPB
     C                     MOVE *ON       O4LIB
     C                     MOVE W3APPC    O4APPC
     C                     MOVE W3TOPL    O4PDLC
     C                     MOVELC#IFSO    O4OBJC    P
     C                     MOVE *BLANKS   O4OBJL
     C                     MOVE W3OBJT    O4OBJT
     C                     MOVELC#OBJD    O4OBJA    P
     C                     MOVELC#OBJD    O4OBJD    P
     C                     MOVELC#OBJD    O4OCRT    P
     C                     MOVELC#SAME    O4SRCL    P
     C                     MOVELC#NONE    O4SRCF    P
     C                     MOVELC#SAME    O4SRCM    P
     C                     MOVELC#SAME    O4SRCS
     C                     MOVE *BLANK    O4SRCX
     C                     MOVE *BLANK    O4OBJX
     C                     MOVE *BLANK    O4FIX#
     C                     MOVELC#SAME    O4USDF
     C                     MOVE *OFF      O4EXCI
     C                     MOVE W3OCLS    O4OCLS
     C                     Z-ADD0         O4VRS#
     C                     Z-ADD0         O4MOD#
     C                     MOVE *BLANK    O4CHGX
     C                     MOVEAW#FFPC    IOB
     C                     CALL 'OMQCHGOB'$QCHGO
      *
      *          ------------------------------------------
      *          Check if to-object record can be found
      *          ------------------------------------------
     C                     MOVE W3TOOL    K#OBJL
     C           $BJ8K1    CHAINOMOBJL8             N9999
      *
      *          ------------------------------------------
      *          Fill to values when found
      *          ------------------------------------------
     C           *IN99     IFNE *ON                        B01
     C           W3SRCL    ANDNE*BLANK
     C                     MOVE RJSRCF    W3SRCF
     C                     MOVE RJSRCM    W3SRCM
     C                     ELSE                            X01
     C                     MOVE *BLANK    W3SRCF
     C                     MOVE *BLANK    W3SRCL
     C                     MOVE *BLANK    W3SRCM
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Update OMERO for VRS#, MOD# (first libl)
      *          ------------------------------------------
     C           W3SEQ#    IFEQ S#SEQF                     B01
     C                     EXSR SR0041
     C           I#QW3     CABEQ*ON       IFS999
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Register a new Fix number
      *          ------------------------------------------
     C           W3FIX#    IFNE S#FIX#                     B01
     C                     EXSR SR0044
     C           I#QW3     CABEQ*ON       IFS999
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          First some actions for object with source
      *          ------------------------------------------
     C           W3SRCP    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Dump from source if required
      *          ------------------------------------------
     C           PPDMPL    IFNE *BLANK                     B02
     C           W3FSRL    ANDNE*BLANK
     C                     EXSR SR0018
     C           I#QW3     CABEQ*ON       IFS999
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Move to-source to fall-back
      *          ------------------------------------------
     C           W3FLBI    IFNE *OFF                       B02
     C                     EXSR SR0004
     C           I#QW3     CABEQ*ON       IFS999
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Move to-object to fall-back
      *          ------------------------------------------
     C           W3FLBI    IFNE *OFF                       B01
     C                     EXSR SR0061
     C           I#QW3     CABEQ*ON       IFS999
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set dummy *ON to object created
      *          ------------------------------------------
     C                     MOVE *ON       ACT,12
      *
      *          ------------------------------------------
      *          Delete the object record, object and source
      *          ------------------------------------------
     C                     EXSR SR0016
     C           I#QW3     CABEQ*ON       IFS999
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           IFS999    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SRGL49 - Processing for solution type = 9 *TERMINATE        *
      *          for solution of type 4GL                           *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRGL49    BEGSR
      *
      *          ------------------------------------------
      *          Check if from-object record can be found
      *          ------------------------------------------
     C                     MOVELW3OBJC    K#OBJC    P
     C                     MOVE W3OBJT    K#OBJT
     C                     MOVE W3FROL    K#OBJL
     C           $BJ8K1    CHAINOMOBJL8             N9999
      *
      *          ------------------------------------------
      *          Fill from values when found
      *          ------------------------------------------
     C           *IN99     IFNE *ON                        B01
     C                     MOVE RJSRCF    W3FSRF
     C                     MOVE RJSRCL    W3FSRL
     C                     MOVE RJSRCM    W3FSRM
     C                     MOVE RJSRCS    W3SRCS
     C                     ELSE                            X01
     C                     MOVE *BLANK    W3FSRF
     C                     MOVE *BLANK    W3FSRL
     C                     MOVE *BLANK    W3FSRM
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check if to-object record can be found
      *          ------------------------------------------
     C                     MOVE W3TOOL    K#OBJL
     C           $BJ8K1    CHAINOMOBJL8             N9999
      *
      *          ------------------------------------------
      *          Fill to values when found
      *          ------------------------------------------
     C           *IN99     IFNE *ON                        B01
     C           W3SRCL    ANDNE*BLANK
     C                     MOVE RJSRCF    W3SRCF
     C                     MOVE RJSRCM    W3SRCM
     C                     ELSE                            X01
     C                     MOVE *BLANK    W3SRCF
     C                     MOVE *BLANK    W3SRCL
     C                     MOVE *BLANK    W3SRCM
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Update OMERO for VRS#, MOD# (first libl)
      *          ------------------------------------------
     C           W3SEQ#    IFEQ S#SEQF                     B01
     C                     EXSR SR0041
     C           I#QW3     CABEQ*ON       GL4999
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Register a new Fix number
      *          ------------------------------------------
     C           W3FIX#    IFNE S#FIX#                     B01
     C                     EXSR SR0044
     C           I#QW3     CABEQ*ON       GL4999
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          First some actions for object with source
      *          ------------------------------------------
     C           W3SRCP    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Dump from source if required
      *          ------------------------------------------
     C           PPDMPL    IFNE *BLANK                     B02
     C           W3FSRL    ANDNE*BLANK
     C                     EXSR SR0018
     C           I#QW3     CABEQ*ON       GL4999
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Move to-source to fall-back
      *          ------------------------------------------
     C           W3FLBI    IFNE *OFF                       B02
     C                     EXSR SR0004
     C           I#QW3     CABEQ*ON       GL4999
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          No Move to-object to fall-back
      *          ------------------------------------------
      *
      *          ------------------------------------------
      *          Set dummy *ON to object created
      *          ------------------------------------------
     C                     MOVE *ON       ACT,12
      *
      *          ------------------------------------------
      *          Delete the object record, object and source
      *          ------------------------------------------
     C                     EXSR SR0016
     C           I#QW3     CABEQ*ON       GL4999
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           GL4999    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SRDTL9 - Processing for solution type = 9 *TERMINATE        *
      *          for details                                        *
      *                                                             *
      * In the W3 file for all details only the following fields    *
      * are filled concerning the location.                         *
      *                                                             *
      *     W3OBJC, W3OBJT, W3MBRC, W3FROL, W3TOOL                  *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRDTL9    BEGSR
      *
      *          ------------------------------------------
      *          Fill source fields when necessary
      *          ------------------------------------------
     C           I#DTLS    IFEQ *ON                        B01
     C                     MOVELW3OBJC    W3FSRF    P
     C                     MOVE W3FROL    W3FSRL
     C                     MOVE W3MBRC    W3FSRM
     C                     MOVELW3OBJC    W3SRCF    P
     C                     MOVE W3TOOL    W3SRCL
     C                     MOVE W3MBRC    W3SRCM
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Update OMERO for VRS#, MOD# (first libl)
      *          ------------------------------------------
     C           W3SEQ#    IFEQ S#SEQF                     B01
     C                     EXSR SR0041
     C           I#QW3     CABEQ*ON       DTL999
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Register a new Fix number
      *          ------------------------------------------
     C           W3FIX#    IFNE S#FIX#                     B01
     C                     EXSR SR0044
     C           I#QW3     CABEQ*ON       DTL999
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          First some actions for detail source
      *          ------------------------------------------
     C           I#DTLS    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Dump from source if required
      *          ------------------------------------------
     C           PPDMPL    IFNE *BLANK                     B02
     C           W3FSRL    ANDNE*BLANK
     C                     EXSR SR0018
     C           I#QW3     CABEQ*ON       DTL999
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Copy to-source to fall-back
      *          ------------------------------------------
     C           W3FLBI    IFNE *OFF                       B02
     C                     EXSR SR0004
     C           I#QW3     CABEQ*ON       DTL999
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          This detail is not a source
      *          ------------------------------------------
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Detail is a message
      *          ------------------------------------------
     C           I#DTLM    IFEQ *ON                        B02
      *
      *          ------------------------------------------
      *          Copy to-detail (no source) to fall-back
      *          ------------------------------------------
     C           W3FLBI    IFNE *OFF                       B03
     C                     EXSR SR0008
     C           I#QW3     CABEQ*ON       DTL999
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          This detail is not a message
      *          ------------------------------------------
     C                     ELSE                            X02
     C                     GOTO DTL999
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check if to-detail exists
      *          ------------------------------------------
     C                     MOVE W3TOOL    P#OBJL
     C                     MOVELW3OBJC    P#OBJC    P
     C                     MOVE W3MBRC    P#MBRC
     C                     MOVELW3OBJT    P#OBJT    P
     C                     CALL 'OMX909C' $X909C
      *
      *          ------------------------------------------
      *          Assume created when no detail
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     MOVE *ON       ACT,12
     C                     GOTO DTL999
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Init the object created indicator
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,12
      *
      *          ------------------------------------------
      *          Fill the S# fields required for SR0021
      *          ------------------------------------------
     C                     MOVELW3OBJC    S#DTLF    P
     C                     MOVE W3OBJT    S#DTLT
     C                     MOVE W3TOOL    S#DTLL
     C                     MOVE W3MBRC    S#DTLM
      *
      *          ------------------------------------------
      *          Delete the detail record and detail itself
      *          ------------------------------------------
     C                     EXSR SR0021
     C           I#QW3     CABEQ*ON       DTL999
      *
      *          ------------------------------------------
      *          Set the object created indicator
      *          ------------------------------------------
     C                     MOVE *ON       ACT,12
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           DTL999    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SROBJ  - Processing for a single OS/400 object              *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SROBJ     BEGSR
      *
      *          ------------------------------------------
      *          Check if from-object exist
      *          ------------------------------------------
     C                     EXSR SR0002
     C           I#QW3     CABEQ*ON       OBJ99
      *
      *          ------------------------------------------
      *          First some actions for object with source
      *          ------------------------------------------
     C           W3SRCP    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Check if from source exists
      *          ------------------------------------------
     C                     EXSR SR0003
     C           I#QW3     CABEQ*ON       OBJ99
      *
      *          ------------------------------------------
      *          Dump from source if required
      *          ------------------------------------------
     C           PPDMPL    IFNE *BLANKS                    B02
     C                     EXSR SR0018
     C           I#QW3     CABEQ*ON       OBJ99
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Move to-source to fall-back
      *          ------------------------------------------
     C           W3FLBI    IFNE *OFF                       B02
     C           I#PF      OREQ *ON
     C           I#LF      OREQ *ON
     C                     EXSR SR0004
     C           I#QW3     CABEQ*ON       OBJ99
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Move to-object to fall-back
      *          ------------------------------------------
     C           W3FLBI    IFNE *OFF                       B01
     C           I#PF      OREQ *ON
     C           I#LF      OREQ *ON
     C           W3CATT    OREQ *ON
     C           W3CAUT    OREQ *ON
     C                     EXSR SR0005
     C           I#QW3     CABEQ*ON       OBJ99
      *
      *          ------------------------------------------
      *          Delete to-object
      *          ------------------------------------------
     C                     ELSE                            X01
     C                     EXSR SR0013
     C           I#QW3     CABEQ*ON       OBJ99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Copy source to the to environment
      *          ------------------------------------------
     C           W3SRCP    IFEQ *ON                        B01
     C                     EXSR SR0012
     C           I#QW3     CABEQ*ON       OBJ99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Process actions for processing step CO
      *          ------------------------------------------
     C                     Z-ADD13        AC
     C                     MOVEL'CO'      P#PRCS
     C                     EXSR SRAPPR
      *
      *          ------------------------------------------
      *          If actions where processed
      *          ------------------------------------------
     C           P#APRI    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *LV2       Restore library list : When to activate = 'User Exit'
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B02
     C           LCAWHN    ANDEQ'2'
     C                     EXSR SRRSTL
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Set the compilation library list :
      *                    When to activate = 'No User Exit'
      *          Terminate if errors.
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B02
     C           LCAWHN    ANDEQ'3'
     C                     EXSR SRSETL
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Post object creation
      *          ------------------------------------------
     C           I#PF      IFEQ *ON                        B02
     C                     EXSR SRPOPF
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *LV2       Restore library list
      *          When to activate = 'Always' or 'No User Exit'
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B02
     C           LCAWHN    ANDNE'2'
     C                     EXSR SRRSTL
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Creation by actions ended in error
      *          ------------------------------------------
     C           I#QW3     IFEQ *ON                        B02
     C                     GOTO OBJ99
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Creation by actions completed normally
      *          ------------------------------------------
     C                     MOVE *ON       ACT,13
      *
      *          ------------------------------------------
      *          Else (no creation actions found)
      *          ------------------------------------------
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Check for exceptions at UEP 5
      *          ------------------------------------------
     C                     MOVE C#XPRC    S#XUEP
     C                     EXSR SRXIFA
      *
      *          ------------------------------------------
      *LV2       Set the compilation library list :
      *                    When to activate = 'Always' or 'User Exit'
      *          Terminate if errors.
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B02
     C           LCAWHN    ANDNE'3'
     C                     EXSR SRSETL
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          No exceptions, do normal copy
      *          ------------------------------------------
     C           XEOF      IFEQ *ON                        B02
      *
      *          ------------------------------------------
      *LV2       Set the compilation library list :
      *                    When to activate = 'No User Exit'
      *          Terminate if errors.
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B03
     C           LCAWHN    ANDEQ'3'
     C                     EXSR SRSETL
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Creation depends on OBJA
      *          ------------------------------------------
     C           I#PF      CASEQ*ON       SRPF
     C           I#LF      CASEQ*ON       SRLF
     C                     CAS            SROTHR
     C                     ENDCS
      *
      *          ------------------------------------------
      *LV2       Restore library list
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B03
     C                     EXSR SRRSTL
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Creation ended in error
      *          ------------------------------------------
     C           I#QW3     IFEQ *ON                        B03
     C                     GOTO OBJ99
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Else (exceptions exist)
      *          ------------------------------------------
     C                     ELSE                            X02
      *
      *          ------------------------------------------
      *          Process UEP 5
      *          ------------------------------------------
     C                     Z-ADD13        AC
     C                     MOVE *OFF      ACT,13
     C                     EXSR SRXPFA
      *
      *          ------------------------------------------
      *LV2       Restore library list : When to activate = 'User Exit'
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B03
     C           LCAWHN    ANDEQ'2'
     C                     EXSR SRRSTL
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *LV2       Set the compilation library list :
      *                    When to activate = 'No User Exit'
      *          Terminate if errors.
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B03
     C           LCAWHN    ANDEQ'3'
     C                     EXSR SRSETL
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Post object creation
      *          ------------------------------------------
     C           I#PF      IFEQ *ON                        B03
     C                     EXSR SRPOPF
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *LV2       Restore library list
      *          When to activate = 'Always' or 'No User Exit'
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B03
     C           LCAWHN    ANDNE'2'
     C                     EXSR SRRSTL
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Creation by exception ended abnormally
      *          ------------------------------------------
     C           I#QW3     IFEQ *ON                        B03
     C                     GOTO OBJ99
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Creation by exception ended normally
      *          ------------------------------------------
     C                     MOVE *ON       ACT,13
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Change attributes for CATT = 1 or 2
      *          ------------------------------------------
     C           S#EXCI    IFNE *ON                        B01
     C           W3CATT    IFNE *OFF                       B02
     C                     EXSR SR0071
      *
      *          ------------------------------------------
      *          Attributes change in error
      *          ------------------------------------------
     C           I#QW3     IFEQ *ON                        B03
      *
      *          ------------------------------------------
      *          When PF was moved to fallback no clear FB
      *          ------------------------------------------
     C           I#PF      IFEQ *ON                        B04
     C           ACT,9     ANDEQ*ON
     C                     MOVE *ON       I#PFER
     C                     ENDIF                           E04
     C                     GOTO OBJ99
     C                     ENDIF                           E03
     C                     ELSE                            X02
      *
      *          ------------------------------------------
      *          Change attrib. for CATT=0 when LF and no 5
      *          ------------------------------------------
     C           I#LF      IFEQ *ON                        B03
     C           ACT,13    ANDEQ*BLANK
     C                     MOVELW3OBJC    W#REFC    P
     C                     MOVE W3OBJT    W#REFT
     C                     MOVE W3FROL    W#REFL
     C           I#RCRT    IFEQ *ON                        B04
     C           ACT,19    ANDEQ*ON
     C                     MOVE W#FLBL    W#REFL
     C                     ENDIF                           E04
     C                     EXSR SR0071
     C           I#QW3     CABEQ*ON       OBJ99
     C                     ENDIF                           E03
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Change authority for CAUT = 1 or 2
      *          ------------------------------------------
     C           W3CAUT    IFNE *OFF                       B02
     C                     EXSR SR0072
      *
      *          ------------------------------------------
      *          Authority change in error
      *          ------------------------------------------
     C           I#QW3     IFEQ *ON                        B03
      *
      *          ------------------------------------------
      *          When PF was moved to fallback no clear FB
      *          ------------------------------------------
     C           I#PF      IFEQ *ON                        B04
     C           ACT,9     ANDEQ*ON
     C                     MOVE *ON       I#PFER
     C                     ENDIF                           E04
     C                     GOTO OBJ99
     C                     ENDIF                           E03
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Additional processing for physical
      *          ------------------------------------------
     C           I#PF      IFEQ *ON                        B02
      *
      *          ------------------------------------------
      *          Do a possible database conversion.
      *          ------------------------------------------
     C           W3CNVT    IFNE *ON                        B03
     C                     EXSR SR0036
      *
      *          ------------------------------------------
      *          Conversion in error
      *          ------------------------------------------
     C           I#QW3     IFEQ *ON                        B04
      *
      *          ------------------------------------------
      *          When PF was moved to fallback no clear FB
      *          ------------------------------------------
     C           ACT,9     IFEQ *ON                        B05
     C                     MOVE *ON       I#PFER
     C                     ENDIF                           E05
     C                     GOTO OBJ99
     C                     ENDIF                           E04
     C                     END                             E03
      *
      *          ------------------------------------------
      *          Change journalling for CJOT = 1 or 2
      *          ------------------------------------------
     C           W3CJOT    IFNE *OFF                       B03
     C                     EXSR SR0073
     C           I#QW3     CABEQ*ON       OBJ99
     C                     ENDIF                           E03
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Additional processing for ILE
      *          ------------------------------------------
     C           I#ILE     IFEQ *ON                        B02
     C                     EXSR SR0100
     C                     ENDIF                           E02
      *
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Execute exceptions for UEP 7
      *          ------------------------------------------
     C                     MOVE C#XESO    S#XUEP
     C                     EXSR SRXIFA
     C           XEOF      IFEQ *OFF                       B01
     C                     Z-ADD18        AC
     C                     MOVE C#XESO    S#XUEP
     C                     EXSR SRXPFA
     C           I#QW3     CABEQ*ON       OBJ99
     C                     MOVE *ON       ACT,18
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Process actions for processing step EO
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,23
     C                     MOVEL'EO'      P#PRCS
     C                     EXSR SRAPPR
     C           I#QW3     CABEQ*ON       OBJ99
     C                     MOVE *ON       ACT,23
      *
      *          ------------------------------------------
      *          Update or add object record.
      *          ------------------------------------------
     C                     EXSR SR0015
     C           I#QW3     CABEQ*ON       OBJ99
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           OBJ99     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SRDOC  - Processing for a single OS/400 document            *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRDOC     BEGSR
      *
      *          ------------------------------------------
      *          Check if from-document exist
      *          ------------------------------------------
     C                     EXSR SR0002
     C           I#QW3     CABEQ*ON       DOC99
      *
      *          ------------------------------------------
      *          First some actions for object with source
      *          ------------------------------------------
     C           W3SRCP    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Check if from source exists
      *          ------------------------------------------
     C                     EXSR SR0003
     C           I#QW3     CABEQ*ON       DOC99
      *
      *          ------------------------------------------
      *          Dump from source if required
      *          ------------------------------------------
     C           PPDMPL    IFNE *BLANKS                    B02
     C                     EXSR SR0018
     C           I#QW3     CABEQ*ON       DOC99
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Move to-source to fall-back
      *          ------------------------------------------
     C           W3FLBI    IFNE *OFF                       B02
     C                     EXSR SR0004
     C           I#QW3     CABEQ*ON       DOC99
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Move to-object to fall-back
      *          ------------------------------------------
     C           W3FLBI    IFNE *OFF                       B01
     C                     EXSR SR0061
     C           I#QW3     CABEQ*ON       DOC99
      *
      *          ------------------------------------------
      *          Delete to-object
      *          ------------------------------------------
     C                     ELSE                            X01
     C                     EXSR SR0062
     C           I#QW3     CABEQ*ON       DOC99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Copy source to the to environment
      *          ------------------------------------------
     C           W3SRCP    IFEQ *ON                        B01
     C                     EXSR SR0012
     C           I#QW3     CABEQ*ON       DOC99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Process actions for processing step CO
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,13
     C                     MOVEL'CO'      P#PRCS
     C                     EXSR SRAPPR
      *
      *          ------------------------------------------
      *          If actions were processed
      *          ------------------------------------------
     C           P#APRI    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *LV2       Restore library list
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B02
     C                     EXSR SRRSTL
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Creation by actions ended in error
      *          ------------------------------------------
     C           I#QW3     IFEQ *ON                        B02
     C                     GOTO DOC99
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Creation by actions completed normally
      *          ------------------------------------------
     C                     MOVE *ON       ACT,13
      *
      *          ------------------------------------------
      *          Refresh FROL and TOOL
      *          ------------------------------------------
     C                     EXSR SRTYPE
      *
      *          ------------------------------------------
      *          Else (no creation actions found)
      *          ------------------------------------------
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Check for exceptions at UEP 5
      *          ------------------------------------------
     C                     MOVE C#XPRC    S#XUEP
     C                     EXSR SRXIFA
      *
      *          ------------------------------------------
      *          No exceptions
      *          ------------------------------------------
     C           XEOF      IFEQ *ON                        B02
      *
      *          ------------------------------------------
      *LV2       Restore library list
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B03
     C           LCAWHN    ANDEQ'2'
     C                     EXSR SRRSTL
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *LV2       Set the compilation library list :
      *                    When to activate = 'No User Exit'
      *          Terminate if errors.
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B03
     C           LCAWHN    ANDEQ'3'
     C                     EXSR SRSETL
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Creation of the document
      *          ------------------------------------------
     C                     EXSR SR0063
      *
      *          ------------------------------------------
      *          Creation ended in error
      *          ------------------------------------------
     C           I#QW3     IFEQ *ON                        B03
      *LV2       Restore library list
     C           I#CLBL    IFEQ *ON                        B04
     C                     EXSR SRRSTL
     C                     ENDIF                           E04
     C                     GOTO DOC99
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Else (exceptions exist)
      *          ------------------------------------------
     C                     ELSE                            X02
      *
      *          ------------------------------------------
      *          Process UEP 5
      *          ------------------------------------------
     C                     Z-ADD13        AC
     C                     EXSR SRXPFA
      *
      *          ------------------------------------------
      *          Creation by exception ended in error
      *          ------------------------------------------
     C           I#QW3     IFEQ *ON                        B03
      *LV2       Restore library list
     C           I#CLBL    IFEQ *ON                        B04
     C                     EXSR SRRSTL
     C                     ENDIF                           E04
     C                     GOTO DOC99
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Creation by exception completed normally
      *          ------------------------------------------
     C                     MOVE *ON       ACT,13
      *
      *          ------------------------------------------
      *          Refresh FROL and TOOL
      *          ------------------------------------------
     C                     EXSR SRTYPE
      *
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *LV2       Restore library list
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B02
     C                     EXSR SRRSTL
     C                     ENDIF                           E02
      *
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Execute exceptions for UEP 7
      *          ------------------------------------------
     C                     MOVE C#XESO    S#XUEP
     C                     EXSR SRXIFA
     C           XEOF      IFEQ *OFF                       B01
     C                     Z-ADD18        AC
     C                     MOVE C#XESO    S#XUEP
     C                     EXSR SRXPFA
     C           I#QW3     CABEQ*ON       DOC99
     C                     MOVE *ON       ACT,18
      *
      *          ------------------------------------------
      *          Refresh FROL and TOOL
      *          ------------------------------------------
     C                     EXSR SRTYPE
      *
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Process actions for processing step EO
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,23
     C                     MOVEL'EO'      P#PRCS
     C                     EXSR SRAPPR
     C           I#QW3     CABEQ*ON       DOC99
     C                     MOVE *ON       ACT,23
      *
      *          ------------------------------------------
      *          Update or add object record.
      *          ------------------------------------------
     C                     EXSR SR0015
     C           I#QW3     CABEQ*ON       DOC99
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           DOC99     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SRIFS  - Processing for a single IFS object                 *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRIFS     BEGSR
      *
      *          ------------------------------------------
      *          Check if from-object exist
      *          ------------------------------------------
     C                     EXSR SR0002
     C           I#QW3     CABEQ*ON       IFS99
      *
      *          ------------------------------------------
      *          First some actions for object with source
      *          ------------------------------------------
     C           W3SRCP    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Check if from source exists
      *          ------------------------------------------
     C                     EXSR SR0003
     C           I#QW3     CABEQ*ON       IFS99
      *
      *          ------------------------------------------
      *          Dump from source if required
      *          ------------------------------------------
     C           PPDMPL    IFNE *BLANKS                    B02
     C                     EXSR SR0018
     C           I#QW3     CABEQ*ON       IFS99
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Move to-source to fall-back
      *          ------------------------------------------
     C           W3FLBI    IFNE *OFF                       B02
     C                     EXSR SR0004
     C           I#QW3     CABEQ*ON       IFS99
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Move to-object to fall-back
      *          ------------------------------------------
     C           W3FLBI    IFNE *OFF                       B01
     C                     EXSR SR0161
     C           I#QW3     CABEQ*ON       IFS99
      *
      *          ------------------------------------------
      *          Delete to-object
      *          ------------------------------------------
     C                     ELSE                            X01
     C                     EXSR SR0162
     C           I#QW3     CABEQ*ON       IFS99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Copy source to the to environment
      *          ------------------------------------------
     C           W3SRCP    IFEQ *ON                        B01
     C                     EXSR SR0012
     C           I#QW3     CABEQ*ON       IFS99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Process actions for processing step CO
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,13
     C                     MOVEL'CO'      P#PRCS
     C                     EXSR SRAPPR
      *
      *          ------------------------------------------
      *          If actions were processed
      *          ------------------------------------------
     C           P#APRI    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *LV2       Restore library list
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B02
     C                     EXSR SRRSTL
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Creation by actions ended in error
      *          ------------------------------------------
     C           I#QW3     CABEQ*ON       IFS99
      *
      *          ------------------------------------------
      *          Creation by actions completed normally
      *          ------------------------------------------
     C                     MOVE *ON       ACT,13
      *
      *          ------------------------------------------
      *          Refresh FROL and TOOL
      *          ------------------------------------------
     C                     EXSR SRTYPE
      *
      *          ------------------------------------------
      *          Else (no creation actions found)
      *          ------------------------------------------
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Check for exceptions at UEP 5
      *          ------------------------------------------
     C                     MOVE C#XPRC    S#XUEP
     C                     EXSR SRXIFA
      *
      *          ------------------------------------------
      *          No exceptions
      *          ------------------------------------------
     C           XEOF      IFEQ *ON                        B02
      *
      *          ------------------------------------------
      *LV2       Restore library list
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B03
     C           LCAWHN    ANDEQ'2'
     C                     EXSR SRRSTL
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *LV2       Set the compilation library list :
      *                    When to activate = 'No User Exit'
      *          Terminate if errors.
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B03
     C           LCAWHN    ANDEQ'3'
     C                     EXSR SRSETL
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Creation of the IFS object
      *          ------------------------------------------
     C                     EXSR SR0163
      *
      *          ------------------------------------------
      *          Creation ended in error
      *          ------------------------------------------
     C           I#QW3     IFEQ *ON                        B03
      *LV2       Restore library list
     C           I#CLBL    IFEQ *ON                        B04
     C                     EXSR SRRSTL
     C                     ENDIF                           E04
     C                     GOTO IFS99
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Else (exceptions exist)
      *          ------------------------------------------
     C                     ELSE                            X02
      *
      *          ------------------------------------------
      *          Process UEP 5
      *          ------------------------------------------
     C                     Z-ADD13        AC
     C                     EXSR SRXPFA
      *
      *          ------------------------------------------
      *          Creation by exception ended in error
      *          ------------------------------------------
     C           I#QW3     IFEQ *ON                        B03
      *LV2       Restore library list
     C           I#CLBL    IFEQ *ON                        B04
     C                     EXSR SRRSTL
     C                     ENDIF                           E04
     C                     GOTO IFS99
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Creation by exception completed normally
      *          ------------------------------------------
     C                     MOVE *ON       ACT,13
      *
      *          ------------------------------------------
      *          Refresh FROL and TOOL
      *          ------------------------------------------
     C                     EXSR SRTYPE
      *
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *LV2       Restore library list
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B02
     C                     EXSR SRRSTL
     C                     ENDIF                           E02
      *
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Execute exceptions for UEP 7
      *          ------------------------------------------
     C                     MOVE C#XESO    S#XUEP
     C                     EXSR SRXIFA
     C           XEOF      IFEQ *OFF                       B01
     C                     Z-ADD18        AC
     C                     MOVE C#XESO    S#XUEP
     C                     EXSR SRXPFA
     C           I#QW3     CABEQ*ON       IFS99
     C                     MOVE *ON       ACT,18
      *
      *          ------------------------------------------
      *          Refresh FROL and TOOL
      *          ------------------------------------------
     C                     EXSR SRTYPE
      *
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Process actions for processing step EO
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,23
     C                     MOVEL'EO'      P#PRCS
     C                     EXSR SRAPPR
     C           I#QW3     CABEQ*ON       IFS99
     C                     MOVE *ON       ACT,23
      *
      *          ------------------------------------------
      *          Update or add object record.
      *          ------------------------------------------
     C                     EXSR SR0015
     C           I#QW3     CABEQ*ON       IFS99
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           IFS99     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SRGL4  - Processing for a single 4GL object                 *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRGL4     BEGSR
      *
      *          ------------------------------------------
      *          First some actions for object with source
      *          ------------------------------------------
     C           W3SRCP    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Check if from source exists
      *          ------------------------------------------
     C                     EXSR SR0003
     C           I#QW3     CABEQ*ON       GL499
      *
      *          ------------------------------------------
      *          Dump from source if required
      *          ------------------------------------------
     C           PPDMPL    IFNE *BLANKS                    B02
     C                     EXSR SR0018
     C           I#QW3     CABEQ*ON       GL499
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Move to-source to fall-back
      *          ------------------------------------------
     C           W3FLBI    IFNE *OFF                       B02
     C                     EXSR SR0004
     C           I#QW3     CABEQ*ON       GL499
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Copy source to the to environment
      *          ------------------------------------------
     C           W3SRCP    IFEQ *ON                        B01
     C                     EXSR SR0012
     C           I#QW3     CABEQ*ON       GL499
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check for exceptions at UEP 5
      *          ------------------------------------------
      *LV2       Handle compilation library list
     C                     EXSR SRHNDL
      *
     C                     MOVE C#XPRC    S#XUEP
     C                     EXSR SRXIFA
      *
      *          ------------------------------------------
      *          No exceptions, do normal copy
      *          ------------------------------------------
     C           XEOF      IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *LV2       Restore library list
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B02
     C           LCAWHN    ANDEQ'2'
     C                     EXSR SRRSTL
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *LV2       Set the compilation library list for :
      *                    When to activate = 'No User Exit'
      *          Compilation library list for LCAWHN = '1' or '2'
      *          is already set in SRHNDL.
      *          Terminate if errors.
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B02
     C           LCAWHN    ANDEQ'3'
     C                     EXSR SRSETL
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Send assumed to be copied message
      *          ------------------------------------------
     C                     MOVEAW3OBJC    MC,1
     C                     MOVEAW3FROL    MC,13
     C                     MOVEAW3OBJT    MC,23
     C                     MOVEAW3TOOL    MC,32
     C                     MOVE 'CPY0007' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     MOVE *ON       ACT,12
      *
      *          ------------------------------------------
      *LV2       Restore library list
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B02
     C                     EXSR SRRSTL
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Exceptions exist, process UEP 5
      *          ------------------------------------------
     C                     ELSE                            X01
     C                     Z-ADD13        AC
     C                     EXSR SRXPFA
      *
      *          ------------------------------------------
      *LV2       Restore library list
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B02
     C                     EXSR SRRSTL
     C                     ENDIF                           E02
     C           I#QW3     CABEQ*ON       GL499
     C                     MOVE *ON       ACT,13
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Execute exceptions for UEP 7
      *          ------------------------------------------
     C                     MOVE C#XESO    S#XUEP
     C                     EXSR SRXIFA
     C           XEOF      IFEQ *OFF                       B01
     C                     Z-ADD18        AC
     C                     MOVE C#XESO    S#XUEP
     C                     EXSR SRXPFA
     C           I#QW3     CABEQ*ON       GL499
     C                     MOVE *ON       ACT,18
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Update or add object record.
      *          ------------------------------------------
     C                     EXSR SR0015
     C           I#QW3     CABEQ*ON       GL499
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           GL499     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SRDTL  - Processing for a single detail record              *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRDTL     BEGSR
      *
      *          ------------------------------------------
      *          Fill source fields when necessary
      *          ------------------------------------------
     C           I#DTLS    IFEQ *ON                        B01
     C                     MOVELW3OBJC    W3FSRF    P
     C                     MOVE W3FROL    W3FSRL
     C                     MOVE W3MBRC    W3FSRM
     C                     MOVELW3OBJC    W3SRCF    P
     C                     MOVE W3TOOL    W3SRCL
     C                     MOVE W3MBRC    W3SRCM
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check if from-detail exist
      *          ------------------------------------------
     C                     EXSR SR0002
     C           I#QW3     CABEQ*ON       DTL99
      *
      *          ------------------------------------------
      *          First some actions for detail source
      *          ------------------------------------------
     C           I#DTLS    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Dump from source if required
      *          ------------------------------------------
     C           PPDMPL    IFNE *BLANKS                    B02
     C                     EXSR SR0018
     C           I#QW3     CABEQ*ON       DTL99
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Copy to-source to fall-back
      *          ------------------------------------------
     C           W3FLBI    IFNE *OFF                       B02
     C                     EXSR SR0004
     C           I#QW3     CABEQ*ON       DTL99
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          This detail is not a source
      *          ------------------------------------------
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Detail is a message
      *          ------------------------------------------
     C           I#DTLM    IFEQ *ON                        B02
      *
      *          ------------------------------------------
      *          Copy to-detail (no source) to fall-back
      *          ------------------------------------------
     C           W3FLBI    IFNE *OFF                       B03
     C                     EXSR SR0008
     C           I#QW3     CABEQ*ON       DTL99
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          This detail is not a message
      *          ------------------------------------------
     C                     ELSE                            X02
     C                     GOTO DTL99
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Copy source to the to environment
      *          ------------------------------------------
     C           I#DTLS    IFEQ *ON                        B01
     C                     EXSR SR0012
     C           I#QW3     CABEQ*ON       DTL99
      *
      *          ------------------------------------------
      *          Copy message to the to environment
      *          ------------------------------------------
     C                     ELSE                            X01
     C                     EXSR SR0022
     C           I#QW3     CABEQ*ON       DTL99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Execute exceptions for UEP 7
      *          ------------------------------------------
     C                     MOVE C#XESO    S#XUEP
     C                     EXSR SRXIFA
     C           XEOF      IFEQ *OFF                       B01
     C                     Z-ADD18        AC
     C                     MOVE C#XESO    S#XUEP
     C                     EXSR SRXPFA
     C           I#QW3     CABEQ*ON       DTL99
     C                     MOVE *ON       ACT,18
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Process actions for processing step EO
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,23
     C                     MOVEL'EO'      P#PRCS
     C                     EXSR SRAPPR
     C           I#QW3     CABEQ*ON       DTL99
     C                     MOVE *ON       ACT,23
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           DTL99     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SROBJR - Remove part for group of normal objects            *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SROBJR    BEGSR
      *
      *          ------------------------------------------
      *          Read first object in from environment.
      *          ------------------------------------------
     C                     MOVE W3FRPL    K#PDLC
     C                     MOVE W3OBJC    K#OBJC
     C                     MOVE W3OBJT    K#OBJT
     C           $OBJK5    SETLLOMOBJL5
     C           $OBJK5    READEOMOBJL5                  99
      *
      *          ------------------------------------------
      *          No from object at all (probably FROL=TOOL)
      *          ------------------------------------------
     C           *IN99     IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Read object without PDLC
      *          ------------------------------------------
     C                     MOVE W3OBJC    K#OBJC
     C                     MOVE W3OBJT    K#OBJT
     C                     MOVE W3FROL    K#OBJL
     C           $BJ8K1    CHAINOMOBJL8             N99
      *
      *          ------------------------------------------
      *          If found and RJPDLC=W3TOPL
      *          ------------------------------------------
     C           *IN99     IFEQ *OFF                       B02
     C           RJPDLC    ANDEQW3TOPL
      *
      *          ------------------------------------------
      *          Save key fields
      *          ------------------------------------------
     C                     MOVE RJPDLC    S#PDLC
     C                     MOVE RJOBJC    S#OBJC
     C                     MOVE RJOBJL    S#OBJL
     C                     MOVE RJOBJT    S#OBJT
     C                     MOVE W3FSRF    S#SRCF
     C                     MOVE W3FSRL    S#SRCL
     C                     MOVE W3FSRM    S#SRCM
      *
      *          ------------------------------------------
      *          Remove if Solt=9
      *          ------------------------------------------
     C           W3SOLT    IFEQ '9'                        B03
     C                     EXSR SR0014
     C           I#QPGM    CABEQ*ON       OBJR99
     C                     ELSE                            X03
      *
      *          ------------------------------------------
      *          No remove if no source copied
      *                    or from source = RJ source
      *          ------------------------------------------
     C           I#SRCC    IFNE *ON                        B04
     C           W3FSRL    OREQ RJSRCL
     C           W3FSRF    ANDEQRJSRCF
     C           W3FSRM    ANDEQRJSRCM
      *
      *          ------------------------------------------
      *          Else remove source
      *          ------------------------------------------
     C                     ELSE                            X04
     C                     EXSR SR0014
     C           I#QPGM    CABEQ*ON       OBJR99
     C                     ENDIF                           E04
     C                     ENDIF                           E03
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Quit this routine
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
     C                     GOTO OBJR99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Do for all objects in from environment.
      *          ------------------------------------------
     C           *IN99     DOWEQ*OFF                       B01
     C           P#STAT    ANDEQC#NORM
      *
      *          ------------------------------------------
      *          Quit when horizontal and not mainobject
      *          ------------------------------------------
     C           W3FRPL    IFEQ W3TOPL                     B02
     C           RJOBJL    ANDNEW3FROL
     C                     GOTO OBJR90
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Quit when the object is still a mainobject
      *          ------------------------------------------
     C           $RO4K1    SETLLOMEROL4                  99
     C           *IN99     CABEQ*ON       OBJR90
      *
      *          ------------------------------------------
      *          Process when RJFIX# = W3FIX#
      *          ------------------------------------------
     C           RJFIX#    CABEQW3FIX#    OBJR10
      *
      *          ------------------------------------------
      *          Process when W3SOLT = 9
      *          ------------------------------------------
     C           W3SOLT    CABEQ'9'       OBJR10
      *
      *          ------------------------------------------
      *          Process when RJOBJL=W3FROL (fix blank)
      *          ------------------------------------------
     C           RJFIX#    IFEQ *BLANK                     B02
     C           RJOBJL    IFEQ W3FROL                     B03
     C                     GOTO OBJR10
     C                     ELSE                            X03
     C                     GOTO OBJR90
     C                     ENDIF                           E03
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          We have to process this object
      *          ------------------------------------------
     C           OBJR10    TAG
      *
      *          ------------------------------------------
      *          Save key fields
      *          ------------------------------------------
     C                     MOVE RJPDLC    S#PDLC
     C                     MOVE RJOBJC    S#OBJC
     C                     MOVE RJOBJL    S#OBJL
     C                     MOVE RJOBJT    S#OBJT
     C                     MOVE RJSRCF    S#SRCF
     C                     MOVE RJSRCL    S#SRCL
     C                     MOVE RJSRCM    S#SRCM
      *
      *          ------------------------------------------
      *          From and To-location are same
      *          ------------------------------------------
     C           W3TOOL    IFEQ W3FROL                     B02
     C                     MOVE RJOBJC    K#OBJC
     C                     MOVE RJOBJL    K#OBJL
     C                     MOVE RJOBJT    K#OBJT
     C           $BJ8K1    CHAINOMOBJL8              99
     C           *IN99     IFEQ *OFF                       B03
     C                     MOVE W3TOPL    RJPDLC
     C                     UPDATOMOBJR8
     C                     MOVE C#NORM    P#STAT
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Different from and to-location
      *          ------------------------------------------
     C                     ELSE                            X02
      *
      *          ------------------------------------------
      *          SOLT=9 and or....is always remove
      *          ------------------------------------------
     C           W3SOLT    IFEQ '9'                        B03
     C                     MOVE *OFF      KEEP
      *
      *          ------------------------------------------
      *          Check if this is a keep library.
      *          ------------------------------------------
     C                     ELSE                            X03
     C                     EXSR SR0081
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          If the object must not be kept, then remove it.
      *          ------------------------------------------
     C           KEEP      IFNE *ON                        B03
      *
      *          ------------------------------------------
      *          Delete objrec and object (not source)
      *          ------------------------------------------
     C                     EXSR SR0017
     C           I#QPGM    CABEQ*ON       OBJR90
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      * LOCAL:   Remove source from from-environment only when
      *          the source has been copied to one of the libl's
      *          and it is the processed source.
      *
      * REMOTE:  Always remove the source from the processed object
      *          even when this was not the source that was processed.
      *
      * BOTH:    Always remove the source from the terminate object.
      *
      *          Changed: Request V40KE/R0036 (WJO) 24/okt/2001
      *          ------------------------------------------
     C                     MOVELW3FSRL    W#POS2
      *
     C           I#SRCC    IFEQ *ON                        B03
     C           W3FRPL    ANDNED#HPLC
     C           W3FSRL    ANDEQS#SRCL
     C           W3FSRF    ANDEQS#SRCF
     C           W3FSRM    ANDEQS#SRCM
      *
     C           I#SRCC    OREQ *ON
     C           I#RCVM    ANDEQ*ON
     C           W#POS2    ANDEQ'OR'
      *
     C           W3SOLT    OREQ '9'
     C                     EXSR SR0014
     C           I#QPGM    CABEQ*ON       OBJR90
     C                     ENDIF                           E03
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Read next object in this environment
      *          ------------------------------------------
     C           OBJR90    TAG
     C                     MOVE W3FRPL    K#PDLC
     C                     MOVE W3OBJC    K#OBJC
     C                     MOVE W3OBJT    K#OBJT
     C           $OBJK5    READEOMOBJL5                  99
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           OBJR99    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SRDTLR - Remove part for group of details                   *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRDTLR    BEGSR
      *
      *          ------------------------------------------
      *          Quit when frol=tool
      *          ------------------------------------------
     C           W3FROL    CABEQW3TOOL    DTLR99
      *
      *          ------------------------------------------
      *          Quit when tool = blank
      *          ------------------------------------------
     C           W3TOOL    CABEQ*BLANK    DTLR99
      *
      *          ------------------------------------------
      *          Quit when the detail is still a mainobject
      *          ------------------------------------------
     C           $RO4K2    SETLLOMEROL4                  99
     C           *IN99     CABEQ*ON       DTLR99
      *
      *          ------------------------------------------
      *          Process when W3SOLT = 9
      *          ------------------------------------------
     C           W3SOLT    CABEQ'9'       DTLR10
      *
      *          ------------------------------------------
      *          Quit when a message without solt=9
      *          ------------------------------------------
     C           I#DTLM    CABEQ*ON       DTLR99
      *
      *          ------------------------------------------
      *          Quit when source and FRPL=production
      *          ------------------------------------------
     C           I#DTLS    IFEQ *ON                        B01
     C           W3FRPL    ANDEQD#HPLC
     C                     GOTO DTLR99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          We have to process this detail
      *          ------------------------------------------
     C           DTLR10    TAG
      *
      *          ------------------------------------------
      *          Check if this is a keep library.
      *          ------------------------------------------
     C           W3SOLT    IFEQ '9'                        B01
     C                     MOVE *OFF      KEEP
     C                     ELSE                            X01
     C                     MOVE W3FRPL    RJPDLC
     C                     MOVE W3FROL    RJOBJL
     C                     MOVE W3OBJT    RJOBJT
     C                     MOVE W3OBJA    RJOBJA
     C                     EXSR SR0081
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Quit for a *keep library
      *          ------------------------------------------
     C           KEEP      CABEQ*ON       DTLR99
      *
      *          ------------------------------------------
      *          Check if from-detail exists
      *          ------------------------------------------
     C                     MOVE W3FROL    P#OBJL
     C                     MOVELW3OBJC    P#OBJC    P
     C                     MOVE W3MBRC    P#MBRC
     C                     MOVELW3OBJT    P#OBJT    P
     C                     CALL 'OMX909C' $X909C
      *
      *          ------------------------------------------
      *          Quit when not found
      *          ------------------------------------------
     C           P#STAT    CABNEC#NORM    DTLR99
      *
      *          ------------------------------------------
      *          Init remove from object
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,26
      *
      *          ------------------------------------------
      *          Fill the S# fields required for SR0021
      *          ------------------------------------------
     C                     MOVELW3OBJC    S#DTLF    P
     C                     MOVE W3OBJT    S#DTLT
     C                     MOVE W3FROL    S#DTLL
     C                     MOVE W3MBRC    S#DTLM
      *
      *          ------------------------------------------
      *          Delete the detail record and detail itself
      *          ------------------------------------------
     C                     EXSR SR0021
     C           I#QW3     CABEQ*ON       DTLR99
      *
      *          ------------------------------------------
      *          Set remove from object to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,26
     C                     ADD  1         W#OD#
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           DTLR99    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SRPF   - Physical file processing.                          *
      *                                                             *
      * This routine does the physical file processing.             *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRPF      BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Quit for temporary object that doesnt exist
      *          ------------------------------------------
     C           S#EXCI    IFEQ *ON                        B01
     C                     MOVEAW3OBJC    MC,1
     C                     MOVEAW3FROL    MC,13
     C                     MOVEAW3OBJT    MC,23
     C                     MOVEAW3TOOL    MC,32
     C                     MOVE 'CPY0007' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     MOVE *ON       ACT,12
     C                     GOTO PF99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          No exceptions, do normal Copy
      *          ------------------------------------------
     C                     EXSR SR0011
      *
      *          ------------------------------------------
      *          Do post PF processing
      *          ------------------------------------------
     C                     EXSR SRPOPF
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           PF99      ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SRPOPF - Post physical file processing                      *
      *                                                             *
      * This routine does the actions needed after a physical       *
      * file was processed.                                         *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRPOPF    BEGSR
      *
      *          ------------------------------------------
      *          Copy ended in error
      *          ------------------------------------------
     C           I#QW3     IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          When PF was moved to fallback no clear FB
      *          ------------------------------------------
     C           ACT,9     IFEQ *ON                        B02
     C                     MOVE *ON       I#PFER
     C                     ENDIF                           E02
     C                     GOTO PO99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Store PF in array PFP, PFL, PFS and PFF
      *          ------------------------------------------
     C                     Z-ADDW#PF#     IX
     C                     MOVELW3OBJC    PFP,IX
     C                     MOVE W3TOOL    PFL,IX
     C                     MOVE W3FROL    PFS,IX
     C           ACT,9     IFEQ *ON                        B01
     C                     MOVE *ON       PFF,IX
     C                     MOVE *ON       S#PFFB
     C                     ENDIF                           E01
     C                     MOVE *ON       S#PF
     C                     SUB  1         W#PF#
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           PO99      ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SRLF   - Logical file processing.                           *
      *                                                             *
      * This routine does the logical file processing.              *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRLF      BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Quit when no object to be copied
      *          ------------------------------------------
     C           W3TOOL    CABEQ*BLANK    LF99
      *
      *          ------------------------------------------
      *          Quit for same from- and to-location
      *          ------------------------------------------
     C           W3FROL    IFEQ W3TOOL                     B01
     C           I#RCRT    ANDNE*ON
      *
      *          ------------------------------------------
      *          Quit for temporary object that doesnt exist
      *          ------------------------------------------
     C           S#EXCI    OREQ *ON
     C                     MOVEAW3OBJC    MC,1
     C                     MOVEAW3FROL    MC,13
     C                     MOVEAW3OBJT    MC,23
     C                     MOVEAW3TOOL    MC,32
     C                     MOVE 'CPY0007' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     MOVE *ON       ACT,12
     C                     GOTO LF99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Init the create indicator
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,12
     C                     MOVE *ON       S#LF
      *
      *          ------------------------------------------
      *          Determine library list.
      *          ------------------------------------------
     C                     EXSR SR0051
     C           I#QW3     CABEQ*ON       LF99
      *
      *          ------------------------------------------
      *          No exceptions, do normal Create
      *          ------------------------------------------
     C                     EXSR SR0052
     C           I#QW3     CABEQ*ON       LF99
      *
      *          ------------------------------------------
      *          fill the create indicator
      *          ------------------------------------------
     C                     MOVE *ON       ACT,12
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           LF99      ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SROTHR - No physical nor logical object processing.         *
      *                                                             *
      * This routine does the other object processing.              *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SROTHR    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Quit for temporary object that doesnt exist
      *          ------------------------------------------
     C           S#EXCI    IFEQ *ON                        B01
     C                     MOVEAW3OBJC    MC,1
     C                     MOVEAW3FROL    MC,13
     C                     MOVEAW3OBJT    MC,23
     C                     MOVEAW3TOOL    MC,32
     C                     MOVE 'CPY0007' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     MOVE *ON       ACT,12
     C                     GOTO OTHR99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          No exceptions, do normal Copy
      *          ------------------------------------------
     C                     EXSR SR0011
     C           I#QW3     CABEQ*ON       OTHR99
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           OTHR99    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ------------------------------------------------------------ *
      * SNDMSG - Send message                                        * /
      *                                                              * /
      * This routine sends an error to the program data queue.       * /
      *                                                              *
      * ------------------------------------------------------------ *
     C           SNDMSG    BEGSR
      *
      *          ------------------------------------------
      *          Check if api message or normal one
      *          ------------------------------------------
     C           3         SUBSTMSGID     W#SBST  3
     C           W#SBST    IFEQ 'OMQ'                      B01
     C                     MOVEL'OMSAPI'  MSGF      P
     C                     ELSE                            X01
     C                     MOVEL'OMSMSG'  MSGF      P
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Call Program sender
      *          ------------------------------------------
     C                     CALL 'OMX901C' $X901C
     C                     MOVE *BLANK    MC
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ------------------------------------------------------------ *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0002 - Check if object exists in from environment.        *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine checks if the object to be copied or moved     *
      * still exists in the from environment.                       *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0002    BEGSR
      *
      *          ------------------------------------------
      *          Fill program parameter list.
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,5
     C                     MOVE *OFF      S#EXCI
     C                     MOVELW3OBJC    P#OBJC    P
     C                     MOVE W3OBJT    P#OBJT
     C           I#DOC     IFEQ *ON                        B01
     C                     MOVELW#FFLR    P#FLRC    P
     C                     CALL 'OMX813C' $X813C
     C                     ELSE                            X01
     C           I#IFS     IFEQ *ON                        B02
     C                     MOVEAW#FFPC    IOB
     C                     CALL 'OMX401'  $MX401
     C                     ELSE                            X02
     C                     MOVE W3MBRC    P#MBRC
     C                     MOVE W3FROL    P#OBJL
     C                     CALL 'OMX909C' $X909C
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Object not found
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
      *
      *          ------------------------------------------
      *          No error for temporary object
      *          ------------------------------------------
     C           W3EXCI    IFEQ *ON                        B02
     C                     MOVE *ON       S#EXCI
      *
      *          ------------------------------------------
      *          Error for normal objects
      *          ------------------------------------------
     C                     ELSE                            X02
     C                     MOVE *BLANKS   MC
     C                     MOVEAW3OBJC    MC,1
     C                     MOVEAW3FROL    MC,11
     C                     MOVEAW3OBJT    MC,21
     C                     MOVE 'OBJE005' MSGID
     C           W3OCLS    IFEQ 'B'                        B03
     C                     CALL 'OMX422'  $MX422
     C           X#STAT    IFEQ C#NORM                     B04
     C                     MOVE *BLANKS   MC
     C                     MOVE 'OBJE053' MSGID
     C                     MOVEAW3OBJT    MC,1
     C           P#IDRC    CAT  P#IOBC:0  W#PATH    P
     C                     MOVEAW#PATH    MC,10
     C                     ENDIF                           E04
     C                     ENDIF                           E03
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     EXSR SRERR
     C                     GOTO S00299
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set Check from object to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,5
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S00299    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0003 - Check if source exists in from environment.        *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine checks if the source that belongs to an        *
      * object exists in the from environment.                      *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0003    BEGSR
      *
      *          ------------------------------------------
      *          Fill program parameter list.
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,6
     C                     MOVE W3FSRL    P#OBJL
     C                     MOVELW3FSRF    P#OBJC    P
     C                     MOVE W3FSRM    P#MBRC
     C                     MOVELC#FILE    P#OBJT    P
     C                     CALL 'OMX909C' $X909C
      *
      *          ------------------------------------------
      *          Log message when not found
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     MOVEAW3FSRF    MC,1
     C                     MOVEAW3FSRL    MC,11
     C                     MOVEAW3FSRM    MC,21
     C                     MOVEAW3OBJC    MC,31
     C                     MOVEAW3FROL    MC,43
     C                     MOVEAW3OBJT    MC,53
     C                     MOVE 'OBJE007' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     EXSR SRERR
     C                     GOTO S00399
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set Check from source to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,6
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S00399    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0004 - Copy to-source to fallback library                 *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine copies the source to the fallback library      *
      * (if any).                                                   *
      * It is called when W3SRCP contains a '1' and this is a       *
      * W3 record with FLBI not *OFF or when PF, LF                 *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0004    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Quit when no source to be copied
      *          ------------------------------------------
     C           W3SRCL    IFEQ *BLANK                     B01
     C           W3SRCL    OREQ C#NSRC
     C                     GOTO S00499
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Quit for same from- and to-location
      *          ------------------------------------------
     C           W3SRCF    IFEQ W3FSRF                     B01
     C           W3SRCL    ANDEQW3FSRL
     C           W3SRCM    ANDEQW3FSRM
     C                     GOTO S00499
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check if to-source exists
      *          ------------------------------------------
     C                     MOVE W3SRCL    P#SRCL
     C                     MOVELW3SRCF    P#SRCF    P
     C                     MOVE W3SRCM    P#SRCM
     C                     MOVE 'NOLOG'   P#STAT
     C                     CALL 'OMX946C' $X946C
      *
      *          ------------------------------------------
      *          Set the exist inidicator
      *          ------------------------------------------
     C           P#STAT    IFEQ C#NORM                     B01
     C                     MOVE *ON       I#EXIS
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Quit when not found and FLBI=*OFF (PF,LF)
      *          ------------------------------------------
     C                     MOVE *OFF      I#EXIS
     C           W3FLBI    CABEQ*OFF      S00499
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Create fallback library and file OMFBC
      *          ------------------------------------------
     C           I#FLBC    IFNE *ON                        B01
     C           I#FBCF    ORNE *ON
     C                     EXSR SR0006
     C           I#QW3     CABEQ*ON       S00499
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Copy source when source was found
      *          ------------------------------------------
     C           I#EXIS    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Fill old source change date in OMFBC
      *          ------------------------------------------
     C                     MOVE P#SRCX    BCOSRX
      *
      *          ------------------------------------------
      *          Set Copy to-source to Fallback
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,8
      *
      *          ------------------------------------------
      *          Set OMFBC MUTC to changed
      *          ------------------------------------------
     C                     MOVE 'C'       BCMUTC
      *
      *          ------------------------------------------
      *          Call the copy source program.
      *          ------------------------------------------
     C                     MOVE W3SRCF    P#SRCF
     C                     MOVE W3SRCL    P#SRCL
     C                     MOVE W3SRCM    P#SRCM
     C                     MOVE W3SRCF    P#TSCF
     C                     MOVE W#FLBL    P#TSCL
     C                     MOVE W3SRCM    P#TSCM
     C                     CALL 'OMX922C' $X922C
      *
      *          ------------------------------------------
      *          Execute error when not *NORM
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B02
     C                     EXSR SRERR
     C                     GOTO S00499
      *
      *          ------------------------------------------
      *          Copy source completed normally
      *          ------------------------------------------
     C                     ELSE                            X02
      *
      *          ------------------------------------------
      *          Set copy to-source to fallback to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,8
      *
      *          ------------------------------------------
      *          Quit when FLBI=*OFF (PF,LF)
      *          ------------------------------------------
     C           W3FLBI    CABEQ*OFF      S00499
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Read member record of replaced source
      *          ------------------------------------------
     C                     MOVELW3SRCF    K#OBJC    P
     C                     MOVELC#FILE    K#OBJT    P
     C                     MOVE W3SRCL    K#OBJL
     C                     MOVE W3SRCM    K#MBRC
     C           $BR1K1    CHAINOMMBRL1             N9999
      *
      *          ------------------------------------------
      *          No source found in to-library
      *          ------------------------------------------
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Set OMFBC MUTC to new and in99 to *ON
      *          ------------------------------------------
     C                     MOVE 'N'       BCMUTC
     C                     MOVE *BLANK    BCOSRX
     C                     MOVE *ON       *IN99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Use W3 when not found
      *          ------------------------------------------
     C           *IN99     IFNE *OFF                       B01
     C                     MOVELW3SRCF    BCOBJC    P
     C                     MOVE W3SRCL    BCOBJL
     C                     MOVELC#FILE    BCOBJT    P
     C                     MOVE W3SRCM    BCMBRC
     C                     MOVE *BLANK    BCOBJA    P
     C                     MOVE *BLANK    BCOBJD    P
     C                     MOVE *BLANK    BCFIX#
     C                     MOVE *BLANK    BCOMOD
     C                     MOVE *BLANK    BCUSDF
     C                     MOVE *BLANK    BCEXCI
     C                     MOVE *BLANK    BCAPPC
     C                     Z-ADD*ZERO     BCVRS#
     C                     Z-ADD*ZERO     BCMOD#
      *
      *          ------------------------------------------
      *          Use MBR when found
      *          ------------------------------------------
     C                     ELSE                            X01
     C                     MOVE BROBJC    BCOBJC
     C                     MOVE BROBJL    BCOBJL
     C                     MOVE BROBJT    BCOBJT
     C                     MOVE BRMBRC    BCMBRC
     C                     MOVELBRMBRA    BCOBJA    P
     C                     MOVELBRMBRD    BCOBJD    P
     C                     MOVE BRFIX#    BCFIX#
     C                     MOVE BROMOD    BCOMOD
     C                     MOVE BRUSDF    BCUSDF
     C                     MOVE BREXCI    BCEXCI
     C                     MOVE BRAPPC    BCAPPC
     C                     Z-ADDBRVRS#    BCVRS#
     C                     Z-ADDBRMOD#    BCMOD#
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Initialize other fields
      *          ------------------------------------------
     C                     MOVE *BLANK    BCPDLC
     C                     MOVE *BLANK    BCSRCF
     C                     MOVE *BLANK    BCSRCL
     C                     MOVE *BLANK    BCSRCM
     C                     MOVE *BLANK    BCSRCS
     C                     MOVE *BLANK    BCSRCX
     C                     MOVE *BLANK    BCOBJX
     C                     MOVE *BLANK    BCOCRT
     C                     MOVE *ZERO     BCOCLS
     C                     MOVE *BLANK    BCCHGX
      *
     C                     MOVE W3ERR#    BCERR#
     C                     MOVE W3RLS#    BCRLS#
     C                     Z-ADDW3SEQ#    BCSEQ#
      *
      *          ------------------------------------------
      *          Fill the type of record
      *          ------------------------------------------
     C           W3MBRC    IFEQ *BLANK                     B01
     C                     MOVE '2'       BCTYPE
     C                     ELSE                            X01
     C                     MOVE '3'       BCTYPE
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Write file OMFBC; Add te record
      *          ------------------------------------------
     C                     WRITEOMFBCR
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S00499    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0005 - Move to-object to fallback library                 *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine moves to to-object to the fallback library     *
      * (if any).                                                   *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0005    BEGSR
      *
      *          ------------------------------------------
      *          Quit when no object to be copied
      *          ------------------------------------------
     C           W3TOOL    CABEQ*BLANK    S00599
      *
      *          ------------------------------------------
      *          Quit when same from- and to-location
      *          ------------------------------------------
     C           W3FROL    IFEQ W3TOOL                     B01
     C           I#RCRT    ANDNE*ON
     C                     GOTO S00599
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check if to-document exists
      *          ------------------------------------------
     C           W3OCLS    IFEQ 'A'                        B01
     C                     ELSE                            X01
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check if to-object exists
      *          ------------------------------------------
     C                     MOVE W3TOOL    P#OBJL
     C                     MOVELW3OBJC    P#OBJC    P
     C                     MOVE *BLANKS   P#MBRC
     C                     MOVELW3OBJT    P#OBJT    P
     C                     CALL 'OMX909C' $X909C
      *
      *          ------------------------------------------
      *          Set the exist inidicator
      *          ------------------------------------------
     C           P#STAT    IFEQ C#NORM                     B01
     C                     MOVE *ON       I#EXIS
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Quit when not found and FLBI=*OFF (PF,LF)
      *          ------------------------------------------
     C                     MOVE *OFF      I#EXIS
     C           W3FLBI    CABEQ*OFF      S00599
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Create fallback library and file OMFBC
      *          ------------------------------------------
     C           I#FLBC    IFNE *ON                        B01
     C           I#FBCF    ORNE *ON
     C                     EXSR SR0006
     C           I#QW3     CABEQ*ON       S00599
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Move object when object was found
      *          ------------------------------------------
     C           I#EXIS    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Set move to-object to fallback
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,9
      *
      *          ------------------------------------------
      *          Set OMFBC MUTC to changed
      *          ------------------------------------------
     C                     MOVE 'C'       BCMUTC
      *
      *          ------------------------------------------
      *          Call the move object program.
      *          ------------------------------------------
     C                     MOVELW3OBJC    P#OBJC    P
     C                     MOVE W3TOOL    P#OBJL
     C                     MOVELW3OBJT    P#OBJT    P
     C                     CALL 'OMX980C' $X980C
      *
      *          ------------------------------------------
      *          The MOVE ended in error
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B02
      *
      *          ------------------------------------------
      *          Execute error when this was not rebuild LF
      *          ------------------------------------------
     C           I#RCRT    IFNE *ON                        B03
     C                     EXSR SRERR
     C                     GOTO S00599
      *
      *          ------------------------------------------
      *          Rebuild LF: Delete the LF when in fallback
      *          ------------------------------------------
     C                     ELSE                            X03
     C                     EXSR SR0013
     C                     GOTO S00599
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Set move to-object to fallback to done
      *          ------------------------------------------
     C                     ELSE                            X02
     C                     MOVE *ON       ACT,9
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Object was moved to fallback
      *          ------------------------------------------
     C                     MOVE *ON       W3OBJR
      *
      *          ------------------------------------------
      *          Read object record of replaced object
      *          ------------------------------------------
     C                     MOVELW3OBJC    K#OBJC    P
     C                     MOVE W3OBJT    K#OBJT
     C                     MOVE W3TOOL    K#OBJL
     C           $BJ8K1    CHAINOMOBJL8             N9999
      *
      *          ------------------------------------------
      *          No object found in to-library
      *          ------------------------------------------
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Set MUTC to new, IN99 = *ON, updt W3
      *          ------------------------------------------
     C                     MOVE 'N'       BCMUTC
     C                     MOVE *BLANK    W3OBJR
     C                     MOVE *ON       *IN99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Use W3 when not found
      *          ------------------------------------------
     C           *IN99     IFNE *OFF                       B01
     C                     MOVE W3APPC    BCAPPC
     C                     MOVE W3TOPL    BCPDLC
     C                     MOVE W3OBJC    BCOBJC
     C                     MOVE W3TOOL    BCOBJL
     C                     MOVE W3OBJT    BCOBJT
     C                     MOVE W3OBJA    BCOBJA
     C                     MOVE *BLANKS   BCOBJD
     C                     MOVE W3SRCF    BCSRCF
     C                     MOVE W3SRCL    BCSRCL
     C                     MOVE W3SRCM    BCSRCM
     C                     MOVE W3SRCS    BCSRCS
     C                     MOVE *BLANK    BCSRCX
     C                     MOVE *BLANK    BCOBJX
     C                     MOVE *BLANK    BCOMOD
     C                     MOVE *BLANK    BCOCRT
     C                     MOVE *BLANK    BCFIX#
     C                     MOVE *BLANK    BCUSDF
     C                     MOVE W3EXCI    BCEXCI
     C                     MOVE W3OCLS    BCOCLS
     C                     Z-ADD*ZERO     BCVRS#
     C                     Z-ADD*ZERO     BCMOD#
     C                     MOVE *BLANK    BCCHGX
     C                     MOVE *BLANK    W3FIXR
     C                     Z-ADD*ZERO     W3VRSR
     C                     Z-ADD*ZERO     W3MODR
      *
      *          ------------------------------------------
      *          Use OBJ when found
      *          ------------------------------------------
     C                     ELSE                            X01
     C                     MOVE RJAPPC    BCAPPC
     C                     MOVE RJPDLC    BCPDLC
     C                     MOVE RJOBJC    BCOBJC
     C                     MOVE RJOBJL    BCOBJL
     C                     MOVE RJOBJT    BCOBJT
     C                     MOVE RJOBJA    BCOBJA
     C                     MOVE RJOBJD    BCOBJD
     C                     MOVE RJSRCF    BCSRCF
     C                     MOVE RJSRCL    BCSRCL
     C                     MOVE RJSRCM    BCSRCM
     C                     MOVE RJSRCS    BCSRCS
     C                     MOVE RJSRCX    BCSRCX
     C                     MOVE RJOBJX    BCOBJX
     C                     MOVE RJOMOD    BCOMOD
     C                     MOVE RJOCRT    BCOCRT
     C                     MOVE RJFIX#    BCFIX#
     C                     MOVE RJUSDF    BCUSDF
     C                     MOVE RJEXCI    BCEXCI
     C                     MOVE RJOCLS    BCOCLS
     C                     Z-ADDRJVRS#    BCVRS#
     C                     Z-ADDRJMOD#    BCMOD#
     C                     MOVE RJCHGX    BCCHGX
      *
      *          ------------------------------------------
      *          Update W3 record with replaced object info
      *          ------------------------------------------
     C                     MOVE RJFIX#    W3FIXR
     C                     Z-ADDRJVRS#    W3VRSR
     C                     Z-ADDRJMOD#    W3MODR
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Quit when FLBI=*OFF (PF,LF)
      *          ------------------------------------------
     C           W3FLBI    CABEQ*OFF      S00599
      *
      *          ------------------------------------------
      *          Initialize other fields
      *          ------------------------------------------
     C                     MOVE *ON       BCTYPE
     C                     MOVE *BLANK    BCMBRC
     C                     MOVE W3ERR#    BCERR#
     C                     MOVE W3RLS#    BCRLS#
     C                     Z-ADDW3SEQ#    BCSEQ#
      *
      *          ------------------------------------------
      *          Write file OMFBC; Add te record
      *          ------------------------------------------
     C                     WRITEOMFBCR
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S00599    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0006 - Create fallback environment                        *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine creates the temporary fallback library,        *
      * creates file OMFCB in it and opens the file.                *
      *                                                             *
      * WARNING: This routine is able to create a fall back library *
      *          and a fall back folder. Ifa document is processed  *
      *          before a physical then the library needed for the  *
      *          OMFBC file is created in the same ASP as the       *
      *          folder. A file can not be moved from the original  *
      *          location to a fall back library if the original    *
      *          library and the fall back library are not in the   *
      *          same ASP.                                          *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0006    BEGSR
      *
      *          ------------------------------------------
      *          Only create fall back for objects, documents & IFS
      *          ------------------------------------------
     C           W3OCLS    IFEQ '0'                        B01
     C           W3OCLS    OREQ 'A'
     C           W3OCLS    OREQ 'B'
      *
      *          ------------------------------------------
      *          Create fallback library
      *          ------------------------------------------
     C           I#FLBC    IFNE *ON                        B02
      *
      *          ------------------------------------------
      *          Set Fall-back lib created to *OFF
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,39
      *
      *          ------------------------------------------
      *          Call program to create the fall-back lib
      *          ------------------------------------------
     C                     CALL 'OMX979C' $X979C
      *
      *          ------------------------------------------
      *          Error when already exist and no restart
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B03
     C           I#RSTR    ANDNE*ON
     C                     EXSR SRERR
     C                     GOTO S00699
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Set Fall-back lib created to done and set
      *          indicator Fall-back lib created to *ON
      *          ------------------------------------------
     C                     MOVE *ON       ACT,39
     C                     MOVE *ON       I#FLBC
      *
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          If document check was not yet done
      *          ------------------------------------------
     C           I#DOCC    IFEQ *OFF                       B02
     C           W3OCLS    ANDEQ'A'
      *
      *          ------------------------------------------
      *          Set Fallback folder created to *OFF
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,39
      *
      *          ------------------------------------------
      *          Set name of folder to be created
      *          ------------------------------------------
     C                     MOVE W#FLBL    P#OBJC
      *
      *          ------------------------------------------
      *          Create the fallback folder
      *          ------------------------------------------
     C                     CALL 'OMX808C' $X808C
      *
      *          ------------------------------------------
      *          Error when already exist and no restart
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B03
     C           I#RSTR    ANDNE*ON
     C                     EXSR SRERR
     C                     GOTO S00699
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Set Fallback folder created to done and
      *          set indicator Folder created to *ON
      *          ------------------------------------------
     C                     MOVE *ON       ACT,39
     C                     MOVE *ON       I#DOCC
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          If IFS object check was not yet done
      *          ------------------------------------------
  *********      I#IFSC    IFEQ *OFF                       B02
     C           W3OCLS    IFEQ 'B'                        B02
      *
      *          ------------------------------------------
      *          Set name of folder to be created
      *          ------------------------------------------
     C                     MOVE *BLANKS   P#IDRC
     C           '/'       CAT  W#FLBL:0  P#IDRC
     C           P#IDRC    CAT  '/':0     P#IDRC
     C           P#IDRC    CAT  W#TDIR:0  P#IDRC
      *
      *          ------------------------------------------
      *          Create the fallback folder
      *          ------------------------------------------
     C                     CALL 'OMX408C' $X408C
      *
      *          ------------------------------------------
      *          Error when already exist and no restart
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B03
     C           P#STAT    ANDNEC#EXST
     C           I#RSTR    ANDNE*ON
     C                     EXSR SRERR
     C                     GOTO S00699
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          set indicator Folder created to *ON
      *          ------------------------------------------
     C                     MOVE *ON       I#IFSC
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Create file OMFBC in fallback library
      *          (only if a fallback library was created)
      *          ------------------------------------------
     C           I#FBCF    IFNE *ON                        B02
     C           W3FLBI    ANDNE*OFF
     C           I#FLBC    ANDEQ*ON
     C                     MOVE *OFF      ACT,38
     C                     MOVEL'OMFBC'   P#OBJC    P
     C                     MOVE P#ODBL    P#FOBL
     C                     MOVELC#FILE    P#OBJT    P
     C                     MOVELC#PF      P#OBJA    P
     C                     MOVE W#FLBL    P#TOBL
     C                     MOVE *BLANK    P#CNVT
     C                     MOVE *BLANKS   P#STAT
      *
      *          ------------------------------------------
      *          Create OMFBC
      *          ------------------------------------------
     C                     CALL 'OMX921C' $X921C
     C           P#STAT    IFNE C#NORM                     B03
     C           I#RSTR    ANDNE*ON
     C                     EXSR SRERR
     C                     GOTO S00699
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Open file OMFBC in fallback library
      *          ------------------------------------------
     C                     OPEN OMFBC
     C                     MOVE *ON       I#FBCF
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Set Fallback created to *ON and to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,38
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S00699    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0007 - Save/Clear fallback library                        *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine saves optionally and clears the fallback       *
      * library.                                                    *
      * The save of the fallback library depends on the W3FLBI      *
      * field. (The W3FLBI of the last W3 record in this libl)      *
      *                                                             *
      *   W3FLBI = 0 No save at all                                 *
      *          = 1 When an error has occured the library is saved *
      *          = 2 Always save the library                        *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0007    BEGSR
      *
      *          ------------------------------------------
      *          Init
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Quit when no fallback has been used
      *          ------------------------------------------
     C           I#FLBC    CABNE*ON       S00799
      *
      *          ------------------------------------------
      *          Setof fallback indi
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,37
      *
      *          ------------------------------------------
      *          Quit to clear when no FBC records
      *          ------------------------------------------
     C           I#FBCF    CABNE*ON       S00780
      *
      *          ------------------------------------------
      *          Close file OMFBC
      *          ------------------------------------------
     C                     CLOSEOMFBC
      *
      *          ------------------------------------------
      *          Save fallback library
      *          ------------------------------------------
     C           W3FLBI    IFEQ '2'                        B01
     C           W3FLBI    OREQ '1'
     C           W#ER#     ANDNE*ZERO
      *
      *          ------------------------------------------
      *          Make a name for the savefile
      *          ------------------------------------------
     C                     Z-ADDS#SEQC    D#SEQ#
     C           'D'       CAT  P#NUMC    P#SAVF    P
     C                     MOVE D#SEQC    P#SAVF
      *
      *          ------------------------------------------
      *          Save documents when saved
      *          ------------------------------------------
     C           W#DOC#    IFGT *ZERO                      B02
      *
      *          ------------------------------------------
      *          Save documents in fallback library
      *          ------------------------------------------
     C                     CALL 'OMX810C' $X810C
      *
      *          ------------------------------------------
      *          Check for error
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B03
     C                     EXSR SRERR
     C                     GOTO S00799
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Reset documents created counter
      *          ------------------------------------------
     C                     Z-ADD*ZEROS    W#DOC#
      *
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Save IFS when saved
      *          ------------------------------------------
     C           W#IFS#    IFGT *ZERO                      B02
      *
      *          ------------------------------------------
      *          Make a name for the savefile
      *          ------------------------------------------
     C                     MOVEL'I'       P#SAVF
      *
      *          ------------------------------------------
      *          Save documents in fallback library
      *          ------------------------------------------
     C           '/'       CAT  W#FLBL:0  P#IDRC    P
     C                     CALL 'OMX410C' $X410C
      *
      *          ------------------------------------------
      *          Check for error
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B03
     C                     EXSR SRERR
     C                     GOTO S00799
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Reset IFS objects created counter
      *          ------------------------------------------
     C                     Z-ADD*ZEROS    W#IFS#
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Make a name for the savefile
      *          ------------------------------------------
     C                     MOVEL'S'       P#SAVF
      *
      *          ------------------------------------------
      *          Call the save library program
      *          ------------------------------------------
     C                     CALL 'OMX987C' $X987C
      *
      *          ------------------------------------------
      *          Check for error
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B02
     C                     EXSR SRERR
     C                     GOTO S00799
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Reset PF error flag (PF have been saved)
      *          ------------------------------------------
     C                     MOVE *OFF      I#PFER
      *
      *          ------------------------------------------
      *          Open OMFLB when not open
      *          ------------------------------------------
     C           I#OFLB    IFNE *ON                        B02
     C                     OPEN OMFLB
     C                     MOVE *ON       I#OFLB
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Write a record in OMFLB
      *          ------------------------------------------
     C                     MOVE W3APPC    LBAPPC
     C                     Z-ADDD#DATE    LBINDT
     C                     TIME           LBINTM
     C                     Z-ADDW3SEQ#    LBSEQ#
     C                     MOVE W3TFRC    LBTFRC
     C                     MOVE PPFBLC    LBFBLC
     C                     MOVE W3FIX#    LBFIX#
     C                     MOVE W3ERR#    LBERR#
     C                     MOVE W3RLS#    LBRLS#
     C                     MOVE D#USID    LBUSID
     C                     WRITEOMFLBR
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Clear fallback when no PF in error
      *          ------------------------------------------
     C           S00780    TAG
      *
     C           I#PFER    IFEQ *OFF                       B01
     C                     CALL 'OMX989C' $X989C
     C           P#STAT    IFEQ C#NORM                     B02
     C                     CALL 'OMX990C' $X990C
     C                     ENDIF                           E02
     C                     ELSE                            X01
     C                     MOVELC#TERM    P#STAT    P
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check for error
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     EXSR SRERR
     C                     GOTO S00799
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          If a fall-back folder was created
      *          ------------------------------------------
     C           I#DOCC    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Delete the fall-back folder
      *          ------------------------------------------
     C                     CALL 'OMX809C' $X809C
      *
      *          ------------------------------------------
      *          Check for error
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B02
     C                     EXSR SRERR
     C                     GOTO S00799
     C                     ENDIF                           E02
      *
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          If a IFS directory was created
      *          ------------------------------------------
     C           I#IFSC    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Delete the fall-back folder
      *          ------------------------------------------
     C           '/'       CAT  W#FLBL:0  P#IDRC    P
     C                     CALL 'OMX409C' $X409C
      *
      *          ------------------------------------------
      *          Check for error
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B02
     C                     EXSR SRERR
     C                     GOTO S00799
     C                     ENDIF                           E02
      *
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Normal ending
      *          ------------------------------------------
     C                     MOVE *OFF      I#FLBC
     C                     MOVE *OFF      I#FBCF
     C                     MOVE *OFF      I#DOCC
     C                     MOVE *OFF      I#IFSC
     C                     MOVE *ON       ACT,37
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S00799    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0008 - Copy message to fallback library                   *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine copies the to-detail to fallback library       *
      * (if any).                                                   *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0008    BEGSR
      *
      *          ------------------------------------------
      *          Quit when no object to be copied
      *          ------------------------------------------
     C           W3TOOL    CABEQ*BLANK    S00899
      *
      *          ------------------------------------------
      *          Quit when same from- and to-location
      *          ------------------------------------------
     C           W3FROL    IFEQ W3TOOL                     B01
     C                     GOTO S00899
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Create fallback library and file OMFBC
      *          ------------------------------------------
     C           I#FLBC    IFNE *ON                        B01
     C           I#FBCF    ORNE *ON
     C                     EXSR SR0006
     C           I#QW3     CABEQ*ON       S00899
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check if to-object exists
      *          ------------------------------------------
     C                     MOVE W3TOOL    P#OBJL
     C                     MOVELW3OBJC    P#OBJC    P
     C                     MOVE W3MBRC    P#MBRC
     C                     MOVELW3OBJT    P#OBJT    P
     C                     CALL 'OMX909C' $X909C
      *
      *          ------------------------------------------
      *          Copy detail when object was found
      *          ------------------------------------------
     C           P#STAT    IFEQ C#NORM                     B01
      *
      *          ------------------------------------------
      *          Set move to-object to fallback
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,9
      *
      *          ------------------------------------------
      *          Set OMFBC MUTC to changed
      *          ------------------------------------------
     C                     MOVE 'C'       BCMUTC
      *
      *          ------------------------------------------
      *          Fill the copy message parameters.
      *          ------------------------------------------
     C                     MOVELW3OBJC    P#OBJC    P
     C                     MOVE W3TOOL    P#FOBL
     C                     MOVE W3OBJT    P#OBJT
     C                     MOVELW3MBRC    MSGID
     C                     MOVE W#FLBL    P#TOBL
      *
      *          ------------------------------------------
      *          Call the copy message program.
      *          ------------------------------------------
     C                     CALL 'OMX955C' $X955C
      *
      *          ------------------------------------------
      *          Quit when ended in error
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B02
     C                     EXSR SRERR
     C                     GOTO S00899
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Set move to-object to fallback to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,9
      *
      *          ------------------------------------------
      *          Read member record
      *          ------------------------------------------
     C                     MOVELW3OBJC    K#OBJC    P
     C                     MOVELW3OBJT    K#OBJT    P
     C                     MOVE W3TOOL    K#OBJL
     C                     MOVE W3MBRC    K#MBRC
     C           $BR1K1    CHAINOMMBRL1             N9999
      *
      *          ------------------------------------------
      *          No detail found in to-library
      *          ------------------------------------------
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Set OMFBC MUTC to new and in99 to *ON
      *          ------------------------------------------
     C                     MOVE 'N'       BCMUTC
     C                     MOVE *BLANK    BCOSRX
     C                     MOVE *ON       *IN99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Use W3 when not found
      *          ------------------------------------------
     C           *IN99     IFNE *OFF                       B01
     C                     MOVELW3OBJC    BCOBJC    P
     C                     MOVE W3TOOL    BCOBJL
     C                     MOVE W3OBJT    BCOBJT    P
     C                     MOVE W3MBRC    BCMBRC
     C                     MOVE *BLANK    BCOBJA    P
     C                     MOVE *BLANK    BCOBJD    P
     C                     MOVE *BLANK    BCFIX#
     C                     MOVE *BLANK    BCOMOD
     C                     MOVE *BLANK    BCUSDF
     C                     MOVE *BLANK    BCEXCI
     C                     MOVE *BLANK    BCAPPC
     C                     Z-ADD*ZERO     BCVRS#
     C                     Z-ADD*ZERO     BCMOD#
      *
      *          ------------------------------------------
      *          Use MBR when found
      *          ------------------------------------------
     C                     ELSE                            X01
     C                     MOVE BROBJC    BCOBJC
     C                     MOVE BROBJL    BCOBJL
     C                     MOVE BROBJT    BCOBJT
     C                     MOVE BRMBRC    BCMBRC
     C                     MOVELBRMBRA    BCOBJA    P
     C                     MOVELBRMBRD    BCOBJD    P
     C                     MOVE BRFIX#    BCFIX#
     C                     MOVE BROMOD    BCOMOD
     C                     MOVE BRUSDF    BCUSDF
     C                     MOVE BREXCI    BCEXCI
     C                     MOVE BRAPPC    BCAPPC
     C                     Z-ADDBRVRS#    BCVRS#
     C                     Z-ADDBRMOD#    BCMOD#
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Initialize other fields
      *          ------------------------------------------
     C                     MOVE *BLANK    BCPDLC
     C                     MOVE *BLANK    BCSRCF
     C                     MOVE *BLANK    BCSRCL
     C                     MOVE *BLANK    BCSRCM
     C                     MOVE *BLANK    BCSRCS
     C                     MOVE *BLANK    BCSRCX
     C                     MOVE *BLANK    BCOBJX
     C                     MOVE *BLANK    BCOCRT
     C                     MOVE *ZERO     BCOCLS
     C                     MOVE *BLANK    BCCHGX
      *
     C                     MOVE W3ERR#    BCERR#
     C                     MOVE W3RLS#    BCRLS#
     C                     Z-ADDW3SEQ#    BCSEQ#
      *
      *          ------------------------------------------
      *          Fill the type of record
      *          ------------------------------------------
     C                     MOVE '4'       BCTYPE
      *
      *          ------------------------------------------
      *          Write file OMFBC; Add te record
      *          ------------------------------------------
     C                     WRITEOMFBCR
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S00899    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0011 - Copy object.                                       *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine copies the object by a CRTDUPOBJ command.      *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0011    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Quit when no object to be copied
      *          ------------------------------------------
     C           W3TOOL    CABEQ*BLANK    S01199
      *
      *          ------------------------------------------
      *          Quit when same from- and to-location
      *          ------------------------------------------
     C           W3FROL    IFEQ W3TOOL                     B01
     C           I#RCRT    ANDNE*ON
     C                     MOVEAW3OBJC    MC,1
     C                     MOVEAW3FROL    MC,13
     C                     MOVEAW3OBJT    MC,23
     C                     MOVEAW3TOOL    MC,32
     C                     MOVE 'CPY0007' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     MOVE *ON       ACT,12
     C                     GOTO S01199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Init the create indicator
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,12
      *
      *          ------------------------------------------
      *          Fill program parameter list.
      *          ------------------------------------------
     C                     MOVELW3OBJC    P#OBJC    P
     C           I#RCRT    IFEQ *ON                        B01
     C                     MOVE W#FLBL    P#FOBL
     C                     ELSE                            X01
     C                     MOVE W3FROL    P#FOBL
     C                     ENDIF                           E01
     C                     MOVE W3OBJT    P#OBJT
     C                     MOVE W3OBJA    P#OBJA
     C                     MOVE W3TOOL    P#TOBL
     C                     MOVE W3CNVT    P#CNVT
     C                     MOVE *BLANKS   P#STAT
      *
      *          ------------------------------------------
      *          Call copy object program.
      *          ------------------------------------------
     C                     CALL 'OMX921C' $X921C
      *
      *          ------------------------------------------
      *          Quit when error occured
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     EXSR SRERR
     C                     GOTO S01199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set copy object to done.
      *          ------------------------------------------
     C                     MOVE *ON       ACT,12
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S01199    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0012 - Copy the source to the to location.                *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine copies the source to the to environment        *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0012    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Quit for same from- and to-location
      *          ------------------------------------------
     C           W3SRCF    IFEQ W3FSRF                     B01
     C           W3SRCL    ANDEQW3FSRL
     C           W3SRCM    ANDEQW3FSRM
      *
      *          ------------------------------------------
      *          When solution is source detail then assume
      *          ------------------------------------------
     C           I#DTLS    IFEQ *ON                        B02
     C                     MOVEAW3OBJC    MC,1
     C                     MOVEAW3TOOL    MC,13
     C                     MOVEAW3OBJT    MC,23
     C                     MOVEAW3MBRC    MC,32
     C                     MOVE 'CPY0013' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     MOVE *ON       ACT,12
     C                     ENDIF                           E02
     C                     GOTO S01299
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set *NORM when no source to be copied
      *          ------------------------------------------
     C           W3SRCL    IFEQ *BLANK                     B01
     C           W3SRCL    OREQ C#NSRC
     C                     GOTO S01299
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Fill the copy source program parameters.
      *          ------------------------------------------
     C           W3MBRC    IFEQ *BLANK                     B01
     C                     MOVE *OFF      ACT,11
     C                     ELSE                            X01
     C                     MOVE *OFF      ACT,12
     C                     ENDIF                           E01
     C                     MOVE W3FSRF    P#SRCF
     C                     MOVE W3FSRL    P#SRCL
     C                     MOVE W3FSRM    P#SRCM
     C                     MOVE W3SRCF    P#TSCF
     C                     MOVE W3SRCL    P#TSCL
     C                     MOVE W3SRCM    P#TSCM
      *
      *          ------------------------------------------
      *          Call the copy source program.
      *          ------------------------------------------
     C                     CALL 'OMX922C' $X922C
      *
      *          ------------------------------------------
      *          Quit when error occured
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     EXSR SRERR
     C                     GOTO S01299
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Retrieve new member type / description
      *          ------------------------------------------
     C                     MOVELW3SRCF    P#OBJC    P
     C                     MOVE W3SRCL    P#OBJL
     C                     MOVE W3SRCM    P#MBRC
     C                     CALL 'OMX942C' $X942C
      *
      *          ------------------------------------------
      *          Execute routine SR0023 for update memberfile
      *          ------------------------------------------
     C                     MOVELW3SRCF    K#OBJC    P
     C                     MOVE W3SRCL    K#OBJL
     C                     MOVELC#FILE    K#OBJT
     C                     MOVE W3SRCM    K#MBRC
     C                     MOVE P#MBRA    S#MBRA
     C                     MOVE P#MBRD    S#MBRD
     C                     EXSR SR0023
      *
      *          ------------------------------------------
      *          Set copy source to done
      *          ------------------------------------------
     C           W3MBRC    IFEQ *BLANK                     B01
     C                     MOVE *ON       ACT,11
     C                     ELSE                            X01
     C                     MOVE *ON       ACT,12
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S01299    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0013 - Delete an object                                   *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine deletes an object in the W3TOOL library.       *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0013    BEGSR
      *
      *          ------------------------------------------
      *          Quit when no object to be copied
      *          ------------------------------------------
     C           W3TOOL    CABEQ*BLANK    S01399
      *
      *          ------------------------------------------
      *          Quit when same from- and to-location
      *          ------------------------------------------
     C           W3FROL    IFEQ W3TOOL                     B01
     C           I#RCRT    ANDNE*ON
     C                     GOTO S01399
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set delete object to *OFF
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,10
      *
      *          ------------------------------------------
      *          Call the program.
      *          ------------------------------------------
     C                     MOVELW3OBJC    P#OBJC    P
     C                     MOVE W3TOOL    P#OBJL
     C                     MOVE W3OBJT    P#OBJT
     C                     MOVE W3OBJA    P#OBJA
     C                     CALL 'OMX914C' $X914C
      *
      *          ------------------------------------------
      *          Check for error.
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     EXSR SRERR
     C                     GOTO S01399
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set delete object to *ON
      *          ------------------------------------------
     C                     MOVE *ON       ACT,10
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S01399    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0014 - Remove source in from environment.                 *
      *                                                             *
      * Requires  - S#SRCL - Source library                         *
      *             S#SRCF - Source file                            *
      *             S#SRCM - Source member                          *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine removes the source in the from environment     *
      * if this object has a source.                                *
      *                                                             *
      * The source is not removed if the from environment of the    *
      * object is production or the source is used by objects in    *
      * production or the source is used by objects in other        *
      * applications.                                               *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0014    BEGSR
      *
      *          ------------------------------------------
      *          Don't even think about deleting when the
      *          from environment of this object is production.
      *          ------------------------------------------
     C           W3FRPL    CABEQD#HPLC    S01499
      *
      *          ------------------------------------------
      *          If the source library is a part of this applications
      *          production environment then do not delete.
      *          ------------------------------------------
     C                     MOVELW3APPC    BDAPPC    P
     C                     MOVELD#HPLC    BDPDLC    P
     C                     MOVELS#SRCL    BDLIBC    P
     C           $BD3K4    CHAINOMLBDL3              99
     C           *IN99     DOWEQ*OFF                       B01
     C           BDLSOI    CABEQ*ON       S01499
     C           $BD3K4    READEOMLBDL3                  99
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          Don't delete when from source is equal
      *          to to source lib or when from source lib
      *          is sourcelib in to-environment.
      *          ------------------------------------------
     C                     MOVE W3TOPL    K#PDLC
     C                     MOVE S#SRCL    K#OBJL
     C                     MOVELS#SRCL    W#POS2  2
     C           $LBDK1    CHAINOMLBDL3              99
     C           *IN99     IFEQ *ON                        B01
     C           S#SRCL    ANDNES#TSRL
     C           *IN99     OREQ *OFF
     C           BDLSOI    ANDNE*ON
     C           *IN99     OREQ *OFF
     C           W3FRPL    ANDEQW3TOPL
     C           I#RCVM    OREQ *ON
     C           W#POS2    ANDEQ'OR'
      *
      *          ------------------------------------------
      *          Do only when source not blank
      *          ------------------------------------------
     C           S#SRCL    IFNE *BLANKS                    B02
     C           S#SRCM    ANDNE*BLANKS
     C           S#SRCF    ANDNE*BLANKS
      *
      *          ------------------------------------------
      *          Change all objects that where using the
      *          source from the from environment.
      *          ------------------------------------------
     C                     EXSR SR0092
      *
      *          ------------------------------------------
      *          Check if source still exists
      *          ------------------------------------------
     C                     MOVE S#SRCL    P#OBJL
     C                     MOVELS#SRCF    P#OBJC    P
     C                     MOVE S#SRCM    P#MBRC
     C                     MOVELC#FILE    P#OBJT    P
     C                     CALL 'OMX909C' $X909C
      *
      *          ------------------------------------------
      *          Remove only when source found
      *          ------------------------------------------
     C           P#STAT    IFEQ C#NORM                     B03
      *
      *          ------------------------------------------
      *          Init the remove source indicator
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,27
      *
      *          ------------------------------------------
      *          Delete the source
      *          ------------------------------------------
     C                     MOVE S#SRCL    P#OBJL
     C                     MOVELS#SRCF    P#OBJC    P
     C                     MOVE S#SRCM    P#DTLC
     C                     CALL 'OMX923C' $X923C
      *
      *          ------------------------------------------
      *          Message when error occured
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B04
     C                     EXSR SRERR
      *
      *          ------------------------------------------
      *          No error, Set remove source to done
      *          ------------------------------------------
     C                     ELSE                            X04
     C                     MOVE *ON       ACT,27
      *
      *          ------------------------------------------
      *          Get ommbr record and delete it
      *          ------------------------------------------
     C                     MOVELS#SRCF    K#OBJC    P
     C                     MOVELC#FILE    K#OBJT    P
     C                     MOVE S#SRCL    K#SRCL
     C                     MOVE S#SRCM    K#SRCM
     C           $MBRK2    CHAINOMMBRL1              99
     C           *IN99     IFEQ *OFF                       B05
     C                     DELETOMMBRR
     C                     ENDIF                           E05
     C                     ENDIF                           E04
     C                     ENDIF                           E03
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S01499    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0015 - Change object file for the copied object.          *
      *                                                             *
      * This routine updates the object file for the object that    *
      * was copied to the to-library. If the record does not exist  *
      * it is created.                                              *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0015    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
     C                     MOVE *OFF      ACT,19
      *
      *          ------------------------------------------
      *          Refresh newly created object
      *          ------------------------------------------
     C                     MOVE '50'      O4ACTC
     C                     MOVE *BLANK    O4EOP
     C                     MOVE '2'       O4W4
     C                     MOVE *BLANK    O4PRT
     C                     MOVE *BLANK    O4PR2
     C                     MOVE *ON       O4UPD
     C                     MOVE *ON       O4UPB
     C                     MOVE *ON       O4LIB
     C                     MOVE W3APPC    O4APPC
     C                     MOVE W3TOPL    O4PDLC
     C           I#IFS     IFEQ *ON                        B01
     C                     MOVELC#IFSO    O4OBJC    P
     C                     MOVE *BLANKS   O4OBJL
     C                     MOVEAW#TFPC    IOB
     C                     ELSE                            X01
     C                     MOVE W3OBJC    O4OBJC
     C                     MOVE W3TOOL    O4OBJL
     C                     MOVE *BLANKS   IOB
     C                     ENDIF                           E01
     C                     MOVE W3OBJT    O4OBJT
      *
      *          ------------------------------------------
      *          For temp we must fill some values
      *          ------------------------------------------
     C           W3EXCI    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Check if to-object record can be found
      *          ------------------------------------------
     C                     MOVELW3OBJC    K#OBJC    P
     C                     MOVE W3OBJT    K#OBJT
     C                     MOVE W3TOOL    K#OBJL
     C           $BJ8K1    SETLLOMOBJL8                  99
      *
      *          ------------------------------------------
      *          When found we use *SAME
      *          ------------------------------------------
     C           *IN99     IFEQ *ON                        B02
     C                     MOVELC#SAME    O4OBJA    P
     C                     MOVELC#SAME    O4OBJD    P
     C                     MOVELC#SAME    O4OCRT    P
      *
      *          ------------------------------------------
      *          Use values of from for new obj-rec
      *          ------------------------------------------
     C                     ELSE                            X02
     C                     MOVE W3FROL    K#OBJL
     C           $BJ8K1    CHAINOMOBJL8             N9999
     C                     MOVE RJOBJA    O4OBJA
     C                     MOVE RJOBJD    O4OBJD
     C                     MOVE RJOCRT    O4OCRT
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Use *OBJD for normal objects
      *          ------------------------------------------
     C                     ELSE                            X01
     C                     MOVELC#OBJD    O4OBJA    P
     C                     MOVELC#OBJD    O4OBJD    P
     C                     MOVELC#OBJD    O4OCRT    P
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          To source location is blank
      *          ------------------------------------------
     C           W3SRCL    IFEQ *BLANK                     B01
     C           W3SRCL    OREQ C#NSRC
      *
      *          ------------------------------------------
      *          When source copied use that location
      *          ------------------------------------------
     C           I#SRCC    IFEQ *ON                        B02
     C                     MOVE S#TSRL    O4SRCL
     C                     MOVE S#TSRF    O4SRCF
     C                     MOVE S#TSRM    O4SRCM
      *
      *          ------------------------------------------
      *          Source not copied before. use from values
      *          ------------------------------------------
     C                     ELSE                            X02
     C                     MOVE W3FSRL    O4SRCL
     C                     MOVE W3FSRF    O4SRCF
     C                     MOVE W3FSRM    O4SRCM
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          To source location is filled
      *          ------------------------------------------
     C                     ELSE                            X01
     C                     MOVE W3SRCL    O4SRCL
     C                     MOVE W3SRCF    O4SRCF
     C                     MOVE W3SRCM    O4SRCM
     C                     ENDIF                           E01
     C                     MOVE W3SRCS    O4SRCS
     C                     MOVELC#RTV     O4SRCX    P
     C                     MOVE *BLANK    O4OBJX
     C                     MOVE *BLANK    O4OMOD
     C                     MOVE W3FIX#    O4FIX#
     C                     MOVELC#SAME    O4USDF
     C                     MOVE W3EXCI    O4EXCI
     C                     MOVE W3OCLS    O4OCLS
     C                     Z-ADDW3VRS#    O4VRS#
     C                     Z-ADDW3MOD#    O4MOD#
     C                     MOVE *BLANK    O4CHGX
     C           W3FRPL    IFEQ C#ANY                      B01
     C                     MOVE RJPDLC    O4RPLC
     C                     ELSE                            X01
     C                     MOVE W3FRPL    O4RPLC
     C                     ENDIF                           E01
     C                     MOVE W3FROL    O4ROBL
     C                     CALL 'OMQCHGOB'$QCHGO
      *
      *          ------------------------------------------
      *          Send message when error occurred
      *          ------------------------------------------
     C           O4MSTP    IFEQ 'E'                        B01
     C           O4MSTP    OREQ 'N'
     C                     MOVE O4MSID    MSGID
     C                     MOVELO4MSGD    MSGDTA
     C                     EXSR SNDMSG
     C                     EXSR SRERR
     C                     GOTO S01599
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set fill object file to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,19
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S01599    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0016 - Change object file for the deleted object          *
      *                                                             *
      * This routine updates the object file for the object that    *
      * was deleted in the to-lib for a solution with solt=9.       *
      *                                                             *
      * The object record, the object itself and the source         *
      * are going to be removed.                                    *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0016    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
     C                     MOVE *OFF      ACT,19
      *
      *          ------------------------------------------
      *          Delete the object
      *          ------------------------------------------
     C                     MOVE '40'      O4ACTC
     C                     MOVE *BLANK    O4EOP
     C                     MOVE '2'       O4W4
     C                     MOVE *BLANK    O4PRT
     C                     MOVE *BLANK    O4PR2
     C                     MOVE *ON       O4UPD
     C                     MOVE *ON       O4UPB
     C                     MOVE *ON       O4LIB
     C           I#4GL     IFEQ *ON                        B01
     C                     MOVE *OFF      O4DLT
     C                     ELSE                            X01
     C                     MOVE *ON       O4DLT            dlt obj + sr
     C                     ENDIF                           E01
      *
     C           I#IFS     IFEQ *ON                        B01
     C                     MOVELC#IFSO    O4OBJC    P
     C                     MOVE *BLANKS   O4OBJL
     C                     MOVEAW#TFPC    IOB
     C                     ELSE                            X01
     C                     MOVE W3OBJC    O4OBJC
     C                     MOVE W3TOOL    O4OBJL
     C                     ENDIF                           E01
     C                     MOVE W3OBJT    O4OBJT
     C                     CALL 'OMQCHGOB'$QCHGO
      *
      *          ------------------------------------------
      *          Send message when error occurred
      *          ------------------------------------------
     C           O4MSTP    IFEQ 'E'                        B01
     C           O4MSID    ANDNE'OMQ1004'
     C           O4MSID    ANDNE'OMQ1034'
     C                     MOVE O4MSID    MSGID
     C                     MOVELO4MSGD    MSGDTA
     C                     EXSR SNDMSG
     C                     EXSR SRERR
     C                     GOTO S01699
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set update object file to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,19
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S01699    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0017 - Remove object in from environment.                 *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine deletes the object in the from environment.    *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0017    BEGSR
      *
      *          ------------------------------------------
      *          Init remove from object
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,26
      *
      *          ------------------------------------------
      *          IFS objects, get the location.
      *          ------------------------------------------
     C           I#IFS     IFEQ *ON                        B01
     C           RJOBJL    CHAINOMIOPL1              99
     C                     MOVEAID1       W#IDRC
     C                     MOVEAIO1       W#IFPC
     C           W#IDRC    CAT  W#IFPC:0  W#IFPC
     C                     MOVEAW#IFPC    IOB
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Delete the object + source when not used
      *          ------------------------------------------
     C                     MOVE '40'      O4ACTC
     C                     MOVE *BLANK    O4EOP
     C                     MOVE '2'       O4W4
     C                     MOVE *BLANK    O4PRT
     C                     MOVE *BLANK    O4PR2
     C                     MOVE *ON       O4UPD
     C                     MOVE *ON       O4UPB
     C                     MOVE *ON       O4LIB
     C           I#4GL     IFEQ *ON                        B01
     C                     MOVE *OFF      O4DLT
     C                     ELSE                            X01
     C                     MOVE '2'       O4DLT            dlt obj only
     C                     ENDIF                           E01
     C           I#IFS     IFEQ *ON                        B01
     C                     MOVELC#IFSO    O4OBJC    P
     C                     MOVE *BLANKS   O4OBJL
     C                     ELSE                            X01
     C                     MOVE W3OBJC    O4OBJC
     C                     MOVE RJOBJL    O4OBJL
     C                     ENDIF                           E01
     C                     MOVE W3OBJT    O4OBJT
     C                     CALL 'OMQCHGOB'$QCHGO
      *
      *          ------------------------------------------
      *          Send message when error occurred
      *          ------------------------------------------
     C           O4MSTP    IFEQ 'E'                        B01
     C                     MOVE O4MSID    MSGID
     C                     MOVELO4MSGD    MSGDTA
     C                     EXSR SNDMSG
     C                     EXSR SRERR
     C                     ADD  1         W#OND#
     C                     GOTO S01799
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set remove from object to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,26
     C                     ADD  1         W#OD#
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S01799    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0018 - Dump source in sourcedump library.                 *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine checks if the source for this object was       *
      * already dumped for this fix. If so,                         *
      * then no action is done, else the last member number is      *
      * retrieved, and incremented. The source member is dumped,    *
      * and a record is written to the dumpfile.                    *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0018    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Quit for same from- and to-location
      *          ------------------------------------------
     C           W3SRCF    IFEQ W3FSRF                     B01
     C           W3SRCL    ANDEQW3FSRL
     C           W3SRCM    ANDEQW3FSRM
     C                     GOTO S01899
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Quit when from source is blank
      *          ------------------------------------------
     C           W3FSRL    IFEQ *BLANK                     B01
     C                     GOTO S01899
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Quit when not going to a development env.
      *          ------------------------------------------
     C           W3TOPL    IFNE D#LPLC                     B01
     C           W3TOPL    ANDNED#EPLC
     C                     GOTO S01899
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Quit when solt not= 1, 3 or 9
      *          ------------------------------------------
     C           W3SOLT    IFNE '1'                        B01
     C           W3SOLT    ANDNE'3'
     C           W3SOLT    ANDNE'9'
     C                     GOTO S01899
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check if source was saved before
      *          ------------------------------------------
     C           $MP2K1    SETLLOMDMPL2                  99
      *
      *          ------------------------------------------
      *          Quit when already dumped
      *          ------------------------------------------
     C           *IN99     CABEQ*ON       S01899
      *
      *          ------------------------------------------
      *          Init the dump indicator
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,7
      *
      *          ------------------------------------------
      *          Lock the last record of the dump file.
      *          ------------------------------------------
     C           PPDMPL    SETGTOMDMPL1
     C           PPDMPL    REDPEOMDMPL1                  99
     C           *IN99     IFEQ *OFF                       B01
     C                     MOVE MPSAVM    D#SAVM
     C                     ADD  1         D#SAV#
     C                     ELSE                            X01
     C                     MOVEL'DMP'     D#SAVM
     C                     Z-ADD1         D#SAV#
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Fill the copy source program parameters.
      *          ------------------------------------------
     C                     MOVE W3FSRF    P#SRCF
     C                     MOVE W3FSRL    P#SRCL
     C                     MOVE W3FSRM    P#SRCM
     C                     MOVE W3FSRF    P#TSCF
     C                     MOVE PPDMPL    P#TSCL
     C                     MOVE D#SAVM    P#TSCM
      *
      *          ------------------------------------------
      *          Call the copy source program.
      *          ------------------------------------------
     C                     CALL 'OMX918C' $X918C
      *
      *          ------------------------------------------
      *          Write a new record if ok
      *          ------------------------------------------
     C           P#STAT    IFEQ C#NORM                     B01
     C                     MOVE P#APPC    MPAPPC
     C                     MOVE W3FIX#    MPFIX#
     C                     MOVELW3OBJC    MPOBJC    P
     C                     MOVE W3OBJT    MPOBJT
     C                     MOVE W3OBJA    MPOBJA
     C                     MOVE W3FSRF    MPSRCF
     C                     MOVE W3FSRL    MPSRCL
     C                     MOVE W3FSRM    MPSRCM
     C                     MOVE PPDMPL    MPSAVL
     C                     MOVE D#SAVM    MPSAVM
     C                     TIME           MPSATM
     C                     Z-ADDD#DATE    MPSADT
     C                     WRITEOMDMPR
     C                     UNLCKOMDMPL1
      *
      *          ------------------------------------------
      *          Set the dump indicator to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,7
      *
      *          ------------------------------------------
      *          Else unlock and warning
      *          ------------------------------------------
     C                     ELSE                            X01
     C                     EXSR SRERR
     C                     UNLCKOMDMPL1
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S01899    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0019 - Check if source has been copied before             *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine is called when:                                *
      *                                                             *
      *    - This is not the first library-list                     *
      *    - W3SRCP = *ON                                           *
      *    - W3SRCL = *BLANK or has NO *SOURCE                      *
      *                                                             *
      * This routine uses file OMOW3L2 to read previous records     *
      * of this solution                                            *
      * When such a record is found and the source was copied,      *
      * the following fields are filled:                            *
      *                                                             *
      *   I#SRCC                                                    *
      *   S#TSRL                                                    *
      *   S#TSRF                                                    *
      *   S#TSRM                                                    *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0019    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
     C                     MOVE *BLANK    I#SRCC
     C                     MOVE *BLANK    S#TSRL
     C                     MOVE *BLANK    S#TSRF
     C                     MOVE *BLANK    S#TSRM
      *
      *          ------------------------------------------
      *          Fill key fields for search with old W3
      *          ------------------------------------------
     C                     Z-ADDS#SEQF    K#SEQ3
     C                     MOVE W3SRTC    K#SRTC
     C                     MOVE W3OBJT    K#OBJT
     C                     MOVE W3OBJA    K#OBJA
     C                     MOVELW3OBJC    K#OBJC    P
     C                     MOVE W3MBRC    K#MBRC
     C                     MOVE W3FROL    K#FROL
      *
      *          ------------------------------------------
      *          Save current W3 contents by using ocur
      *          ------------------------------------------
     C           2         OCUR D#W3RC
      *
      *          ------------------------------------------
      *          Point to first record in L2
      *          ------------------------------------------
     C           $W32K1    SETLLOMOW3L2
     C           $W32K2    READEOMOW3L2                9999
      *
      *          ------------------------------------------
      *          Read until copied source found
      *          ------------------------------------------
     C           *IN99     DOWEQ*OFF                       B01
     C           W3SEQ#    ANDLTS#SEQC
      *
      *          ------------------------------------------
      *          Get the copied source indicator
      *          ------------------------------------------
     C           1         SUBSTW3ACTO:11 I#SRCC
      *
      *          ------------------------------------------
      *          Leave when source was copied
      *          ------------------------------------------
     C           I#SRCC    IFEQ *ON                        B02
     C                     MOVE W3SRCL    S#TSRL
     C                     MOVE W3SRCF    S#TSRF
     C                     MOVE W3SRCM    S#TSRM
     C                     LEAVE
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Point to next record in L3
      *          ------------------------------------------
     C           $W32K2    READEOMOW3L2                9999
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          Reset W3 contents by using ocur
      *          ------------------------------------------
     C           1         OCUR D#W3RC
     C                     Z-ADDW3SEQ#    K#SEQ3
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S01999    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0020 - Check if we had FROL=TOOL before and               *
      *          source copied.                                     *
      *                                                             *
      * Returns   - I#FRTO   = ON :  FROL=TOOL found                *
      *                        OFF:  FROL=TOOL not found            *
      *                                                             *
      * This routine is called if a source change date conflict     *
      * occurs. We have to check if the source has been copied      *
      * before in a FROL=TOOL situation because this will always    *
      * result in a source change date error because there is only  *
      * one object record.                                          *
      *                                                             *
      * This routine uses file OMOW3L2 to read previous records     *
      * of this solution                                            *
      * When such a record is found and the source was copied,      *
      * and FROL=TOOL the indicator I#FRTO is set ON.               *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0020    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE *OFF      I#FRTO
      *
      *          ------------------------------------------
      *          Fill key fields for search with old W3
      *          ------------------------------------------
     C                     Z-ADDS#SEQF    K#SEQ3
     C                     MOVE W3SRTC    K#SRTC
     C                     MOVE W3OBJT    K#OBJT
     C                     MOVE W3OBJA    K#OBJA
     C                     MOVELW3OBJC    K#OBJC    P
     C                     MOVE W3MBRC    K#MBRC
     C                     MOVE W3FROL    K#FROL
      *
      *          ------------------------------------------
      *          Save current W3 contents by using ocur
      *          ------------------------------------------
     C           2         OCUR D#W3RC
      *
      *          ------------------------------------------
      *          Point to first record in L2
      *          ------------------------------------------
     C           $W32K1    SETLLOMOW3L2
     C           $W32K2    READEOMOW3L2                9999
      *
      *          ------------------------------------------
      *          Read until copied source found
      *          ------------------------------------------
     C           *IN99     DOWEQ*OFF                       B01
     C           W3SEQ#    ANDLTS#SEQC
      *
      *          ------------------------------------------
      *          If W3FROL = W3TOOL
      *          ------------------------------------------
     C           W3FROL    IFEQ W3TOOL                     B02
      *
      *          ------------------------------------------
      *          Get the copied source indicator
      *          ------------------------------------------
     C           1         SUBSTW3ACTO:11 I#SRCC
      *
      *          ------------------------------------------
      *          Leave when source was copied
      *          ------------------------------------------
     C           I#SRCC    IFEQ *ON                        B03
     C                     MOVE *ON       I#FRTO
     C                     LEAVE
     C                     ENDIF                           E03
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Point to next record in L3
      *          ------------------------------------------
     C           $W32K2    READEOMOW3L2                9999
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          Reset W3 contents by using ocur
      *          ------------------------------------------
     C           1         OCUR D#W3RC
     C                     Z-ADDW3SEQ#    K#SEQ3
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S02099    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0021 - Remove detail                                      *
      *                                                             *
      * Requires  - S#DTLL - Detail library                         *
      *             S#DTLF - Detail file                            *
      *             S#DTLM - Detail member                          *
      *             S#DTLT - Detail object type                     *
      *             TYPE to be executed                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine removes a detail and updates the memberfile    *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0021    BEGSR
      *
      *          ------------------------------------------
      *          Quit when one of the fields is blank
      *          ------------------------------------------
     C           S#DTLL    IFEQ *BLANK                     B01
     C           S#DTLM    OREQ *BLANK
     C           S#DTLF    OREQ *BLANK
     C                     GOTO S02199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Detail is a source
      *          ------------------------------------------
     C           I#DTLS    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Check if source still exists
      *          ------------------------------------------
     C                     MOVELS#DTLL    P#OBJL    P
     C                     MOVELS#DTLF    P#OBJC    P
     C                     MOVELS#DTLM    P#MBRC    P
     C                     MOVELC#FILE    P#OBJT    P
     C                     CALL 'OMX909C' $X909C
      *
      *          ------------------------------------------
      *          Delete the source (if any).
      *          ------------------------------------------
     C           P#STAT    IFEQ C#NORM                     B02
     C                     MOVELS#DTLL    P#OBJL    P
     C                     MOVELS#DTLF    P#OBJC    P
     C                     MOVELS#DTLM    P#DTLC    P
     C                     CALL 'OMX923C' $X923C
     C                     ELSE                            X02
     C                     MOVELC#NORM    P#STAT
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Detail is a not a source
      *          ------------------------------------------
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Detail is a message
      *          ------------------------------------------
     C           I#DTLM    IFEQ *ON                        B02
      *
      *          ------------------------------------------
      *          Delete the message (if any).
      *          ------------------------------------------
     C                     MOVE S#DTLL    P#OBJL
     C                     MOVELS#DTLF    P#OBJC    P
     C                     MOVE S#DTLM    P#DTLC
     C                     CALL 'OMX954C' $X954C
      *
      *          ------------------------------------------
      *          Detail is a not a message
      *          ------------------------------------------
     C                     ELSE                            X02
      *
      *          ------------------------------------------
      *          Set status to *TERM
      *          ------------------------------------------
     C                     MOVE C#TERM    P#STAT
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Detail has been removed
      *          ------------------------------------------
     C           P#STAT    IFEQ C#NORM                     B01
      *
      *          ------------------------------------------
      *          Get ommbr record and delete it
      *          ------------------------------------------
     C                     MOVELS#DTLF    K#OBJC    P
     C                     MOVE S#DTLT    K#OBJT
     C                     MOVE S#DTLL    K#SRCL
     C                     MOVE S#DTLM    K#SRCM
     C           $MBRK2    CHAINOMMBRL1              99
     C           *IN99     IFEQ *OFF                       B02
     C                     DELETOMMBRR
      *
      *          ------------------------------------------
      *          Open W4 when not open
      *          ------------------------------------------
     C           I#OPW4    IFNE *ON                        B03
     C                     OPEN OMO001W4
     C                     MOVE *ON       I#OPW4
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Write a W4 record to delete manual rels
      *          ------------------------------------------
     C                     Z-ADDD#JOB#    W4JOB#
     C                     MOVE W3APPC    W4APPC
     C                     MOVE W3TOPL    W4PDLC
     C                     MOVE BROBJC    W4OBJC
     C                     MOVE BROBJL    W4OBJL
     C                     MOVE BROBJT    W4OBJT
     C                     MOVE BRMBRC    W4MBRC
     C                     MOVE W3OCLS    W4OCLS
     C                     MOVE BRMBRA    W4OBJA
     C                     MOVE W3TOPL    W4RPLC
     C                     MOVE BROBJC    W4ROBC
     C                     MOVE BROBJL    W4ROBL
     C                     MOVE BROBJT    W4ROBT
     C                     MOVE BRMBRC    W4RMBC
     C                     MOVE C#DELC    W4MUTC
     C                     WRITEOMO001R4               99
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Source / message has not been removed
      *          ------------------------------------------
     C                     ELSE                            X01
     C                     EXSR SRERR
     C                     ADD  1         W#OND#
     C                     GOTO S02199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S02199    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0022 - Copy a message to the to-location.                 *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine copies the message to the to environment       *
      * (if any).                                                   *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0022    BEGSR
      *
      *          ------------------------------------------
      *          Quit when no object to be copied
      *          ------------------------------------------
     C           W3TOOL    CABEQ*BLANK    S02299
      *
      *          ------------------------------------------
      *          Quit when same from- and to-location
      *          ------------------------------------------
     C           W3FROL    IFEQ W3TOOL                     B01
     C                     MOVEAW3OBJC    MC,1
     C                     MOVEAW3TOOL    MC,13
     C                     MOVEAW3OBJT    MC,23
     C                     MOVEAW3MBRC    MC,32
     C                     MOVE 'CPY0013' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     MOVE *ON       ACT,12
     C                     GOTO S02299
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Init the create indicator
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,12
      *
      *          ------------------------------------------
      *          Fill the copy message parameters.
      *          ------------------------------------------
     C                     MOVE W3OBJC    P#OBJC
     C                     MOVE W3FROL    P#FOBL
     C                     MOVE W3OBJT    P#OBJT
     C                     MOVELW3MBRC    MSGID
     C                     MOVE W3TOOL    P#TOBL
      *
      *          ------------------------------------------
      *          Call the copy message program.
      *          ------------------------------------------
     C                     CALL 'OMX955C' $X955C
      *
      *          ------------------------------------------
      *          Quit when not *NORM
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     EXSR SRERR
     C                     GOTO S02299
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Retrieve new message description
      *          ------------------------------------------
     C                     MOVE W3OBJC    P#OBJC
     C                     MOVE W3TOOL    P#OBJL
     C                     MOVELW3MBRC    MSGID
     C                     CALL 'OMX953C' $X953C
      *
      *          ------------------------------------------
      *          Execute routine SR0023 for update memberfile
      *          ------------------------------------------
     C                     MOVE W3OBJC    K#OBJC
     C                     MOVE W3TOOL    K#OBJL
     C                     MOVELC#MSGF    K#OBJT
     C                     MOVELW3MBRC    K#MBRC
     C                     MOVE *BLANKS   S#MBRA
     C                     MOVELMSGTXT    S#MBRD
     C                     EXSR SR0023
      *
      *          ------------------------------------------
      *          Set the create indicator to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,12
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S02299    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0023 - Update member file for copied details.             *
      *                                                             *
      * Receive   - K#OBJC                                          *
      *           - K#OBJL                                          *
      *           - K#OBJT                                          *
      *           - K#MBRC                                          *
      *           - S#MBRA                                          *
      *           - S#MBRD                                          *
      * Returns   - Nothing                                         *
      *                                                             *
      * This routine updates the memberfile when a source, member   *
      * or message is created.                                      *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0023    BEGSR
      *
      *          ------------------------------------------
      *          Open W4 when not open
      *          ------------------------------------------
     C           I#OPW4    IFNE *ON                        B01
     C                     OPEN OMO001W4
     C                     MOVE *ON       I#OPW4
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check if new ommbr record already exists
      *          ------------------------------------------
     C           $MBRK3    CHAINOMMBRL1              99
      *
      *          ------------------------------------------
      *          Update or add new ommbr record
      *          ------------------------------------------
     C           *IN99     IFEQ *OFF                       B01
     C                     MOVE W3FIX#    BRFIX#
      *
      *          ------------------------------------------
      *          Fill MBRA and MBRD with new or saved values
      *          ------------------------------------------
     C           K#OBJT    IFEQ C#MSGF                     B02
     C           BRMBRA    ANDEQ*BLANKS
     C                     MOVE S#MBRA    BRMBRA
     C                     MOVE S#MBRD    BRMBRD
     C                     ENDIF                           E02
     C                     UPDATOMMBRR
     C                     ELSE                            X01
     C                     MOVELK#OBJC    BROBJC    P
     C                     MOVE K#OBJL    BROBJL
     C                     MOVE K#OBJT    BROBJT
     C                     MOVE K#MBRC    BRMBRC
     C                     MOVE S#MBRA    BRMBRA
     C                     MOVE S#MBRD    BRMBRD
     C                     MOVE W3FIX#    BRFIX#
     C                     MOVE *BLANK    BROMOD
     C                     MOVE *OFF      BRUSDF
     C                     MOVE *OFF      BREXCI
     C                     WRITEOMMBRR
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          When detail is processed check if main
      *          object must be added.
      *          ------------------------------------------
     C           W3MBRC    IFNE *BLANKS                    B01
      *
      *          ------------------------------------------
      *          Check if object exists in to-lib.
      *          ------------------------------------------
     C           $BJ8K1    SETLLOMOBJL8                  99
      *
      *          ------------------------------------------
      *          Do if not found, (*IN99 = false)
      *          ------------------------------------------
     C           *IN99     IFEQ *OFF                       B02
      *
      *          ------------------------------------------
      *          Get object record of from lib
      *          ------------------------------------------
     C                     MOVE W3FROL    K#ROBL
     C                     MOVE K#OBJC    K#ROBC
     C                     MOVE K#OBJT    K#ROBT
     C           $OBJK9    CHAINOMOBJL8             N99
     C           *IN99     IFEQ *OFF                       B03
     C                     MOVE K#OBJL    RJOBJL
     C                     MOVE W3APPC    RJAPPC
     C                     MOVE W3FIX#    RJFIX#
     C                     MOVE W3TOPL    RJPDLC
     C                     WRITEOMOBJR8                99
     C                     ENDIF                           E03
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Write a W4 record to copy manual relations
      *          ------------------------------------------
     C                     Z-ADDD#JOB#    W4JOB#
     C                     MOVE W3APPC    W4APPC
     C                     MOVE W3TOPL    W4PDLC
     C                     MOVE BROBJC    W4OBJC
     C                     MOVE BROBJL    W4OBJL
     C                     MOVE BROBJT    W4OBJT
     C                     MOVE BRMBRC    W4MBRC
     C                     MOVE W3OCLS    W4OCLS
     C                     MOVE BRMBRA    W4OBJA
     C                     MOVE W3FRPL    W4RPLC
     C                     MOVE BROBJC    W4ROBC
     C                     MOVE W3FROL    W4ROBL
     C                     MOVE BROBJT    W4ROBT
     C                     MOVE BRMBRC    W4RMBC
     C                     MOVE C#ADDC    W4MUTC
     C                     WRITEOMO001R4               99
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C                     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0036 - Convert data for physical files.                   *
      *                                                             *
      * Returns   - I#QW3                                           *
      *                                                             *
      * This routine first detects which PF must be used as a base. *
      * The following fields influences the process:                *
      *                                                             *
      * CNVS - Conversion scope                                     *
      *        0 = look only for PF in to lib                       *
      *        1 = look only for PF in to libl                      *
      *        2 = look only for PF in to environment               *
      * CNVT - Conversion type                                      *
      *      b,0 = normal conversion                                *
      *        8 = conversion by calling a program                  *
      *        9 = conversion by using a reference object           *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0036    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
     C                     MOVE *BLANKS   W#REFC    P
     C                     MOVE *BLANKS   W#REFT
     C                     MOVE *BLANKS   W#REFL
      *
      *          ------------------------------------------
      *          When CNVT = 9 search for reference object
      *          ------------------------------------------
     C           W3CNVT    IFEQ '9'                        B01
     C                     MOVE *OFF      W#SCPL           Scope low
     C                     MOVE W3CNVS    W#SCPH           Scope high
     C                     MOVE W3TOPL    W#REFP
     C                     Z-ADDW3SEQ#    W#REFS
     C                     MOVELW3ROBC    W#REFC    P
     C                     MOVE W3OBJT    W#REFT
     C                     MOVE W3TOOL    W#REFL
     C                     EXSR SR0074
      *
      *          ------------------------------------------
      *          Process found / messsage not found
      *          ------------------------------------------
     C           W#REFL    CABNE*BLANK    S03680
     C                     GOTO S03660
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Other CNTV: search for object itself
      *          ------------------------------------------
     C           W3OBJR    IFEQ *ON                        B01
     C                     MOVELW3OBJC    W#REFC    P
     C                     MOVE W3OBJT    W#REFT
     C                     MOVE W#FLBL    W#REFL
     C                     GOTO S03680
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Message when scope = 0
      *          ------------------------------------------
     C           W3CNVS    CABEQ*OFF      S03660
      *
      *          ------------------------------------------
      *          Search for object in libl or pdlc
      *          ------------------------------------------
     C                     MOVE *ON       W#SCPL           Scope low
     C                     MOVE W3CNVS    W#SCPH           Scope high
     C                     MOVE W3TOPL    W#REFP
     C                     Z-ADDW3SEQ#    W#REFS
     C                     MOVELW3OBJC    W#REFC    P
     C                     MOVE W3OBJT    W#REFT
     C                     MOVE W3TOOL    W#REFL
     C                     EXSR SR0074
      *
      *          ------------------------------------------
      *          Process found / message not found
      *          ------------------------------------------
     C           W#REFL    CABNE*BLANK    S03680
     C                     GOTO S03660
      *
      *          ------------------------------------------
      *          No object found for conversion
      *          ------------------------------------------
     C           S03660    TAG
      *
      *          ------------------------------------------
      *          For CNVT = 0 whe send a warning and quit
      *          this routine. (Status is *NORM)
      *          ------------------------------------------
     C           W3CNVT    IFEQ *OFF                       B01
     C           W3CNVT    OREQ ' '
     C                     MOVEAW3TOOL    MC,1
     C                     MOVEAW3OBJC    MC,11
     C                     MOVEAPPCNVS    MC,21
     C                     MOVEAMC        MSGDTA
     C                     MOVE 'CNVE004' MSGID
     C                     EXSR SNDMSG
     C                     GOTO S03699
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          For CNVT = 8 Whe send a warning and do as if
      *          we found the object. Maybe the conversion
      *          program solves the problem.
      *          ------------------------------------------
     C           W3CNVT    IFEQ '8'                        B01
     C                     MOVEAW3PGML    MC,1
     C                     MOVEAW3PGMN    MC,11
     C                     MOVEAW3TOOL    MC,21
     C                     MOVEAW3OBJC    MC,31
     C                     MOVEAMC        MSGDTA
     C                     MOVE 'CNVE005' MSGID
     C                     EXSR SNDMSG
     C                     GOTO S03680
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          For CNVT = 9 Whe send an error because we
      *          couldn't find the reference object.
      *          ------------------------------------------
     C                     MOVEAW3TOOL    MC,1
     C                     MOVEAW3OBJC    MC,11
     C                     MOVEAW3ROBC    MC,21
     C                     MOVEAPPCNVS    MC,31
     C                     MOVEAMC        MSGDTA
     C                     MOVE 'CNVE006' MSGID
     C                     MOVE *OFF      ACT,14
     C                     EXSR SNDMSG
     C                     EXSR SRERR
     C                     GOTO S03699
      *
      *          ------------------------------------------
      *          Execute the conversion
      *          ------------------------------------------
     C           S03680    TAG
     C                     MOVE *OFF      ACT,14
      *
      *          ------------------------------------------
      *          Quit when from = To
      *          ------------------------------------------
     C           W#REFC    IFEQ W3OBJC                     B01
     C           W#REFL    ANDEQW3TOOL
     C                     MOVEAW3TOOL    MC,1
     C                     MOVEAW3OBJC    MC,11
     C                     MOVEAPPCNVS    MC,21
     C                     MOVEAMC        MSGDTA
     C                     MOVE 'CNVE004' MSGID
     C                     EXSR SNDMSG
     C                     MOVE *ON       ACT,14
     C                     GOTO S03699
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Do normal conversion when CNVT *NE 8
      *          ------------------------------------------
     C           W3CNVT    IFNE '8'                        B01
      *
      *          ------------------------------------------
      *          Fill the parameters for the convert program.
      *          ------------------------------------------
     C                     MOVELW#REFC    P#FOBC    P
     C                     MOVE W#REFL    P#FOBL
     C                     MOVE W#REFT    P#FOBT
     C                     MOVELW3OBJC    P#TOBC    P
     C                     MOVE W3TOOL    P#TOBL
     C                     MOVE W3OBJT    P#TOBT
      *
      *          ------------------------------------------
      *          Call the OMS conversion program
      *          ------------------------------------------
     C                     CALL 'OMX924C' $X924C
      *
      *          ------------------------------------------
      *          Log message when ended abnormally
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B02
     C                     MOVEA*BLANKS   MC
     C                     MOVEAC#LIBL    MC,1
     C                     MOVEAC#924C    MC,11
     C                     MOVEAW#REFC    MC,21
     C                     MOVEAW#REFL    MC,31
     C                     MOVEAW3OBJC    MC,41
     C                     MOVEAW3TOOL    MC,51
     C                     MOVEAMC        MSGDTA
     C                     MOVE 'CNVE007' MSGID
     C                     EXSR SNDMSG
     C                     EXSR SRERR
     C                     GOTO S03699
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Do conversion by user program
      *          We do this thru CLP for monitoring messages.
      *          ------------------------------------------
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Fill the parameters for the convert program.
      *          ------------------------------------------
     C                     MOVELW#REFC    P#FOBC    P
     C                     MOVE W#REFL    P#FOBL
     C                     MOVELW3OBJC    P#TOBC    P
     C                     MOVE W3TOOL    P#TOBL
      *
      *          ------------------------------------------
      *          Call CL to call user program
      *          ------------------------------------------
     C                     CALL 'OMX932C' $X932C
      *
      *          ------------------------------------------
      *          Log message when ended abnormally
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B02
     C                     MOVEAW3PGML    MC,1
     C                     MOVEAW3PGMN    MC,11
     C                     MOVEAW#REFC    MC,21
     C                     MOVEAW#REFL    MC,31
     C                     MOVEAW3OBJC    MC,41
     C                     MOVEAW3TOOL    MC,51
     C                     MOVEAMC        MSGDTA
     C                     MOVE 'CNVE007' MSGID
     C                     EXSR SNDMSG
     C                     EXSR SRERR
     C                     GOTO S03699
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set conversion to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,14
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S03699    TAG
     C                     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0041 - Update OMERO for VRS# and MOD#                     *
      *                                                             *
      * This routine generates the new VRS# and MOD# if not yet     *
      * done. It is only executed for the first library list.       *
      *                                                             *
      * When moving horizontal           nothing to be done         *
      * When moving to lower environment nothing to be done         *
      * When moving from production      nothing to be done         *
      * When moving from development or emergency:                  *
      *      when VRS#,MOD#=VRSB,MODB    VRS#=highest VRS# + 1      *
      *      else                        MOD#=MOD#+1                *
      * When moving from other environments:                        *
      *      when VRS#,MOD#=VRSB,MODB    VRS#=highest VRS# + 1      *
      *      else when source changed    MOD#=MOD#+1                *
      *                                                             *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0041    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Get direction of W3 record when changed
      *          ------------------------------------------
     C           W3FRPL    IFNE S#FRPL                     B01
     C           W3TOPL    ORNE S#TOPL
     C                     EXSR SR0043
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Quit when S#DRCT not= 2 or 3 or receiving
      *          ------------------------------------------
     C           S#DRCT    IFNE '2'                        B01
     C           S#DRCT    ANDNE'3'
     C           I#RCVM    OREQ *ON
     C                     GOTO S04199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Get current solution record for input
      *          ------------------------------------------
     C           $RO1K1    CHAINOMEROL1             N99
     C           *IN99     IFNE *OFF                       B01
     C                     MOVE *OFF      ACT,1
     C                     EXSR SRERR
     C                     GOTO S04199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Quit when SOLT not= 1, 3 or 9
      *          ------------------------------------------
     C           ROSOLT    IFNE '1'                        B01
     C           ROSOLT    ANDNE'3'
     C           ROSOLT    ANDNE'9'
     C                     GOTO S04199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set update omero indicator
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,1
      *
      *          ------------------------------------------
      *          Save current version
      *          ------------------------------------------
     C                     Z-ADDROVRS#    W#VRS#
     C                     Z-ADDROMOD#    W#MOD#
      *
      *          ------------------------------------------
      *          Add 1 to VRS# when VRS#,MOD# = VRSB,MODB
      *          ------------------------------------------
     C           ROVRS#    IFEQ ROVRSB                     B01
     C           ROMOD#    ANDEQROMODB
      *
      *          ------------------------------------------
      *          Retrieve highest VRS# in this application
      *          ------------------------------------------
     C           $RO3K2    CHAINOMEROL3              99
      *
      *          ------------------------------------------
      *          The highest of ROVRS and W#VRS is used
      *          ------------------------------------------
     C           ROVRS#    IFLT W#VRS#                     B02
     C                     Z-ADDW#VRS#    ROVRS#
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          VRS# = highest VRS# + 1 ; MOD# = 0
      *          ------------------------------------------
     C           ROVRS#    ADD  1         W#VRS#
     C                     Z-ADD*ZERO     W#MOD#
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          S#DRCT=2; Add 1 to MOD#
      *          ------------------------------------------
     C           S#DRCT    IFEQ '2'                        B02
     C           ROMOD#    ADD  1         W#MOD#
     C                     ELSE                            X02
      *
      *          ------------------------------------------
      *          S#DRCT=3; Add 1 to MOD# when source changed
      *            *** not implemented yet ***
      *          ------------------------------------------
     C                     MOVE *ON       ACT,1
     C                     GOTO S04199
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Get current solution record for update
      *          ------------------------------------------
     C           $RO1K1    CHAINOMEROL1              99
     C           *IN99     IFNE *OFF                       B01
     C                     MOVE *OFF      ACT,1
     C                     EXSR SRERR
     C                     GOTO S04199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Rewrite solution
      *          ------------------------------------------
     C                     Z-ADDW#VRS#    ROVRS#
     C                     Z-ADDW#MOD#    ROMOD#
     C                     UPDATOMEROR
      *
      *          ------------------------------------------
      *          Set update omero indicator to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,1
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S04199    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0042 - Update OMOBJ / OMMBR                               *
      *                                                             *
      * When the object / detail is moved to higher level, the      *
      * from-object is refreshed.                                   *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0042    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Get direction of W3 record when changed
      *          ------------------------------------------
     C           W3FRPL    IFNE S#FRPL                     B01
     C           W3TOPL    ORNE S#TOPL
     C                     EXSR SR0043
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          No quit allowed when restart mode
      *          ------------------------------------------
     C           I#RSTR    IFNE *ON                        B01
      *
      *          ------------------------------------------
      *          Quit when S#DRCT not= 2 or 3
      *          ------------------------------------------
     C           S#DRCT    IFNE '2'                        B02
     C           S#DRCT    ANDNE'3'
     C                     GOTO S04299
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Get current solution record for input
      *          ------------------------------------------
     C           $RO1K1    CHAINOMEROL1             N99
     C           *IN99     IFNE *OFF                       B01
     C                     MOVE *OFF      ACT,1
     C                     EXSR SRERR
     C                     GOTO S04299
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set update omobj indicator
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,2
      *
      *          ------------------------------------------
      *          Refresh from-object for objects
      *          ------------------------------------------
     C           W3MBRC    IFEQ *BLANK                     B01
      *
      *          ------------------------------------------
      *          We first check without update
      *          ------------------------------------------
     C                     MOVE '50'      O4ACTC
     C                     MOVE *BLANK    O4EOP
     C           S#DRCT    IFEQ '2'                        B02
     C                     MOVE '2'       O4W4
     C                     ELSE                            X02
     C                     MOVE '3'       O4W4
     C                     ENDIF                           E02
     C                     MOVE *ON       O4PRT
     C                     MOVE *BLANK    O4PR2
     C                     MOVE *OFF      O4UPD
     C                     MOVE *ON       O4UPB
     C                     MOVE *ON       O4LIB
     C           W3SEQ#    IFEQ S#SEQF                     B02
     C                     MOVE W3APPC    O4APPC
     C                     MOVE W3FRPL    O4PDLC
     C                     ELSE                            X02
     C                     MOVELC#SAME    O4APPC    P
     C                     MOVELC#SAME    O4PDLC    P
     C                     ENDIF                           E02
     C           I#IFS     IFEQ *ON                        B02
     C                     MOVELC#IFSO    O4OBJC    P
     C                     MOVE *BLANKS   O4OBJL
     C                     MOVEAW#FFPC    IOB
     C                     ELSE                            X02
     C                     MOVE W3OBJC    O4OBJC
     C                     MOVE W3FROL    O4OBJL
     C                     MOVE *BLANKS   IOB
     C                     ENDIF                           E02
     C                     MOVE W3OBJT    O4OBJT
     C           I#TMP     IFEQ *ON                        B02
     C                     MOVELC#SAME    O4OBJA    P
     C                     MOVELC#SAME    O4OBJD    P
     C                     MOVELC#SAME    O4SRCL    P
     C                     MOVELC#SAME    O4OCRT    P
     C                     ELSE                            X02
     C                     MOVELC#OBJD    O4OBJA    P
     C                     MOVELC#OBJD    O4OBJD    P
     C                     MOVELC#BEST    O4SRCL    P
     C                     MOVELC#OBJD    O4OCRT    P
     C                     ENDIF                           E02
     C                     MOVELC#ASTR    O4SRCS    P
     C                     MOVELC#SAME    O4SRCF    P
     C                     MOVELC#SAME    O4SRCM    P
     C                     MOVELC#RTV     O4SRCX    P
     C                     MOVE *BLANK    O4OBJX
     C                     MOVE *BLANK    O4OMOD
     C                     MOVE ROFIX#    O4FIX#
     C                     MOVELC#ASTR    O4USDF    P
     C                     MOVELC#ASTR    O4EXCI    P
     C                     MOVELW3OCLS    O4OCLS
     C                     Z-ADDROVRS#    O4VRS#
     C                     Z-ADDROMOD#    O4MOD#
     C                     MOVE *BLANK    O4CHGX
     C                     MOVE *BLANK    O4RPLC
     C                     MOVE *BLANK    O4ROBL
     C                     CALL 'OMQCHGOB'$QCHGO
      *
      *          ------------------------------------------
      *          Send message when error occurred
      *          ------------------------------------------
     C           O4MSTP    IFEQ 'E'                        B02
     C           O4MSTP    OREQ 'N'
     C                     MOVE O4MSID    MSGID
     C                     MOVELO4MSGD    MSGDTA
     C                     EXSR SNDMSG
     C                     EXSR SRERR
     C                     GOTO S04299
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Further checking when dates differ from W3
      *          but not when object has no source.
      *          ------------------------------------------
     C           W3SRCP    IFNE *BLANK                     B02
     C           W3SRCX    IFNE O4SRCX                     B03
     C           W3OBJX    ORNE O4OBJX
      *
      *          ------------------------------------------
      *          No error when recompiled 100% or receiving
      *          ------------------------------------------
     C           O4SRCX    IFEQ O4OBJX                     B04
     C           I#RCVM    OREQ *ON
     C                     ELSE                            X04
      *
      *          ------------------------------------------
      *          Check if we had FROL=TOOL before
      *          and the source was copied
      *          ------------------------------------------
     C                     EXSR SR0020
      *
      *          ------------------------------------------
      *          Error if not found
      *          ------------------------------------------
     C           I#FRTO    IFNE *ON                        B05
     C                     MOVE 'OTPE003' MSGID
     C                     MOVE *BLANK    MSGDTA
     C                     EXSR SNDMSG
     C                     EXSR SRERR
     C                     GOTO S04299
     C                     ENDIF                           E05
     C                     ENDIF                           E04
     C                     ENDIF                           E03
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Refresh again with update
      *          ------------------------------------------
     C                     MOVE *ON       O4UPD
     C                     CALL 'OMQCHGOB'$QCHGO
      *
      *          ------------------------------------------
      *          Send message when error occurred
      *          ------------------------------------------
     C           O4MSTP    IFEQ 'E'                        B02
     C                     MOVE O4MSID    MSGID
     C                     MOVELO4MSGD    MSGDTA
     C                     EXSR SNDMSG
     C                     EXSR SRERR
     C                     GOTO S04299
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Update W3 with new values
      *          ------------------------------------------
     C                     MOVE O4OBJA    W3OBJA
     C                     MOVE O4SRCS    W3SRCS
     C                     MOVE O4SRCX    W3SRCX
     C                     MOVE O4OBJX    W3OBJX
     C                     Z-ADDO4VRS#    W3VRS#
     C                     Z-ADDO4MOD#    W3MOD#
     C                     MOVE O4CHGX    W3CHGX
      *
      *          ------------------------------------------
      *          Process OMMBR when detail
      *          ------------------------------------------
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Read main detail record
      *          ------------------------------------------
     C                     MOVE W3FROL    K#OBJL
     C                     MOVELW3OBJC    K#OBJC    P
     C                     MOVE W3OBJT    K#OBJT
     C                     MOVE W3MBRC    K#MBRC
     C           $BR1K1    CHAINOMMBRL1              99
      *
      *          ------------------------------------------
      *          Update main detail when found
      *          ------------------------------------------
     C           *IN99     IFEQ *OFF                       B02
     C                     MOVE ROFIX#    BRFIX#
     C                     Z-ADDROVRS#    BRVRS#
     C                     Z-ADDROMOD#    BRMOD#
     C                     UPDATOMMBRR
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set update omobj indicator to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,2
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S04299    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0043 - Get direction for the W3 movement                  *
      *                                                             *
      * This routine generates the S#DRCT field that contains       *
      * the direction.                                              *
      *                                                             *
      * We use the following fields:                                *
      *      S#FRPL     Previous from environment                   *
      *      S#TOPL     Previous to   environment                   *
      *      S#DRCT     Direction                                   *
      *                 H = horizontal                              *
      *                 0 = lower                                   *
      *                 1 = from production or *any                 *
      *                 2 = from dev or emergency                   *
      *                 3 = from other                              *
      *      S#FRPS     SEQ# from environment                       *
      *      S#TOPS     SEQ# to   environment                       *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0043    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Get direction of W3 record
      *          ------------------------------------------
     C                     MOVE W3FRPL    S#FRPL
     C                     MOVE W3TOPL    S#TOPL
      *
      *          ------------------------------------------
      *          Horizontal movement
      *          ------------------------------------------
     C           W3FRPL    IFEQ W3TOPL                     B01
     C                     MOVE 'H'       S#DRCT
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Movement from production or *any
      *          ------------------------------------------
     C           W3FRPL    IFEQ D#HPLC                     B02
     C           W3FRPL    OREQ C#ANY
     C                     MOVE *ON       S#DRCT
     C                     ELSE                            X02
      *
      *          ------------------------------------------
      *          Movement from develepment or emergency
      *          ------------------------------------------
     C           W3FRPL    IFEQ D#LPLC                     B03
     C           W3FRPL    OREQ D#EPLC
     C                     MOVE '2'       S#DRCT
     C                     ELSE                            X03
      *
      *          ------------------------------------------
      *          Other movement; get seq# W3FRPL
      *          ------------------------------------------
     C           50        SUB  D#ENV#    IX
     C           IX        IFGT 49                         B04
     C                     MOVE *OFF      *IN99
     C                     ELSE                            X04
     C           W3FRPL    LOKUPENV,IX                   99
     C                     ENDIF                           E04
      *
      *          ------------------------------------------
      *          When not found; assume other movement
      *          ------------------------------------------
     C           *IN99     IFEQ *OFF                       B04
     C                     Z-ADD*ZERO     S#FRPS
     C                     ELSE                            X04
     C                     Z-ADDEN#,IX    S#FRPS
     C                     ENDIF                           E04
      *
      *          ------------------------------------------
      *          Other movement; get seq# W3TOPL
      *          ------------------------------------------
     C           50        SUB  D#ENV#    IX
     C           IX        IFGT 49                         B04
     C                     MOVE *OFF      *IN99
     C                     ELSE                            X04
     C           W3TOPL    LOKUPENV,IX                   99
     C                     ENDIF                           E04
      *
      *          ------------------------------------------
      *          When not found; assume other movement
      *          ------------------------------------------
     C           *IN99     IFEQ *OFF                       B04
     C                     Z-ADD*HIVAL    S#TOPS
     C                     ELSE                            X04
     C                     Z-ADDEN#,IX    S#TOPS
     C                     ENDIF                           E04
      *
      *          ------------------------------------------
      *          Get S#DRCT for other movement
      *          ------------------------------------------
     C           S#FRPS    IFGT S#TOPS                     B04
     C                     MOVE *OFF      S#DRCT
     C                     ELSE                            X04
     C                     MOVE '3'       S#DRCT
     C                     ENDIF                           E04
     C                     ENDIF                           E03
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S04399    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0044 - Register a new Fix number                          *
      *                                                             *
      * This routine stores a new Fix in array FIX and stores       *
      * a new programmer in array PGR.                              *
      * When a new programmer is stored and we are stransferring    *
      * from- or to- Development or emergency and the programmer    *
      * has not himself started this transfer, then we send         *
      * him a message to be careful when PPMPTC is *ON.             *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0044    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Save this new Fix number
      *          ------------------------------------------
     C                     MOVE W3FIX#    S#FIX#
      *
      *          ------------------------------------------
      *          Check new Fix has been registered already
      *          ------------------------------------------
     C                     Z-ADDW#FCUR    IX
     C           W3FIX#    LOKUPFIX,IX                   99
      *
      *          ------------------------------------------
      *          Quit when found
      *          ------------------------------------------
     C           *IN99     CABEQ*ON       S04499
      *
      *          ------------------------------------------
      *          Store new Fix number
      *          ------------------------------------------
     C                     Z-ADDW#FCUR    IX
     C                     MOVE W3FIX#    FIX,IX
     C                     SUB  1         W#FCUR
      *
      *          ------------------------------------------
      *          Read the Fix record
      *          ------------------------------------------
     C           $ERSK1    CHAINOMERSL1             N99
     C           *IN99     CABEQ*ON       S04499
      *
      *          ------------------------------------------
      *          Check programmer is special value
      *          ------------------------------------------
     C                     MOVELRSPGMR    W#POS1
     C           W#POS1    IFEQ '*'                        B01
      *
      *          ------------------------------------------
      *          Read the Fix record for update
      *          ------------------------------------------
     C           $ERSK1    CHAINOMERSL1              99
     C           *IN99     CABEQ*ON       S04499
      *
      *          ------------------------------------------
      *          Fill RSPGMR with current user
      *          ------------------------------------------
     C                     MOVE D#USID    RSPGMR
      *
      *          ------------------------------------------
      *          Update OMERS and quit
      *          ------------------------------------------
     C                     UPDATOMERSR                 99
     C                     GOTO S04499
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check programmer is new
      *          ------------------------------------------
     C                     Z-ADDW#PCUR    IX
     C           RSPGMR    LOKUPPGR,IX                   99
      *
      *          ------------------------------------------
      *          Quit when found
      *          ------------------------------------------
     C           *IN99     CABEQ*ON       S04499
      *
      *          ------------------------------------------
      *          Store new programmer
      *          ------------------------------------------
     C                     Z-ADDW#PCUR    IX
     C                     MOVE RSPGMR    PGR,IX
     C                     SUB  1         W#PCUR
      *
      *          ------------------------------------------
      *          Quit when no message necessary
      *          ------------------------------------------
     C           PPMTPC    IFNE *ON                        B01
     C           D#USID    OREQ RSPGMR
     C                     GOTO S04499
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Get direction of W3 record when changed
      *          ------------------------------------------
     C           W3FRPL    IFNE S#FRPL                     B01
     C           W3TOPL    ORNE S#TOPL
     C                     EXSR SR0043
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Quit when not from or to dev/emergency
      *          ------------------------------------------
     C           S#DRCT    IFNE *ON                        B01
     C           S#DRCT    ANDNE'2'
     C                     GOTO S04499
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Send a message to the programmer
      *          ------------------------------------------
     C                     MOVELRSPGMR    P#USID
     C                     MOVE *OFF      P#RMTI
     C                     MOVEL'OTP0004' P#MSGN
     C                     MOVEL'OMSMSG'  P#MSGF
     C                     MOVEAW3APPC    MC,1
     C                     MOVEAW3FIX#    MC,6
     C                     MOVEAW#FLBL    MC,16
     C                     MOVEAMC        P#MSGD
     C                     CALL 'OMX966C' $X966C
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S04499    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0045 - Refresh W3 with OMERO info                         *
      *          and prefill OMFBC with solution info               *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0045    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Read solution record for all objects
      *          ------------------------------------------
     C           $RO1K1    CHAINOMEROL1             N99
     C           *IN99     IFEQ *ON                        B01
     C                     MOVE *OFF      ACT,1
     C                     EXSR SRERR
     C                     GOTO S04599
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Update W3 with the solution info
      *          ------------------------------------------
     C                     Z-ADDROVRSB    W3VRSB
     C                     Z-ADDROMODB    W3MODB
     C                     Z-ADDROVRS#    W3VRS#
     C                     Z-ADDROMOD#    W3MOD#
     C                     MOVE ROOVRC    W3OVRC
     C                     MOVE ROSOLT    W3SOLT
      *
      *          ------------------------------------------
      *          Prefill OMFBC with solution info
      *          ------------------------------------------
     C                     MOVE ROAPPC    BCSAPC
     C                     MOVE ROFIX#    BCSFIX
     C                     MOVE ROOBJC    BCSOBC
     C                     MOVE ROOBJT    BCSOBT
     C                     MOVE ROOBJA    BCSOBA
     C                     MOVE ROMBRC    BCSMBC
     C                     MOVE ROOBJL    BCSOBL
     C                     MOVE ROOCLS    BCSOCL
     C                     MOVE ROPDLC    BCSPDL
     C                     MOVE ROSRCP    BCSSRC
     C                     Z-ADDROVRSB    BCSVRB
     C                     Z-ADDROMODB    BCSMDB
     C                     Z-ADDROVRS#    BCSVR#
     C                     Z-ADDROMOD#    BCSMD#
     C                     MOVE ROOVRC    BCSOVR
     C                     MOVE ROSOLT    BCSSOL
     C                     MOVE ROSTAT    BCSSTA
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S04599    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0051 - Determine library list.                            *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine determines the library list that is to be      *
      * used to create logical files.                               *
      *                                                             *
      * LLA contains the libraries where the PF's are stored        *
      * LFR contains related PF's of the From-object                *
      * PFR contains related PF                                     *
      * PFL contains related PF library                             *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0051    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
     C                     MOVE *BLANKS   RPF
     C                     MOVE *BLANKS   RPL
     C                     MOVE *BLANKS   LLA
     C                     Z-ADD0         IW
     C                     Z-ADD0         W#NOTF
     C                     MOVE *ON       I#LDUP
      *
      *          ------------------------------------------
      *          LLA (library-list array) starts with to-lib
      *          ------------------------------------------
     C                     Z-ADD1         IV
     C                     MOVE W3TOOL    LLA,IV
      *
      *          ------------------------------------------
      *          Retrieve related PF's of from object
      *          ------------------------------------------
     C                     MOVELW3OBJC    P#OBJC    P
     C                     MOVE W3OBJA    P#OBJA
      *
      *          ------------------------------------------
      *          When recreate LF we use fallback lib
      *          ------------------------------------------
     C           I#RCRT    IFEQ *ON                        B01
     C                     MOVE W#FLBL    P#OBJL
     C                     ELSE                            X01
     C                     MOVE W3FROL    P#OBJL
     C                     ENDIF                           E01
     C                     CALL 'OMX022'  $X022
      *
      *          ------------------------------------------
      *          No processing when not *NORM
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     MOVE *BLANKS   P#LFR
     C                     Z-ADD32        W#NOTF
     C                     GOTO S05160
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set pointer to first related PF
      *          ------------------------------------------
     C                     Z-ADD1         IX
      *
      *          ------------------------------------------
      *          Do while not end of array
      *          ------------------------------------------
     C           IX        DOWLT33                         B01
     C           LFR,IX    ANDGT*BLANK
      *
      *          ------------------------------------------
      *          Move array entry to data structure
      *          ------------------------------------------
     C                     MOVEALFR,IX    D#LFR
      *
      *          ------------------------------------------
      *          If the related physical is not in the from library
      *          and not in the to library then CRTDUPOBJ can not be
      *          done for this logical.
      * ADDED    If the related physical is in the fallback library
      *          then it is ok too (wj).
      *          ------------------------------------------
     C           I#LDUP    IFEQ *ON                        B02
     C           D#LFRL    IFNE W3FROL                     B03
     C           D#LFRL    ANDNEW3TOOL
     C           D#LFRL    ANDNEW#FLBL
     C                     MOVE *OFF      I#LDUP
     C                     ENDIF                           E03
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          When recreate LF we know the libraries
      *          ------------------------------------------
     C           I#RCRT    IFEQ *ON                        B02
      *
      *          ------------------------------------------
      *          When PF is in fallback library
      *          ------------------------------------------
     C           D#LFRL    IFEQ W#FLBL                     B03
      *
      *          ------------------------------------------
      *          Use the TOOL of that PF
      *          ------------------------------------------
     C                     Z-ADDW#PF#     IY
     C           D#LFRC    LOKUPPFP,IY                   99
     C           *IN99     IFEQ *ON                        B04
     C                     MOVELD#LFRC    W#REFC    P
     C                     MOVE PFL,IY    W#REFL
     C                     ENDIF                           E04
      *
      *          ------------------------------------------
      *          Use same PF-lib for other PF's
      *          ------------------------------------------
     C                     ELSE                            X03
     C                     MOVELD#LFRC    W#REFC    P
     C                     MOVE D#LFRL    W#REFL
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Normal search process for LF
      *          ------------------------------------------
     C                     ELSE                            X02
      *
      *          ------------------------------------------
      *          SEARCH THIS PF IN TO_LIBRARY
      *          ------------------------------------------
     C                     MOVE '0'       W#SCPL           Scope low
     C                     MOVE '0'       W#SCPH           Scope high
     C                     MOVE W3TOPL    W#REFP
     C                     Z-ADDW3SEQ#    W#REFS
     C                     MOVELD#LFRC    W#REFC    P
     C                     MOVE W3OBJT    W#REFT
     C                     MOVE W3TOOL    W#REFL
     C                     EXSR SR0074
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Store location in array RPF and RPL
      *          ------------------------------------------
     C                     MOVELW#REFC    RPF,IX
     C                     MOVE W#REFL    RPL,IX
      *
      *          ------------------------------------------
      *          Store location in LLA when filled
      *          ------------------------------------------
     C           W#REFL    IFNE *BLANK                     B02
      *
      *          ------------------------------------------
      *          Store location in LLA when not stored yet
      *          ------------------------------------------
     C           W#REFL    LOKUPLLA                      99
     C           *IN99     IFEQ *OFF                       B03
     C                     ADD  1         IV
     C                     MOVE W#REFL    LLA,IV
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Add 1 to the not found count
      *          ------------------------------------------
     C                     ELSE                            X02
     C                     ADD  1         W#NOTF
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Set pointer to next related PF
      *          ------------------------------------------
     C                     ADD  1         IX
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          Quit when all libraries found
      *          ------------------------------------------
     C           W#NOTF    CABEQ*ZERO     S05180
      *
      *          ------------------------------------------
      *          Search continues for libraries not found
      *          ------------------------------------------
     C                     Z-ADD1         IX
      *
      *          ------------------------------------------
      *          Do while not end of array
      *          ------------------------------------------
     C           IX        DOWLT33                         B01
     C           RPF,IX    ANDNE*BLANK
      *
      *          ------------------------------------------
      *          Process when library is blank
      *          ------------------------------------------
     C           RPL,IX    IFEQ *BLANK                     B02
      *
      *          ------------------------------------------
      *          SEARCH THIS PF IN TO_LIBRARY-LIST
      * WJO      CHANGED SCOPE LOW TO '0' BECAUSE THE PHSYICAL
      *          MUST ALSO EXIST ON DISK AND NOT ONLY IN OMS WHEN
      *          CREATING A LOGICAL.
      *          ------------------------------------------
     C                     MOVE '0'       W#SCPL           Scope low
     C                     MOVE '1'       W#SCPH           Scope high
     C                     MOVE W3TOPL    W#REFP
     C                     Z-ADDW3SEQ#    W#REFS
     C                     MOVELRPF,IX    W#REFC    P
     C                     MOVE W3OBJT    W#REFT
     C                     MOVE W3TOOL    W#REFL
     C                     EXSR SR0074
      *
      *          ------------------------------------------
      *          Store location in RPL and LLA when filled
      *          ------------------------------------------
     C           W#REFL    IFNE *BLANK                     B03
     C                     MOVE W#REFL    RPL,IX
     C                     SUB  1         W#NOTF
      *
      *          ------------------------------------------
      *          Store location in LLA when not stored yet
      *          ------------------------------------------
     C           W#REFL    LOKUPLLA                      99
     C           *IN99     IFEQ *OFF                       B04
     C                     ADD  1         IV
     C                     MOVE W#REFL    LLA,IV
     C                     ENDIF                           E04
     C                     ENDIF                           E03
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Set pointer to next related PF
      *          ------------------------------------------
     C                     ADD  1         IX
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          Quit when all libraries found
      *          ------------------------------------------
     C           W#NOTF    CABEQ*ZERO     S05180
      *
      *          ------------------------------------------
      *          Search continues for libraries not found
      *          ------------------------------------------
     C                     Z-ADD1         IX
      *
      *          ------------------------------------------
      *          Do while not end of array
      *          ------------------------------------------
     C           IX        DOWLT33                         B01
     C           RPF,IX    ANDNE*BLANK
      *
      *          ------------------------------------------
      *          Process when library is blank
      *          ------------------------------------------
     C           RPL,IX    IFEQ *BLANK                     B02
      *
      *          ------------------------------------------
      *          SEARCH THIS PF IN TO_ENVIRONMENT
      *          ------------------------------------------
     C                     MOVE '2'       W#SCPL           Scope low
     C                     MOVE '2'       W#SCPH           Scope high
     C                     MOVE W3TOPL    W#REFP
     C                     Z-ADDW3SEQ#    W#REFS
     C                     MOVELRPF,IX    W#REFC    P
     C                     MOVE W3OBJT    W#REFT
     C                     MOVE W3TOOL    W#REFL
     C                     EXSR SR0074
      *
      *          ------------------------------------------
      *          Store location in RPL and LLA when filled
      *          ------------------------------------------
     C           W#REFL    IFNE *BLANK                     B03
     C                     MOVE W#REFL    RPL,IX
     C                     SUB  1         W#NOTF
      *
      *          ------------------------------------------
      *          Store location in LLA when not stored yet
      *          ------------------------------------------
     C           W#REFL    LOKUPLLA                      99
     C           *IN99     IFEQ *OFF                       B04
     C                     ADD  1         IV
     C                     MOVE W#REFL    LLA,IV
     C                     ENDIF                           E04
     C                     ENDIF                           E03
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Set pointer to next related PF
      *          ------------------------------------------
     C                     ADD  1         IX
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          Quit when all libraries found
      *          ------------------------------------------
     C           W#NOTF    CABEQ*ZERO     S05180
      *
      *          ------------------------------------------
      *          One or more libraries not found in PDLC
      *          Quit when TOPL is PROD or EMERGENCY
      *          ------------------------------------------
     C           W3TOPL    IFEQ D#HPLC                     B01
     C           W3TOPL    OREQ D#EPLC
     C                     GOTO S05160
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check all LOWER environments
      *          Retrieve sequence number of to-environment
      *          ------------------------------------------
     C           50        SUB  D#ENV#    IY
     C           IY        IFGT 49                         B01
     C                     MOVE *OFF      *IN99
     C                     ELSE                            X01
     C           W3TOPL    LOKUPENV,IY                   99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Quit when not found
      *          ------------------------------------------
     C           *IN99     CABEQ*OFF      S05160
      *
      *          ------------------------------------------
      *          Postion to first lower environment
      *          ------------------------------------------
     C                     Z-ADDIY        IZ
     C                     SUB  1         IZ
      *
      *          ------------------------------------------
      *          Process all lower until emergency
      *          ------------------------------------------
     C           IZ        DOWGT*ZERO                      B01
     C           EN#,IZ    ANDNE*ZERO
     C                     Z-ADD1         IX
      *
      *          ------------------------------------------
      *          Do while not end of array
      *          ------------------------------------------
     C           IX        DOWLT33                         B02
     C           RPF,IX    ANDNE*BLANK
      *
      *          ------------------------------------------
      *          Process when library is blank
      *          ------------------------------------------
     C           RPL,IX    IFEQ *BLANK                     B03
      *
      *          ------------------------------------------
      *          SEARCH THIS PF IN TO_ENVIRONMENT
      *          ------------------------------------------
     C                     MOVE *OFF      W#SCPL           Scope low
     C                     MOVE '2'       W#SCPH           Scope high
     C                     MOVE ENV,IZ    W#REFP
     C                     Z-ADD*ZERO     W#REFS
     C                     MOVELRPF,IX    W#REFC    P
     C                     MOVE W3OBJT    W#REFT
     C                     MOVE *BLANK    W#REFL
     C                     EXSR SR0074
      *
      *          ------------------------------------------
      *          Store location in RPL and LLA when filled
      *          ------------------------------------------
     C           W#REFL    IFNE *BLANK                     B04
     C                     MOVE W#REFL    RPL,IX
     C                     SUB  1         W#NOTF
      *
      *          ------------------------------------------
      *          Store location in LLA when not stored yet
      *          ------------------------------------------
     C           W#REFL    LOKUPLLA                      99
     C           *IN99     IFEQ *OFF                       B05
     C                     ADD  1         IV
     C                     MOVE W#REFL    LLA,IV
     C                     ENDIF                           E05
     C                     ENDIF                           E04
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Set pointer to next related PF
      *          ------------------------------------------
     C                     ADD  1         IX
     C                     ENDDO                           E02
      *
      *          ------------------------------------------
      *          Quit when all libraries found
      *          ------------------------------------------
     C           W#NOTF    CABEQ*ZERO     S05180
      *
      *          ------------------------------------------
      *          Set pointer to previous environment
      *          ------------------------------------------
     C                     SUB  1         IZ
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          POSTION TO FIRST HIGHER ENVIRONMENT
      *          ------------------------------------------
     C                     Z-ADDIY        IZ
     C                     ADD  1         IZ
      *
      *          ------------------------------------------
      *          Process all higher until highest
      *          ------------------------------------------
     C           IZ        DOWLT49                         B01
     C                     Z-ADD1         IX
      *
      *          ------------------------------------------
      *          Do while not end of array
      *          ------------------------------------------
     C           IX        DOWLT33                         B02
     C           RPF,IX    ANDNE*BLANK
      *
      *          ------------------------------------------
      *          Process when library is blank
      *          ------------------------------------------
     C           RPL,IX    IFEQ *BLANK                     B03
      *
      *          ------------------------------------------
      *          SEARCH THIS PF IN TO_ENVIRONMENT
      *          ------------------------------------------
     C                     MOVE *OFF      W#SCPL           Scope low
     C                     MOVE '2'       W#SCPH           Scope high
     C                     MOVE ENV,IZ    W#REFP
     C                     Z-ADD*ZERO     W#REFS
     C                     MOVELRPF,IX    W#REFC    P
     C                     MOVE W3OBJT    W#REFT
     C                     MOVE *BLANK    W#REFL
     C                     EXSR SR0074
      *
      *          ------------------------------------------
      *          Store location in RPL and LLA when filled
      *          ------------------------------------------
     C           W#REFL    IFNE *BLANK                     B04
     C                     MOVE W#REFL    RPL,IX
     C                     SUB  1         W#NOTF
      *
      *          ------------------------------------------
      *          Store location in LLA when not stored yet
      *          ------------------------------------------
     C           W#REFL    LOKUPLLA                      99
     C           *IN99     IFEQ *OFF                       B05
     C                     ADD  1         IV
     C                     MOVE W#REFL    LLA,IV
     C                     ENDIF                           E05
     C                     ENDIF                           E04
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Set pointer to next related PF
      *          ------------------------------------------
     C                     ADD  1         IX
     C                     ENDDO                           E02
      *
      *          ------------------------------------------
      *          Quit when all libraries found
      *          ------------------------------------------
     C           W#NOTF    CABEQ*ZERO     S05180
      *
      *          ------------------------------------------
      *          Set pointer to higher environment
      *          ------------------------------------------
     C                     ADD  1         IZ
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          One or more libraries not found !!!!
      *          ------------------------------------------
     C           S05160    TAG
      *
      *          ------------------------------------------
      *          When LF is moved to fallback we check if
      *          we can find the related PF there.
      *          ------------------------------------------
     C           W3OBJR    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Get related PF's of LF in fallback lib
      *          Use X022P iso X022 to prevent conflicts
      *          ------------------------------------------
     C                     MOVELW3OBJC    P#OBJC    P
     C                     MOVE W3OBJA    P#OBJA
     C                     MOVE W#FLBL    P#OBJL
     C                     CALL 'OMX022'  $X022P
     C           P#STAT    CABNEC#NORM    S05170
      *
      *          ------------------------------------------
      *          Search continues for libraries not found
      *          ------------------------------------------
     C                     Z-ADD1         IX
      *
      *          ------------------------------------------
      *          Do while not end of array
      *          ------------------------------------------
     C           IX        DOWLT33                         B02
     C           RPF,IX    ANDNE*BLANK
      *
      *          ------------------------------------------
      *          Process when library is blank
      *          ------------------------------------------
     C           RPL,IX    IFEQ *BLANK                     B03
      *
      *          ------------------------------------------
      *          Check if PF is in array PFR
      *          ------------------------------------------
     C                     Z-ADD1         IY
      *
      *          ------------------------------------------
      *          Do while not end of array
      *          ------------------------------------------
     C           IY        DOWLT33                         B04
     C           PFR,IX    ANDGT*BLANK
      *
      *          ------------------------------------------
      *          Move array entry to data structure
      *          ------------------------------------------
     C                     MOVEAPFR,IX    D#PFR
      *
      *          ------------------------------------------
      *          When PF is the one we are looking for
      *          ------------------------------------------
     C           D#PFRC    IFEQ RPF,IX                     B05
     C                     MOVE RPF,IX    W#REFC
     C                     MOVE RPL,IX    W#REFL
     C                     ELSE                            X05
     C                     MOVE *BLANK    W#REFL
     C                     ENDIF                           E05
      *
      *          ------------------------------------------
      *          Store location in RPL and LLA when filled
      *          ------------------------------------------
     C           W#REFL    IFNE *BLANK                     B05
     C                     MOVE W#REFL    RPL,IX
     C                     SUB  1         W#NOTF
      *
      *          ------------------------------------------
      *          Store location in LLA when not stored yet
      *          ------------------------------------------
     C           W#REFL    LOKUPLLA                      99
     C           *IN99     IFEQ *OFF                       B06
     C                     ADD  1         IV
     C                     MOVE W#REFL    LLA,IV
     C                     ENDIF                           E06
     C                     ENDIF                           E05
     C                     ADD  1         IY
     C                     ENDDO                           E04
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Set pointer to next related PF
      *          ------------------------------------------
     C                     ADD  1         IX
     C                     ENDDO                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Quit when all libraries found
      *          ------------------------------------------
     C           W#NOTF    CABEQ*ZERO     S05180
      *
      *          ------------------------------------------
      *          One or more libraries not found !!!!
      *          Try to create LF with the found libraries
      *          ------------------------------------------
     C           S05170    TAG
     C                     MOVEL'99999999'LLA,26
     C                     MOVE '99'      LLA,26
      *
      *          ------------------------------------------
      *          Be sure CHGLIBL *NONE will be executed
      *          ------------------------------------------
     C           IV        IFLT 2                          B01
     C                     Z-ADD2         IV
     C                     ENDIF                           E01
     C                     GOTO S05199
      *
      *          ------------------------------------------
      *          All libraries found
      *          ------------------------------------------
     C           S05180    TAG
     C                     MOVEL'99999999'LLA,26
     C                     MOVE '99'      LLA,26
     C                     GOTO S05199
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S05199    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0052 - Create logical file                                *
      *                                                             *
      * Requires  - LLA - Library list array correctly filled       *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine creates a logical file in the to environment.  *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0052    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Fill the program parameters.
      *          ------------------------------------------
     C                     MOVELW3OBJC    P#OBJC    P
     C                     MOVE W3TOOL    P#OBJL
     C                     MOVE W3FROL    P#FROL
      *
      *          ------------------------------------------
      *          To-source location is blank
      *          ------------------------------------------
     C           W3SRCL    IFEQ *BLANK                     B01
     C           W3SRCL    OREQ C#NSRC
      *
      *          ------------------------------------------
      *          When source copied use that location
      *          ------------------------------------------
     C           I#SRCC    IFEQ *ON                        B02
     C                     MOVE S#TSRL    P#SRCL
     C                     MOVE S#TSRF    P#SRCF
     C                     MOVE S#TSRM    P#SRCM
      *
      *          ------------------------------------------
      *          Source not copied before. use from values
      *          ------------------------------------------
     C                     ELSE                            X02
     C                     MOVE W3FSRL    P#SRCL
     C                     MOVE W3FSRF    P#SRCF
     C                     MOVE W3FSRM    P#SRCM
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          To-source location is filled
      *          ------------------------------------------
     C                     ELSE                            X01
     C                     MOVE W3SRCL    P#SRCL
     C                     MOVE W3SRCF    P#SRCF
     C                     MOVE W3SRCM    P#SRCM
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Call the compile program when source is known
      *          ------------------------------------------
     C           P#SRCL    IFNE *BLANKS                    B01
     C           P#SRCF    ANDNE*BLANKS
     C           P#SRCM    ANDNE*BLANKS
     C                     CALL 'OMX925C' $X925C
     C                     ELSE                            X01
     C                     MOVE C#TERM    P#STAT
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Try CRTDUPOBJ if not compiled. This is only allowed
      *          if I#LDUP is set. It was set in SR 0051.
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
      *
      *                    --------------------------------
      *                    CRTDUPOBJ is allowed
      *                    --------------------------------
     C           I#LDUP    IFEQ *ON                        B02
     C                     EXSR SR0011
      *
      *                    --------------------------------
      *                    CRTDUPOBJ is not allowed, fail the object.
      *                    --------------------------------
     C                     ELSE                            X02
     C                     MOVE 'FILE015' MSGID
     C                     MOVEAW3OBJC    MC,1
     C                     MOVEAW3TOOL    MC,11
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     EXSR SRERR
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C                     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0053 - Recreate Logicals not in Fix                       *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine is processed when the last LF has been         *
      * processed.                                                  *
      *                                                             *
      * Two actions are executed in this routine:                   *
      *                                                             *
      * 1. Per processed PF                                         *
      *    We have to check if there are LF's in tolib over the     *
      *    same PF not in the tolib. Recreate LF if so.             *
      *                                                             *
      *    Read first PF in to-environment                          *
      *    Iter until end of PF's                                   *
      *         Select PF not this library                          *
      *                Retrieve LF's of that PF                     *
      *                Iter until end of LF's                       *
      *                     Select LF-lib = W3TOOL                  *
      *                        and PF-lib not W3TOOL                *
      *                            move LF to fallback              *
      *                            recreate LF                      *
      *                     end                                     *
      *                     next LF                                 *
      *                end                                          *
      *         end                                                 *
      *         next pf                                             *
      *    end                                                      *
      *                                                             *
      * 2. Per PF moved to fallback                                 *
      *    We have to check if that PF have dependent LF's in       *
      *    a not fallback library.                                  *
      *    If so, we must recreate that logical.                    *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0053    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Array PFP contains processed PF's
      *          ------------------------------------------
     C           W#PF#     DO   999       IX               B01
      *
      *          ------------------------------------------
      *          Skip blank elements
      *          ------------------------------------------
     C           PFP,IX    IFEQ *BLANK                     B02
     C                     ITER
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          PART 1: RCRT LF in TOLIB over PF not in tolib
      *          ------------------------------------------
      *
      *          ------------------------------------------
      *          If this PF didnt exist in target library
      *          ------------------------------------------
     C           PFF,IX    IFNE *ON                        B02
      *
      *          ------------------------------------------
      *          Get the Object Record of the from-PF
      *          ------------------------------------------
     C                     MOVELPFP,IX    K#OBJC    P
     C                     MOVELC#FILE    K#OBJT    P
     C                     MOVELPFS,IX    K#OBJL    P         from lib
     C           $BJ8K1    CHAINOMOBJL8             N99
      *
      *          ------------------------------------------
      *          We only have to check the from object
      *          ------------------------------------------
     C                     ELSE                            X02
      *
      *          ------------------------------------------
      *          Point to first PF in this to-environment
      *          ------------------------------------------
     C                     MOVE P#APPC    K#APPC
     C                     MOVELPFP,IX    K#OBJC    P
     C                     MOVELC#FILE    K#OBJT    P
     C                     MOVE P#TOPL    K#PDLC
     C           $BJ4K2    CHAINOMOBJL4              99
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Do while records found.
      *          ------------------------------------------
     C           *IN99     DOWEQ*OFF                       B02
      *
      *          ------------------------------------------
      *          Skip PF that is in library we processed
      *          ------------------------------------------
     C           RJOBJL    IFNE PFL,IX                     B03
      *
      *          ------------------------------------------
      *          For each found PF, search related LF's
      *          ------------------------------------------
     C                     MOVE *OFF      S#MORE
     C                     MOVELRJOBJC    P#OBJC    P
     C                     MOVE RJOBJL    P#OBJL
     C                     MOVE RJOBJA    P#OBJA
     C                     CALL 'OMX022'  $X022P
      *
      *          ------------------------------------------
      *          When *MORE set the more indicator
      *          ------------------------------------------
     C           P#STAT    IFEQ C#MORE                     B04
     C                     MOVE *ON       S#MORE
     C                     MOVE C#NORM    P#STAT
     C                     ENDIF                           E04
      *
      *          ------------------------------------------
      *          Process when *NORM
      *          ------------------------------------------
     C           P#STAT    IFEQ C#NORM                     B04
      *
      *          ------------------------------------------
      *          Set pointer to first related LF
      *          ------------------------------------------
     C                     Z-ADD1         IY
      *
      *          ------------------------------------------
      *          Do while not end of array
      *          ------------------------------------------
     C           IY        DOWLT33                         B05
     C           PFR,IY    ANDGT*BLANK
      *
      *          ------------------------------------------
      *          Move array entry to data structure
      *          ------------------------------------------
     C                     MOVEAPFR,IY    D#PFR
      *
      *          ------------------------------------------
      *          Do only for LF's in PF-library
      *          ------------------------------------------
     C           D#PFRL    IFEQ PFL,IX                     B06
      *
      *          ------------------------------------------
      *          Get the Object Record of LF
      *          ------------------------------------------
     C                     MOVELD#PFRC    K#OBJC    P
     C                     MOVE D#PFRL    K#OBJL
     C                     MOVE C#FILE    K#OBJT
     C           $BJ8K1    CHAINOMOBJL8             N99
      *
      *          ------------------------------------------
      *          Use RJ-fields when object record found
      *          ------------------------------------------
     C           *IN99     IFEQ *OFF                       B07
     C                     MOVE RJFIX#    W3FIX#
     C                     MOVE RJSRCL    W3FSRL
     C                     MOVE RJSRCF    W3FSRF
     C                     MOVE RJSRCM    W3FSRM
     C                     MOVE RJSRCL    W3SRCL
     C                     MOVE RJSRCF    W3SRCF
     C                     MOVE RJSRCM    W3SRCM
     C                     MOVE RJSRCS    W3SRCS
     C                     Z-ADDRJVRS#    W3VRS#
     C                     Z-ADDRJMOD#    W3MOD#
     C                     ELSE                            X07
     C                     MOVE *BLANK    W3FIX#
     C                     MOVE *BLANK    W3FSRL
     C                     MOVE *BLANK    W3FSRF
     C                     MOVE *BLANK    W3FSRM
     C                     MOVE *BLANK    W3SRCL
     C                     MOVE *BLANK    W3SRCF
     C                     MOVE *BLANK    W3SRCM
     C                     MOVE *OFF      W3SRCS
     C                     Z-ADD*ZERO     W3VRS#
     C                     Z-ADD*ZERO     W3MOD#
     C                     ENDIF                           E07
      *
      *          ------------------------------------------
      *          Fill rest W3 buffer for recreation.
      *          ------------------------------------------
     C                     MOVE W3TOPL    W3FRPL
     C                     MOVE D#PFRL    W3TOOL
     C                     MOVE D#PFRL    W3FROL
     C                     MOVELD#PFRC    W3OBJC    P
     C                     MOVELC#FILE    W3OBJT    P
     C                     MOVELC#LF      W3OBJA    P
     C                     MOVE *BLANK    W3MBRC
     C                     MOVE *OFF      W3OCLS
     C                     MOVE *OFF      W3EXCI
     C                     MOVE *OFF      W3OVRC
     C                     MOVE '3'       W3SOLT
     C                     MOVE *OFF      W3SRCP
     C                     MOVE D#TYPE    S#TYPE
     C                     MOVE *BLANK    D#TYPE
     C                     MOVE *ON       I#LF
     C                     Z-ADDS#SEQC    W3SEQ#
      *
      *          ------------------------------------------
      *          Save count fields and seton recreate LF
      *          ------------------------------------------
     C                     Z-ADDIX        S#IX2
     C                     Z-ADDIY        S#IY2
     C                     MOVE *ON       I#RCRT
     C                     MOVELPFP,IX    S#RCPF    P
     C                     MOVE PFL,IX    S#RCPL
      *
      *          ------------------------------------------
      *          Log message: recreate LF
      *          ------------------------------------------
     C                     MOVEAPFP,IX    MC,1
     C                     MOVEAPFL,IX    MC,11
     C                     MOVEAW3OBJC    MC,21
     C                     MOVE 'OTP0005' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
      *
      *          ------------------------------------------
      *          Execute exceptions for UEP 3
      *          ------------------------------------------
     C                     MOVE C#XBSO    S#XUEP
     C                     EXSR SRXIFA
     C           XEOF      IFEQ *OFF                       B07
     C                     Z-ADD4         AC
     C                     MOVE C#XBSO    S#XUEP
     C                     EXSR SRXPFA
     C           I#QW3     IFNE *ON                        B08
     C                     MOVE *ON       ACT,4
     C                     ENDIF                           E08
     C                     ENDIF                           E07
      *
      *          ------------------------------------------
      *          Process actions for processing step SO
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,23
     C                     MOVEL'SO'      P#PRCS
     C                     EXSR SRAPPR
     C                     MOVE *ON       ACT,23
      *
      *          ------------------------------------------
      *          Process the LF including exceptions
      *          ------------------------------------------
     C                     EXSR SROBJ
      *
      *          ------------------------------------------
      *          Restore save fields, setoff recreate LF
      *          ------------------------------------------
     C                     MOVE *OFF      I#RCRT
     C                     MOVE *OFF      I#QW3
     C                     Z-ADDS#IX2     IX
     C                     Z-ADDS#IY2     IY
     C                     MOVE S#TYPE    D#TYPE
     C                     ENDIF                           E06
      *
      *          ------------------------------------------
      *          Set pointer to next related LF
      *          ------------------------------------------
     C                     ADD  1         IY
      *
      *          ------------------------------------------
      *          When IY > 32 and S#MORE is on, rtv next
      *          ------------------------------------------
     C           IY        IFGT 32                         B06
     C           S#MORE    ANDEQ*ON
     C                     MOVE *OFF      S#MORE
     C                     MOVE C#NEXT    P#STAT
     C                     CALL 'OMX022'  $X022P
      *
      *          ------------------------------------------
      *          When *MORE again set the more indicator
      *          ------------------------------------------
     C           P#STAT    IFEQ C#MORE                     B07
     C                     MOVE *ON       S#MORE
     C                     MOVE C#NORM    P#STAT
     C                     ENDIF                           E07
      *
      *          ------------------------------------------
      *          Process when *NORM
      *          ------------------------------------------
     C           P#STAT    IFEQ C#NORM                     B07
      *
      *          ------------------------------------------
      *          Set pointer to first related LF
      *          ------------------------------------------
     C                     Z-ADD1         IY
     C                     ENDIF                           E07
     C                     ENDIF                           E06
     C                     ENDDO                           E05
     C                     ENDIF                           E04
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Read next PF in this to-environment
      *          ( Set to EOF when PF is not in Fallback)
      *          ------------------------------------------
     C                     MOVE P#APPC    K#APPC
     C                     MOVELPFP,IX    K#OBJC    P
     C                     MOVELC#FILE    K#OBJT    P
     C                     MOVE P#TOPL    K#PDLC
     C           PFF,IX    IFNE *ON                        B03
     C                     MOVE *ON       *IN99
     C                     ELSE                            X03
     C           $BJ4K2    READEOMOBJL4                  99
     C                     ENDIF                           E03
     C                     ENDDO                           E02
      *
      *          ------------------------------------------
      *          PART 2: RCRT LF related to PF in FALLBACK
      *          ------------------------------------------
      *          Next iter when this PF is not in fallback
      *          ------------------------------------------
     C           PFF,IX    IFNE *ON                        B02
     C                     ITER
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          For PF in fallback search related LF's
      *          ------------------------------------------
     C                     MOVE *OFF      S#MORE
     C                     MOVELPFP,IX    P#OBJC    P
     C                     MOVE W#FLBL    P#OBJL
     C                     MOVE RJOBJA    P#OBJA
     C                     CALL 'OMX022'  $X022P
      *
      *          ------------------------------------------
      *          When *MORE set the more indicator
      *          ------------------------------------------
     C           P#STAT    IFEQ C#MORE                     B02
     C                     MOVE *ON       S#MORE
     C                     MOVE C#NORM    P#STAT
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Process when *NORM
      *          ------------------------------------------
     C           P#STAT    IFEQ C#NORM                     B02
      *
      *          ------------------------------------------
      *          Set pointer to first related LF
      *          ------------------------------------------
     C                     Z-ADD1         IY
      *
      *          ------------------------------------------
      *          Do while not end of array
      *          ------------------------------------------
     C           IY        DOWLT33                         B03
     C           PFR,IY    ANDGT*BLANK
      *
      *          ------------------------------------------
      *          Move array entry to data structure
      *          ------------------------------------------
     C                     MOVEAPFR,IY    D#PFR
      *
      *          ------------------------------------------
      *          Do only for LF's not in fallback library
      *          ------------------------------------------
     C           D#PFRL    IFNE W#FLBL                     B04
      *
      *          ------------------------------------------
      *          Get the Object Record of LF
      *          ------------------------------------------
     C                     MOVELD#PFRC    K#OBJC    P
     C                     MOVE D#PFRL    K#OBJL
     C                     MOVE C#FILE    K#OBJT
     C           $BJ8K1    CHAINOMOBJL8             N99
      *
      *          ------------------------------------------
      *          Use RJ-fields when object record found
      *          ------------------------------------------
     C           *IN99     IFEQ *OFF                       B05
     C                     MOVE RJFIX#    W3FIX#
     C                     MOVE RJSRCL    W3FSRL
     C                     MOVE RJSRCF    W3FSRF
     C                     MOVE RJSRCM    W3FSRM
     C                     MOVE RJSRCL    W3SRCL
     C                     MOVE RJSRCF    W3SRCF
     C                     MOVE RJSRCM    W3SRCM
     C                     MOVE RJSRCS    W3SRCS
     C                     Z-ADDRJVRS#    W3VRS#
     C                     Z-ADDRJMOD#    W3MOD#
     C                     ELSE                            X05
     C                     MOVE *BLANK    W3FIX#
     C                     MOVE *BLANK    W3FSRL
     C                     MOVE *BLANK    W3FSRF
     C                     MOVE *BLANK    W3FSRM
     C                     MOVE *BLANK    W3SRCL
     C                     MOVE *BLANK    W3SRCF
     C                     MOVE *BLANK    W3SRCM
     C                     MOVE *OFF      W3SRCS
     C                     Z-ADD*ZERO     W3VRS#
     C                     Z-ADD*ZERO     W3MOD#
     C                     ENDIF                           E05
      *
      *          ------------------------------------------
      *          Fill rest W3 buffer for recreation.
      *          ------------------------------------------
     C                     MOVE W3TOPL    W3FRPL
     C                     MOVE D#PFRL    W3TOOL
     C                     MOVE D#PFRL    W3FROL
     C                     MOVELD#PFRC    W3OBJC    P
     C                     MOVELC#FILE    W3OBJT    P
     C                     MOVELC#LF      W3OBJA    P
     C                     MOVE *BLANK    W3MBRC
     C                     MOVE *OFF      W3OCLS
     C                     MOVE *OFF      W3EXCI
     C                     MOVE *OFF      W3OVRC
     C                     MOVE '3'       W3SOLT
     C                     MOVE *OFF      W3SRCP
     C                     MOVE D#TYPE    S#TYPE
     C                     MOVE *BLANK    D#TYPE
     C                     MOVE *ON       I#LF
     C                     Z-ADDS#SEQC    W3SEQ#
      *
      *          ------------------------------------------
      *          Save count fields and seton recreate LF
      *          ------------------------------------------
     C                     Z-ADDIX        S#IX2
     C                     Z-ADDIY        S#IY2
     C                     MOVE *ON       I#RCRT
     C                     MOVE PFP,IX    S#RCPF
     C                     MOVE PFL,IX    S#RCPL
      *
      *          ------------------------------------------
      *          Log message: recreate LF
      *          ------------------------------------------
     C                     MOVEAPFP,IX    MC,1
     C                     MOVEAPFL,IX    MC,11
     C                     MOVEAW3OBJC    MC,21
     C                     MOVEAW3TOOL    MC,31
     C                     MOVE 'OTP0006' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
      *
      *          ------------------------------------------
      *          Execute exceptions for UEP 3
      *          ------------------------------------------
     C                     MOVE C#XBSO    S#XUEP
     C                     EXSR SRXIFA
     C           XEOF      IFEQ *OFF                       B05
     C                     Z-ADD4         AC
     C                     MOVE C#XBSO    S#XUEP
     C                     EXSR SRXPFA
     C           I#QW3     IFNE *ON                        B06
     C                     MOVE *ON       ACT,4
     C                     ENDIF                           E06
     C                     ENDIF                           E05
      *
      *          ------------------------------------------
      *          Process actions for processing step SO
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,23
     C                     MOVEL'SO'      P#PRCS
     C                     EXSR SRAPPR
     C                     MOVE *ON       ACT,23
      *
      *          ------------------------------------------
      *          Process the LF including exceptions
      *          ------------------------------------------
     C                     EXSR SROBJ
      *
      *          ------------------------------------------
      *          Restore save fields, setoff recreate LF
      *          ------------------------------------------
     C                     MOVE *OFF      I#RCRT
     C                     MOVE *OFF      I#QW3
     C                     Z-ADDS#IX2     IX
     C                     Z-ADDS#IY2     IY
     C                     MOVE S#TYPE    D#TYPE
     C                     ENDIF                           E04
      *
      *          ------------------------------------------
      *          Set pointer to next related LF
      *          ------------------------------------------
     C                     ADD  1         IY
      *
      *          ------------------------------------------
      *          When IY > 32 and S#MORE is on, rtv next
      *          ------------------------------------------
     C           IY        IFGT 32                         B04
     C           S#MORE    ANDEQ*ON
     C                     MOVE *OFF      S#MORE
     C                     MOVE C#NEXT    P#STAT
     C                     CALL 'OMX022'  $X022P
      *
      *          ------------------------------------------
      *          When *MORE again set the more indicator
      *          ------------------------------------------
     C           P#STAT    IFEQ C#MORE                     B05
     C                     MOVE *ON       S#MORE
     C                     MOVE C#NORM    P#STAT
     C                     ENDIF                           E05
      *
      *          ------------------------------------------
      *          Process when *NORM
      *          ------------------------------------------
     C           P#STAT    IFEQ C#NORM                     B05
      *
      *          ------------------------------------------
      *          Set pointer to first related LF
      *          ------------------------------------------
     C                     Z-ADD1         IY
     C                     ENDIF                           E05
     C                     ENDIF                           E04
     C                     ENDDO                           E03
     C                     ENDIF                           E02
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          Reset pointer of the right W3 record
      *          ------------------------------------------
     C                     READ OMOW3L1                  99
     C           *IN99     IFEQ *OFF                       B01
     C           K#TFRC    REDPEOMOW3L1                  99
     C                     ELSE                            X01
     C           *HIVAL    SETGTOMOW3L1
     C           K#TFRC    REDPEOMOW3L1                  99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S05399    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0061 - Move to-document to fallback library               *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine moves the to-doc to the fallback library       *
      * (if any).                                                   *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0061    BEGSR
      *
      *          ------------------------------------------
      *          Quit when no object to be copied
      *          ------------------------------------------
     C           W#TFLR    CABEQ*BLANK    S06199
      *
      *          ------------------------------------------
      *          Quit when same from- and to-location
      *          ------------------------------------------
     C           W#FFLR    IFEQ W#TFLR                     B01
     C                     GOTO S06199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check if to-document exists
      *          ------------------------------------------
     C                     MOVELW3OBJC    P#OBJC    P
     C                     MOVE W#TFLR    P#FLRC
     C                     MOVELW3OBJT    P#OBJT    P
     C                     CALL 'OMX813C' $X813C
      *
      *          ------------------------------------------
      *          Set the exist inidicator
      *          ------------------------------------------
     C           P#STAT    IFEQ C#NORM                     B01
     C                     MOVE *ON       I#EXIS
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Quit when not found and FLBI=*OFF (PF,LF)
      *          ------------------------------------------
     C                     MOVE *OFF      I#EXIS
     C           W3FLBI    CABEQ*OFF      S06199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Create fallback library and file OMFBC
      *          ------------------------------------------
     C           I#FLBC    IFNE *ON                        B01
     C           I#FBCF    ORNE *ON
     C           I#DOCC    ORNE *ON
     C                     EXSR SR0006
     C           I#QW3     CABEQ*ON       S06199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Move document when found
      *          ------------------------------------------
     C           I#EXIS    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Set move to-object to fallback
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,9
      *
      *          ------------------------------------------
      *          Set OMFBC MUTC to changed
      *          ------------------------------------------
     C                     MOVE 'C'       BCMUTC
      *
      *          ------------------------------------------
      *          Call the move object program.
      *          ------------------------------------------
     C                     MOVELW3OBJC    P#OBJC    P
     C                     MOVE W#TFLR    P#FLRC
     C                     MOVELW#FLBL    P#TFLC    P
     C                     CALL 'OMX812C' $X812C
      *
      *          ------------------------------------------
      *          The MOVE ended in error
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B02
     C                     EXSR SRERR
     C                     GOTO S06199
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Set move to-object to fallback to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,9
     C                     ADD  1         W#DOC#
      *
      *          ------------------------------------------
      *          Quit when FLBI=*OFF (attribt=1)
      *          ------------------------------------------
     C           W3FLBI    CABEQ*OFF      S06199
      *
      *          ------------------------------------------
      *          Read object record of replaced object
      *          ------------------------------------------
     C                     MOVELW3OBJC    K#OBJC    P
     C                     MOVE W3OBJT    K#OBJT
     C                     MOVE W3TOOL    K#OBJL
     C           $BJ8K1    CHAINOMOBJL8             N9999
      *
      *          ------------------------------------------
      *          No object found in to-library
      *          ------------------------------------------
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Set MUTC to new, IN99 = *ON, updt W3
      *          ------------------------------------------
     C                     MOVE 'N'       BCMUTC
     C                     MOVE *BLANK    W3OBJR
     C                     MOVE *BLANK    W3FIXR
     C                     Z-ADD*ZERO     W3VRSR
     C                     Z-ADD*ZERO     W3MODR
     C                     MOVE *ON       *IN99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Use W3 when not found
      *          ------------------------------------------
     C           *IN99     IFNE *OFF                       B01
     C                     MOVE W3APPC    BCAPPC
     C                     MOVE W3TOPL    BCPDLC
     C                     MOVE W3OBJC    BCOBJC
     C                     MOVE W3TOOL    BCOBJL
     C                     MOVE W3OBJT    BCOBJT
     C                     MOVE W3OBJA    BCOBJA
     C                     MOVE *BLANKS   BCOBJD
     C                     MOVE W3SRCF    BCSRCF
     C                     MOVE W3SRCL    BCSRCL
     C                     MOVE W3SRCM    BCSRCM
     C                     MOVE W3SRCS    BCSRCS
     C                     MOVE *BLANK    BCSRCX
     C                     MOVE *BLANK    BCOBJX
     C                     MOVE *BLANK    BCOMOD
     C                     MOVE *BLANK    BCOCRT
     C                     MOVE *BLANK    BCFIX#
     C                     MOVE *BLANK    BCUSDF
     C                     MOVE W3EXCI    BCEXCI
     C                     MOVE W3OCLS    BCOCLS
     C                     Z-ADD*ZERO     BCVRS#
     C                     Z-ADD*ZERO     BCMOD#
     C                     MOVE *BLANK    BCCHGX
      *
      *          ------------------------------------------
      *          Use OBJ when found
      *          ------------------------------------------
     C                     ELSE                            X01
     C                     MOVE RJAPPC    BCAPPC
     C                     MOVE RJPDLC    BCPDLC
     C                     MOVE RJOBJC    BCOBJC
     C                     MOVE RJOBJL    BCOBJL
     C                     MOVE RJOBJT    BCOBJT
     C                     MOVE RJOBJA    BCOBJA
     C                     MOVE RJOBJD    BCOBJD
     C                     MOVE RJSRCF    BCSRCF
     C                     MOVE RJSRCL    BCSRCL
     C                     MOVE RJSRCM    BCSRCM
     C                     MOVE RJSRCS    BCSRCS
     C                     MOVE RJSRCX    BCSRCX
     C                     MOVE RJOBJX    BCOBJX
     C                     MOVE RJOMOD    BCOMOD
     C                     MOVE RJOCRT    BCOCRT
     C                     MOVE RJFIX#    BCFIX#
     C                     MOVE RJUSDF    BCUSDF
     C                     MOVE RJEXCI    BCEXCI
     C                     MOVE RJOCLS    BCOCLS
     C                     Z-ADDRJVRS#    BCVRS#
     C                     Z-ADDRJMOD#    BCMOD#
     C                     MOVE RJCHGX    BCCHGX
      *
      *          ------------------------------------------
      *          Update W3 record with replaced object info
      *          ------------------------------------------
     C                     MOVE *ON       W3OBJR
     C                     MOVE RJFIX#    W3FIXR
     C                     Z-ADDRJVRS#    W3VRSR
     C                     Z-ADDRJMOD#    W3MODR
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Initialize other fields
      *          ------------------------------------------
     C                     MOVE *ON       BCTYPE
     C                     MOVE *BLANK    BCMBRC
     C                     MOVE W3ERR#    BCERR#
     C                     MOVE W3RLS#    BCRLS#
     C                     Z-ADDW3SEQ#    BCSEQ#
      *
      *          ------------------------------------------
      *          Write file OMFBC; Add te record
      *          ------------------------------------------
     C                     WRITEOMFBCR
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S06199    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0062 - Delete the to document                             *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine deletes an object in the W3TOOL library.       *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0062    BEGSR
      *
      *          ------------------------------------------
      *          Quit when no object to be copied
      *          ------------------------------------------
     C           W#TFLR    CABEQ*BLANK    S06299
      *
      *          ------------------------------------------
      *          Quit when same from- and to-location
      *          ------------------------------------------
     C           W#FFLR    IFEQ W#TFLR                     B01
     C                     GOTO S06299
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check if to-document exists
      *          ------------------------------------------
     C                     MOVELW3OBJC    P#OBJC    P
     C                     MOVE W#TFLR    P#FLRC
     C                     MOVELW3OBJT    P#OBJT    P
     C                     CALL 'OMX813C' $X813C
      *
      *          ------------------------------------------
      *          Quit when not found
      *          ------------------------------------------
     C           P#STAT    CABNEC#NORM    S06299
      *
      *          ------------------------------------------
      *          Set delete object to *OFF
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,10
      *
      *          ------------------------------------------
      *          Call the program.
      *          ------------------------------------------
     C                     MOVELW3OBJC    P#OBJC    P
     C                     MOVELW#TFLR    P#FLRC    P
     C                     MOVE W3OBJT    P#OBJT
     C                     CALL 'OMX805C' $X805C
      *
      *          ------------------------------------------
      *          Check for error.
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     EXSR SRERR
     C                     GOTO S06299
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set delete object to *ON
      *          ------------------------------------------
     C                     MOVE *ON       ACT,10
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S06299    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0063 - Copy a document from fromlib to tolib.             *
      *                                                             *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0063    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Quit when no object to be copied
      *          ------------------------------------------
     C           W#TFLR    CABEQ*BLANK    S06399
      *
      *          ------------------------------------------
      *          Quit for temporary object that doesnt exist
      *          ------------------------------------------
     C           S#EXCI    IFEQ *ON                        B01
     C           W#FFLR    OREQ W#TFLR
     C                     MOVEAW3OBJC    MC,1
     C                     MOVEAW3FROL    MC,13
     C                     MOVEAW3OBJT    MC,23
     C                     MOVEAW3TOOL    MC,32
     C                     MOVE 'CPY0007' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     MOVE *ON       ACT,12
     C                     GOTO S06399
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Init the create indicator
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,12
      *
      *          ------------------------------------------
      *          Fill program parameter list.
      *          ------------------------------------------
     C                     MOVELW3OBJC    P#OBJC    P
     C                     MOVELW#FFLR    P#FLRC    P
     C                     MOVE W3OBJT    P#OBJT
     C                     MOVE W3OBJA    P#OBJA
     C                     MOVELW#TFLR    P#TFLC    P
      *
      *          ------------------------------------------
      *          Call copy document program
      *          ------------------------------------------
     C                     CALL 'OMX807C' $X807C
      *
      *          ------------------------------------------
      *          Quit when error occured
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     EXSR SRERR
     C                     GOTO S06399
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set copy object to done.
      *          ------------------------------------------
     C                     MOVE *ON       ACT,12
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S06399    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0161 - Move to ifs to the fallback library                *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine moves the to-IFS to the fallback library       *
      * (if any).                                                   *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0161    BEGSR
      *
      *          ------------------------------------------
      *          Quit when no object to be copied
      *          ------------------------------------------
     C           W#TDIR    CABEQ*BLANK    S16199
      *
      *          ------------------------------------------
      *          Quit when same from- and to-location
      *          ------------------------------------------
     C           W#TDIR    IFEQ W#FDIR                     B01
     C                     GOTO S16199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check if to-ifs exists
      *          ------------------------------------------
     C                     MOVEAW#TFPC    IOB
     C                     CALL 'OMX401'  $MX401
      *
      *          ------------------------------------------
      *          Set the exist inidicator
      *          ------------------------------------------
     C           P#STAT    IFEQ C#NORM                     B01
     C                     MOVE *ON       I#EXIS
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Quit when not found and FLBI=*OFF (PF,LF)
      *          ------------------------------------------
     C                     MOVE *OFF      I#EXIS
     C           W3FLBI    CABEQ*OFF      S16199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Create fallback library and file OMFBC
      *          ------------------------------------------
     C           I#FLBC    IFNE *ON                        B01
     C           I#FBCF    ORNE *ON
     C           I#IFSC    ORNE *ON
     C                     EXSR SR0006
     C           I#QW3     CABEQ*ON       S16199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Move object when found
      *          ------------------------------------------
     C           I#EXIS    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Set move to-object to fallback
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,9
      *
      *          ------------------------------------------
      *          Set OMFBC MUTC to changed
      *          ------------------------------------------
     C                     MOVE 'C'       BCMUTC
      *
      *          ------------------------------------------
      *          Call the MOVE IFS program.
      *          ------------------------------------------
     C           '/'       CAT  W#FLBL:0  P#IDRC    P
     C           P#IDRC    CAT  '/'       P#IDRC
     C           P#IDRC    CAT  W#TDIR:0  P#IDRC
     C                     CALL 'OMX407C' $X407C
      *
      *          ------------------------------------------
      *          The MOVE ended in error
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B02
     C                     EXSR SRERR
     C                     GOTO S16199
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Remove the IFS directory
      *          ------------------------------------------
      *
      *          ------------------------------------------
      *          Set move to-object to fallback to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,9
     C                     ADD  1         W#IFS#
      *
      *          ------------------------------------------
      *          Quit when FLBI=*OFF (attribt=1)
      *          ------------------------------------------
     C           W3FLBI    CABEQ*OFF      S16199
      *
      *          ------------------------------------------
      *          Read object record of replaced object
      *          ------------------------------------------
     C                     MOVELW3OBJC    K#OBJC    P
     C                     MOVE W3OBJT    K#OBJT
     C                     MOVE W3TOOL    K#OBJL
     C           $BJ8K1    CHAINOMOBJL8             N9999
      *
      *          ------------------------------------------
      *          No object found in to-library
      *          ------------------------------------------
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Set MUTC to new, IN99 = *ON, updt W3
      *          ------------------------------------------
     C                     MOVE 'N'       BCMUTC
     C                     MOVE *BLANK    W3OBJR
     C                     MOVE *BLANK    W3FIXR
     C                     Z-ADD*ZERO     W3VRSR
     C                     Z-ADD*ZERO     W3MODR
     C                     MOVE *ON       *IN99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Use W3 when not found
      *          ------------------------------------------
     C           *IN99     IFNE *OFF                       B01
     C                     MOVE W3APPC    BCAPPC
     C                     MOVE W3TOPL    BCPDLC
     C                     MOVE W3OBJC    BCOBJC
     C                     MOVE W3TOOL    BCOBJL
     C                     MOVE W3OBJT    BCOBJT
     C                     MOVE W3OBJA    BCOBJA
     C                     MOVE *BLANKS   BCOBJD
     C                     MOVE W3SRCF    BCSRCF
     C                     MOVE W3SRCL    BCSRCL
     C                     MOVE W3SRCM    BCSRCM
     C                     MOVE W3SRCS    BCSRCS
     C                     MOVE *BLANK    BCSRCX
     C                     MOVE *BLANK    BCOBJX
     C                     MOVE *BLANK    BCOMOD
     C                     MOVE *BLANK    BCOCRT
     C                     MOVE *BLANK    BCFIX#
     C                     MOVE *BLANK    BCUSDF
     C                     MOVE W3EXCI    BCEXCI
     C                     MOVE W3OCLS    BCOCLS
     C                     Z-ADD*ZERO     BCVRS#
     C                     Z-ADD*ZERO     BCMOD#
     C                     MOVE *BLANK    BCCHGX
      *
      *          ------------------------------------------
      *          Use OBJ when found
      *          ------------------------------------------
     C                     ELSE                            X01
     C                     MOVE RJAPPC    BCAPPC
     C                     MOVE RJPDLC    BCPDLC
     C                     MOVE RJOBJC    BCOBJC
     C                     MOVE RJOBJL    BCOBJL
     C                     MOVE RJOBJT    BCOBJT
     C                     MOVE RJOBJA    BCOBJA
     C                     MOVE RJOBJD    BCOBJD
     C                     MOVE RJSRCF    BCSRCF
     C                     MOVE RJSRCL    BCSRCL
     C                     MOVE RJSRCM    BCSRCM
     C                     MOVE RJSRCS    BCSRCS
     C                     MOVE RJSRCX    BCSRCX
     C                     MOVE RJOBJX    BCOBJX
     C                     MOVE RJOMOD    BCOMOD
     C                     MOVE RJOCRT    BCOCRT
     C                     MOVE RJFIX#    BCFIX#
     C                     MOVE RJUSDF    BCUSDF
     C                     MOVE RJEXCI    BCEXCI
     C                     MOVE RJOCLS    BCOCLS
     C                     Z-ADDRJVRS#    BCVRS#
     C                     Z-ADDRJMOD#    BCMOD#
     C                     MOVE RJCHGX    BCCHGX
      *
      *          ------------------------------------------
      *          Update W3 record with replaced object info
      *          ------------------------------------------
     C                     MOVE *ON       W3OBJR
     C                     MOVE RJFIX#    W3FIXR
     C                     Z-ADDRJVRS#    W3VRSR
     C                     Z-ADDRJMOD#    W3MODR
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Initialize other fields
      *          ------------------------------------------
     C                     MOVE *ON       BCTYPE
     C                     MOVE *BLANK    BCMBRC
     C                     MOVE W3ERR#    BCERR#
     C                     MOVE W3RLS#    BCRLS#
     C                     Z-ADDW3SEQ#    BCSEQ#
      *
      *          ------------------------------------------
      *          Write file OMFBC; Add te record
      *          ------------------------------------------
     C                     WRITEOMFBCR
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S16199    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0162 - Delete the to document                             *
      *                                                             *
      * Returns   - P#STAT                                          *
      *                                                             *
      * This routine deletes an object in the W#TDIR library.       *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0162    BEGSR
      *
      *          ------------------------------------------
      *          Quit when no object to be copied
      *          ------------------------------------------
     C           W#TDIR    CABEQ*BLANK    S16299
      *
      *          ------------------------------------------
      *          Quit when same from- and to-location
      *          ------------------------------------------
     C           W#FDIR    IFEQ W#TDIR                     B01
     C                     GOTO S16299
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check if to ifs exists
      *          ------------------------------------------
      *
      *          ------------------------------------------
      *          Quit when not found
      *          ------------------------------------------
     C           P#STAT    CABNEC#NORM    S16299
      *
      *          ------------------------------------------
      *          Set delete object to *OFF
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,10
      *
      *          ------------------------------------------
      *          Call the program.
      *          ------------------------------------------
     C                     CALL 'OMX405C' $X405C
      *
      *          ------------------------------------------
      *          Check for error.
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     EXSR SRERR
     C                     GOTO S16299
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set delete object to *ON
      *          ------------------------------------------
     C                     MOVE *ON       ACT,10
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S16299    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0163 - Copy a ifs object                                  *
      *                                                             *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0163    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Quit when no object to be copied
      *          ------------------------------------------
     C           W#TDIR    CABEQ*BLANK    S16399
      *
      *          ------------------------------------------
      *          Quit for temporary object that doesnt exist
      *          CPY0014 is equivalent to CPY0007
      *          ------------------------------------------
     C           S#EXCI    IFEQ *ON                        B01
     C           W#FDIR    OREQ W#TDIR
     C                     MOVEA*BLANKS   MC
     C                     MOVEAIO1       MC,1
     C                     MOVEAW#FDIR    MC,51
     C                     MOVEAW3OBJT    MC,101
     C                     MOVEAW#TDIR    MC,110
     C                     MOVE 'CPY0014' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     MOVE *ON       ACT,12
     C                     GOTO S16399
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Init the create indicator
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,12
      *
      *          ------------------------------------------
      *          Call copy document program
      *          ------------------------------------------
     C                     MOVE C#NO      P#CHKT
     C                     CALL 'OMX406C' $X406C
      *
      *          ------------------------------------------
      *          Quit when error occured
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     EXSR SRERR
     C                     GOTO S16399
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set copy object to done.
      *          ------------------------------------------
     C                     MOVE *ON       ACT,12
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S16399    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0071 - Change attributes for created object               *
      *                                                             *
      * This routine change the attributes for a newly created      *
      * object.                                                     *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0071    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          CATT = 0; W#REF fields already filled
      *          ------------------------------------------
     C           W3CATT    IFEQ *OFF                       B01
     C           W#REFL    IFNE W3TOOL                     B02
     C                     GOTO S07180
     C                     ENDIF                           E02
     C                     GOTO S07199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          CATT = 1; Adopt attributes from old object
      *          ------------------------------------------
     C           W3CATT    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          CATT = 1; Use object in fallback
      *          ------------------------------------------
     C           W3OBJR    IFEQ *ON                        B02
     C                     MOVE W3OBJC    W#REFC
     C                     MOVE W3OBJT    W#REFT
     C                     MOVE W#FLBL    W#REFL
     C                     GOTO S07180
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          CATT = 1; Search object in libl or pdlc
      *          ------------------------------------------
     C                     MOVE *ON       W#SCPL           Scope low
     C                     MOVE W3CATS    W#SCPH           Scope high
     C           W3CATS    IFNE *OFF                       B02
     C                     MOVE W3TOPL    W#REFP
     C                     Z-ADDW3SEQ#    W#REFS
     C                     MOVE W3OBJC    W#REFC
     C                     MOVE W3OBJT    W#REFT
     C                     MOVE W3TOOL    W#REFL
     C                     EXSR SR0074
      *
      *          ------------------------------------------
      *          CATT = 1; Process when found
      *          ------------------------------------------
     C           W#REFL    CABNE*BLANK    S07180
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          CATT = 1; Search for OMSREFOBJ
      *          ------------------------------------------
     C                     MOVE *OFF      W#SCPL           Scope low
     C                     MOVELC#OMSR    W#REFC    P
     C                     MOVE W3OBJT    W#REFT
     C                     MOVE W3TOOL    W#REFL
     C                     EXSR SR0074
      *
      *          ------------------------------------------
      *          CATT = 1; Process found / quit not found
      *          ------------------------------------------
     C           W#REFL    CABNE*BLANK    S07180
     C                     GOTO S07199
      *
      *          ------------------------------------------
      *          CATT = 2;
      *          ------------------------------------------
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          CATT = 2; Search for OMSREFOBJ
      *          ------------------------------------------
     C                     MOVE *OFF      W#SCPL           Scope low
     C                     MOVE W3CATS    W#SCPH           Scope high
     C                     MOVE W3TOPL    W#REFP
     C                     Z-ADDW3SEQ#    W#REFS
     C                     MOVELC#OMSR    W#REFC    P
     C                     MOVE W3OBJT    W#REFT
     C                     MOVE W3TOOL    W#REFL
     C                     EXSR SR0074
      *
      *          ------------------------------------------
      *          CATT = 2; Process found / quit not found
      *          ------------------------------------------
     C           W#REFL    CABNE*BLANK    S07180
     C                     GOTO S07199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Reference object found
      *          ------------------------------------------
     C           S07180    TAG
      *
      *          ------------------------------------------
      *          Quit if from = to
      *          ------------------------------------------
     C           W#REFC    IFEQ W3OBJC                     B01
     C           W#REFL    ANDEQW3TOOL
     C                     GOTO S07199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Call OMX964 to retrieve commandstring
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,15
     C                     MOVE W#REFC    P#REFC
     C                     MOVE W#REFL    P#REFL
     C                     MOVE W3OBJT    P#OBJT
     C                     MOVE W3OBJA    P#OBJA
     C                     MOVE *BLANK    P#MBRC
     C                     MOVE W3OBJC    P#OBJC
     C                     MOVE W3TOOL    P#OBJL
     C                     CALL 'OMX964'  $X964
      *
      *          ------------------------------------------
      *          No error when error occured
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     MOVEAW3OBJC    MC,1
     C                     MOVEAW3TOOL    MC,11
     C                     MOVEAW3OBJT    MC,21
     C                     MOVE 'OBJE040' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     MOVE '2'       ACT,15
     C                     GOTO S07199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Execute the commandstring
      *          ------------------------------------------
     C                     CALL 'OMX981C' $X981C
      *
      *          ------------------------------------------
      *          No error when error occured
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     EXSR SRERR
     C                     GOTO S07199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Log message of the changes
      *          ------------------------------------------
     C                     MOVEAW3OBJC    MC,1
     C                     MOVEAW3TOOL    MC,13
     C                     MOVEAW3OBJT    MC,23
     C                     MOVEAW#REFC    MC,32
     C                     MOVEAW#REFL    MC,44
     C                     MOVEAW#REFT    MC,54
     C                     MOVE 'OBJ0011' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     MOVE *ON       ACT,15
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S07199    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0072 - Change authority                                   *
      *                                                             *
      * This routine changes the authority for a newly created      *
      * object.                                                     *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0072    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          CAUT = 1; Adopt authority from old object
      *          ------------------------------------------
     C           W3CAUT    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          CAUT = 1; Use object in fallback
      *          ------------------------------------------
     C           W3OBJR    IFEQ *ON                        B02
     C                     MOVE W3OBJC    W#REFC
     C                     MOVE W3OBJT    W#REFT
     C                     MOVE W#FLBL    W#REFL
     C                     GOTO S07280
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          CAUT = 1; Search object in libl or pdlc
      *          ------------------------------------------
     C                     MOVE *ON       W#SCPL           Scope low
     C                     MOVE W3CAUS    W#SCPH           Scope high
     C           W3CAUS    IFNE *OFF                       B02
     C                     MOVE W3TOPL    W#REFP
     C                     Z-ADDW3SEQ#    W#REFS
     C                     MOVE W3OBJC    W#REFC
     C                     MOVE W3OBJT    W#REFT
     C                     MOVE W3TOOL    W#REFL
     C                     EXSR SR0074
      *
      *          ------------------------------------------
      *          CAUT = 1; Process when found
      *          ------------------------------------------
     C           W#REFL    CABNE*BLANK    S07280
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          CAUT = 1; Search for OMSREFOBJ *DTAARA
      *          ------------------------------------------
     C                     MOVE *OFF      W#SCPL           Scope low
     C                     MOVELC#OMSR    W#REFC    P
     C                     MOVELC#DTAA    W#REFT    P
     C                     MOVE W3TOOL    W#REFL
     C                     EXSR SR0074
      *
      *          ------------------------------------------
      *          CAUT = 1; Process found / quit not found
      *          ------------------------------------------
     C           W#REFL    CABNE*BLANK    S07280
     C                     GOTO S07299
      *
      *          ------------------------------------------
      *          CAUT = 2;
      *          ------------------------------------------
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          CAUT = 2; Search for OMSREFOBJ *DTAARA
      *          ------------------------------------------
     C                     MOVE *OFF      W#SCPL           Scope low
     C                     MOVE W3CAUS    W#SCPH           Scope high
     C                     MOVE W3TOPL    W#REFP
     C                     Z-ADDW3SEQ#    W#REFS
     C                     MOVELC#OMSR    W#REFC    P
     C                     MOVELC#DTAA    W#REFT    P
     C                     MOVE W3TOOL    W#REFL
     C                     EXSR SR0074
      *
      *          ------------------------------------------
      *          CAUT = 2; Process found / quit not found
      *          ------------------------------------------
     C           W#REFL    CABNE*BLANK    S07280
     C                     GOTO S07299
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Reference object found for authority
      *          ------------------------------------------
     C           S07280    TAG
      *
      *          ------------------------------------------
      *          Quit if from = to
      *          ------------------------------------------
     C           W#REFC    IFEQ W3OBJC                     B01
     C           W#REFL    ANDEQW3TOOL
     C                     GOTO S07299
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Call OMX930C to set authority
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,16
     C                     MOVELW3OBJC    P#OBJC    P
     C                     MOVE W3TOOL    P#OBJL
     C                     MOVE W3OBJT    P#OBJT
     C                     MOVELW#REFC    P#REFC    P
     C                     MOVE W#REFL    P#REFL
     C                     MOVE W#REFT    P#REFT
     C                     CALL 'OMX930C' $X930C
      *
      *          ------------------------------------------
      *          No error when error occured
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     EXSR SRERR
     C                     GOTO S07299
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set authority indicator to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,16
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S07299    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0073 - Apply journal                                      *
      *                                                             *
      * This routine connect a newly created file to a journal.     *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0073    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          CJOT = 1; Use journal from old object
      *          ------------------------------------------
     C           W3CJOT    IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          CJOT = 1; Use object in fallback
      *          ------------------------------------------
     C           W3OBJR    IFEQ *ON                        B02
     C                     MOVE W3OBJC    W#REFC
     C                     MOVE W3OBJT    W#REFT
     C                     MOVE W#FLBL    W#REFL
     C                     GOTO S07380
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          CJOT = 1; Search object in libl or pdlc
      *          ------------------------------------------
     C                     MOVE *ON       W#SCPL           Scope low
     C                     MOVE W3CJOS    W#SCPH           Scope high
     C           W3CJOS    IFNE *OFF                       B02
     C                     MOVE W3TOPL    W#REFP
     C                     Z-ADDW3SEQ#    W#REFS
     C                     MOVE W3OBJC    W#REFC
     C                     MOVE W3OBJT    W#REFT
     C                     MOVE W3TOOL    W#REFL
     C                     EXSR SR0074
      *
      *          ------------------------------------------
      *          CJOT = 1; Process when found
      *          ------------------------------------------
     C           W#REFL    CABNE*BLANK    S07380
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          CJOT = 1; Search for OMSREFOBJ
      *          ------------------------------------------
     C                     MOVE *OFF      W#SCPL           Scope low
     C                     MOVELC#OMSR    W#REFC    P
     C                     MOVE W3OBJT    W#REFT
     C                     MOVE W3TOOL    W#REFL
     C                     EXSR SR0074
      *
      *          ------------------------------------------
      *          CJOT = 1; Process found / quit not found
      *          ------------------------------------------
     C           W#REFL    CABNE*BLANK    S07380
     C                     GOTO S07399
      *
      *          ------------------------------------------
      *          CJOT = 2;
      *          ------------------------------------------
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          CJOT = 2; Search for OMSREFOBJ
      *          ------------------------------------------
     C                     MOVE *OFF      W#SCPL           Scope low
     C                     MOVE W3CJOS    W#SCPH           Scope high
     C                     MOVE W3TOPL    W#REFP
     C                     Z-ADDW3SEQ#    W#REFS
     C                     MOVELC#OMSR    W#REFC    P
     C                     MOVE W3OBJT    W#REFT
     C                     MOVE W3TOOL    W#REFL
     C                     EXSR SR0074
      *
      *          ------------------------------------------
      *          CJOT = 2; Process found / quit not found
      *          ------------------------------------------
     C           W#REFL    CABNE*BLANK    S07380
     C                     GOTO S07399
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Reference object found for journal
      *          ------------------------------------------
     C           S07380    TAG
      *
      *          ------------------------------------------
      *          Quit if from = to
      *          ------------------------------------------
     C           W#REFC    IFEQ W3OBJC                     B01
     C           W#REFL    ANDEQW3TOOL
     C                     GOTO S07399
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Call OMX982C to check if PF is journalled
      *          ------------------------------------------
     C                     MOVE W#REFC    P#REFC
     C                     MOVE W#REFL    P#REFL
     C                     CALL 'OMX982C' $X982C
      *
      *          ------------------------------------------
      *          Set to *NORM when not *NORM
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     GOTO S07399
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Quit when file is not journalled
      *          ------------------------------------------
     C           P#JRNA    CABNEC#YES     S07399
      *
      *          ------------------------------------------
      *          Start journal for new PF
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,17
     C                     MOVELW3OBJC    P#OBJC    P
     C                     MOVE W3TOOL    P#OBJL    P
     C                     CALL 'OMX984C' $X984C
      *
      *          ------------------------------------------
      *          Set to *NORM when not *NORM
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     EXSR SRERR
     C                     GOTO S07399
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set journal indicator to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,17
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S07399    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0074 - Search for object in lib, libl or environment      *
      *                                                             *
      * This routine searches for a specified object in the to-     *
      * library, to library-list or the environment.                *
      *                                                             *
      * Input  W#SCPL  Scope low   = start point of checking        *
      *        W#SCPH  Scope high  = end   point of checking        *
      *        W#REFP  Environment code                             *
      *        W#REFS  Library-list sequence number                 *
      *        W#REFC  Object code                                  *
      *        W#REFT  Object type                                  *
      *        W#REFL  Object library                               *
      * Output W#REFL  Object library (blank when not found)        *
      *                                                             *
WJO   * 25 of july 2000                                             *
      * This routine was changed. Objects now no longer need to     *
      * be in the object file. They must exist on disk only. This   *
      * routine got confused by a unfilled or misfilled object      *
      * database. This routine used to check in the object file     *
      * only. This could cause problems in an unfilled environment  *
      * (this was often the case on remote machines).               *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0074    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Save values of IX and IY
      *          ------------------------------------------
     C                     Z-ADDIX        S#IX
     C                     Z-ADDIY        S#IY
      *
      *          ------------------------------------------
      *          Check on disk when Scope low = 0
      *          ------------------------------------------
     C           W#SCPL    IFEQ '0'                        B01
     C                     EXSR S00742
      *
      *          ------------------------------------------
      *          Quit when found
      *          ------------------------------------------
     C           P#STAT    CABEQC#NORM    S07490
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Blank the W#REFL field
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
     C                     MOVE *BLANK    W#REFL
      *
      *          ------------------------------------------
      *          Quit when scope high < 1
      *          ------------------------------------------
     C           W#SCPH    CABLT'1'       S07490
      *
      *          ------------------------------------------
      *          Set D#ENV DS to this environment
      *          ------------------------------------------
     C           50        SUB  D#ENV#    IX
     C           IX        CABGT49        S07490
     C           W#REFP    LOKUPENV,IX                   99
     C           *IN99     CABEQ*OFF      S07490
     C           IX        OCUR D#ENV
      *
      *          ------------------------------------------
      *          Fill libraries when not filled
      *          ------------------------------------------
     C           D#FILL    IFNE *ON                        B01
     C                     EXSR SR0075
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Process all libraries in LIB for SEQ#
      *          ------------------------------------------
     C                     MOVELW#REFC    K#OBJC
     C                     MOVE W#REFT    K#OBJT
     C                     Z-ADD1         IY
     C           IY        DOWLT301                        B01
     C           LIB,IY    ANDNE*BLANK
      *
      *          ------------------------------------------
      *          Only select this library list
      *          ------------------------------------------
     C           SQ#,IY    IFEQ W#REFS                     B02
      *
      *          ------------------------------------------
      *          Check if object exist in Object file and on
      *          disk.
      *          ------------------------------------------
     C                     MOVE LIB,IY    W#REFL
     C                     EXSR S00742
     C           P#STAT    CABEQC#NORM    S07490
      *
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Set pointer to next library
      *          ------------------------------------------
     C                     ADD  1         IY
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          Blank the W#REFL field
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
     C                     MOVE *BLANK    W#REFL
      *
      *          ------------------------------------------
      *          Quit when scope high < 2
      *          ------------------------------------------
     C           W#SCPH    CABLT'2'       S07490
      *
      *          ------------------------------------------
      *          Process all libraries in PDLC except SEQ#
      *          ------------------------------------------
     C                     Z-ADD1         IY
     C           IY        DOWLT301                        B01
     C           LIB,IY    ANDNE*BLANK
      *
      *          ------------------------------------------
      *          Omit this library list
      *          ------------------------------------------
     C           SQ#,IY    IFNE W#REFS                     B02
      *
      *          ------------------------------------------
      *          Check if object exist in Object file
      *          ------------------------------------------
     C                     MOVE LIB,IY    W#REFL
     C                     EXSR S00742
     C           P#STAT    CABEQC#NORM    S07490
      *
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Set pointer to next library
      *          ------------------------------------------
     C                     ADD  1         IY
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          Restore values of IX and IY
      *          ------------------------------------------
     C           S07490    TAG
     C                     Z-ADDS#IX      IX
     C                     Z-ADDS#IY      IY
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S07499    ENDSR
      *****
      *
      *          ------------------------------------------
      *          Check if the objects is on disk
      *          ------------------------------------------
      *
      *****
     C           S00742    BEGSR
      *
      *          ------------------------------------------
      *          Check on disk
      *          ------------------------------------------
     C                     MOVE W#REFL    P#OBJL
     C                     MOVELW#REFC    P#OBJC    P
     C                     MOVE *BLANK    P#MBRC
     C                     MOVE W#REFT    P#OBJT
     C                     CALL 'OMX909C' $X909C
     C                     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0075 - Load all libraries for a specific environment      *
      *                                                             *
      * This routine assumes D#ENV to be set to the right           *
      * environment and the fields W#REF. to be filled.             *
      * All libraries for the environment in W#REFP are stored      *
      * in array LIB. The sequence number of the library-list is    *
      * stored in array SQ#.                                        *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0075    BEGSR
      *
      *          ------------------------------------------
      *          Read first libl this environment
      *          ------------------------------------------
     C                     Z-ADD1         IY
     C                     MOVE *ON       D#FILL
     C                     MOVE P#APPC    K#APPC
     C                     MOVE W#REFP    K#PDLC
     C           $BL1K1    CHAINOMLBLL1              99
      *
      *          ------------------------------------------
      *          Process all library lists
      *          ------------------------------------------
     C           *IN99     DOWEQ*OFF                       B01
      *
      *          ------------------------------------------
      *          Do only when not remote libl
      *          ------------------------------------------
     C           BLLBLT    IFNE '2'                        B02
      *
      *          ------------------------------------------
      *          Read first library for this libl
      *          ------------------------------------------
     C           $BD1K2    CHAINOMLBDL1              99
      *
      *          ------------------------------------------
      *          Process all libraries
      *          ------------------------------------------
     C           *IN99     DOWEQ*OFF                       B03
      *
      *          ------------------------------------------
      *          Store library when not 4GL and not *DOC
      *          ------------------------------------------
     C           BDLG4I    IFNE *ON                        B04
     C           BDLDOI    ANDNE*ON
     C                     MOVE BDLIBC    LIB,IY
     C                     Z-ADDBDSEQ#    SQ#,IY
     C                     ADD  1         IY
     C                     ENDIF                           E04
     C           $BD1K2    READEOMLBDL1                  99
     C                     ENDDO                           E03
     C                     ENDIF                           E02
     C           $BL1K1    READEOMLBLL1                  99
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S07599    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0081 - Check if from library is a keep library            *
      *                                                             *
      * This routine assumes the RJ... fields to be filled          *
      * and checks for a specified library if it is a keep library. *
      * The inidicator KEEP is returned.                            *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0081    BEGSR
      *
      *          ------------------------------------------
      *          When fields are equal to last, use last
      *          ------------------------------------------
     C           RJOBJA    IFEQ S#KPOA                     B01
     C           RJOBJT    ANDEQS#KPOT
     C           RJOBJL    ANDEQS#KPOL
     C           RJPDLC    ANDEQS#KPPL
     C                     MOVE S#KEEP    KEEP
     C                     GOTO S08199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Init the KEEP work fields
      *          ------------------------------------------
     C                     MOVE *BLANK    KEEP
     C                     MOVE *BLANK    KEEPTP
     C                     MOVE *BLANK    KEEPAL
      *
      *          ------------------------------------------
      *          If this is an IFS object
      *          ------------------------------------------
     C           I#IFS     IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Open OMRTLL3 and OMRTLL5 when not open
      *          ------------------------------------------
     C           I#ORTL    IFNE *ON                        B02
     C                     OPEN OMRTLL3
     C                     OPEN OMRTLL5
     C                     MOVE *ON       I#ORTL
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Search OMRTLL3 with library code of object
      *          itself. This will succeed if the directory
      *          is the main directory of a route.
      *          ------------------------------------------
     C           $TL3K1    CHAINOMRTLL3              99
      *
      *          ------------------------------------------
      *          If library found
      *          ------------------------------------------
     C           *IN99     IFEQ *OFF                       B02
      *
      *          ------------------------------------------
      *          Fill KEEP with value retrieved from OMRTL
      *          ------------------------------------------
     C                     MOVE TLDKEI    KEEP
      *
      *          ------------------------------------------
      *          Else (library not found)
      *          ------------------------------------------
     C                     ELSE                            X02
      *
      *          ------------------------------------------
      *          Find name of route that is linked to this
      *          library code by chaining in OMIOPL1
      *          ------------------------------------------
     C           RJOBJL    CHAINOMIOPL1              99
      *
      *          ------------------------------------------
      *          If record found in OMIOPL1
      *          ------------------------------------------
     C           *IN99     IFEQ *OFF                       B03
      *
      *          ------------------------------------------
      *          Get record from OMRTLL5 using APPC/PDLC/
      *          ROTC. This will get the record for the
      *          main directory of the (recursive) route.
      *          ------------------------------------------
     C           $TL5K1    CHAINOMRTLL5              99
      *
      *          ------------------------------------------
      *          If record found, then use this TLDKEI
      *          ------------------------------------------
     C           *IN99     IFEQ *OFF                       B04
     C                     MOVE TLDKEI    KEEP
     C                     ENDIF                           E04
      *
     C                     ENDIF                           E03
      *
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Else (not an IFS object)
      *          ------------------------------------------
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Open OMLOA when not open
      *          ------------------------------------------
     C           I#OLOA    IFNE *ON                        B02
     C                     OPEN OMLOAL1
     C                     MOVE *ON       I#OLOA
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Check if library is part of environment
      *          ------------------------------------------
     C                     MOVE RJPDLC    K#PDLC
     C                     MOVE RJOBJL    K#OBJL
     C           $LBDK1    CHAINOMLBDL3              99
      *
      *          ------------------------------------------
      *          Library is part of environment
      *          ------------------------------------------
     C           *IN99     IFEQ *OFF                       B02
     C                     MOVE *OFF      *IN98
      *
      *          ------------------------------------------
      *          Library is not part of environment
      *          ------------------------------------------
     C                     ELSE                            X02
      *
      *          ------------------------------------------
      *          Check if library is part of application
      *          ------------------------------------------
     C                     MOVE *ON       *IN98
     C           $LBDK2    CHAINOMLBDL2              99
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Process all libraries in envir / applic.
      *          ------------------------------------------
     C           *IN99     DOWEQ*OFF                       B02
      *
      *          ------------------------------------------
      *          Different checking for detail-source
      *          ------------------------------------------
     C           I#DTLS    IFEQ *ON                        B03
     C           BDLSOI    IFEQ *ON                        B04
     C                     MOVE BDLKEI    KEEP
     C                     LEAVE
     C                     ENDIF                           E04
     C                     ELSE                            X03
      *
      *          ------------------------------------------
      *          Check if OMLOA has OBJT, OBJA specified
      *          ------------------------------------------
     C           $OA1K1    SETLLOMLOAL1                  99
      *
      *          ------------------------------------------
      *          When found use BDLKEI from this LBD
      *          ------------------------------------------
     C           *IN99     IFEQ *ON                        B04
     C                     MOVE BDLKEI    KEEP
     C                     LEAVE
     C                     ENDIF                           E04
      *
      *          ------------------------------------------
      *          Check if OMLOA has OBJT specified
      *          ------------------------------------------
     C                     MOVE *BLANK    K#OBJA
     C           $OA1K2    SETLLOMLOAL1                  99
      *
      *          ------------------------------------------
      *          When found save BDLKEI from this LBD
      *          ------------------------------------------
     C           *IN99     IFEQ *ON                        B04
     C                     MOVE BDLKEI    KEEPTP
      *
      *          ------------------------------------------
      *          OMLOA has no type specified
      *          ------------------------------------------
     C                     ELSE                            X04
      *
      *          ------------------------------------------
      *          Check if this is a *ALL library
      *          ------------------------------------------
     C                     SELEC                           B05
     C           I#4GL     WHEQ *ON                        X05
     C           BDLG4I    IFEQ *ON                        B06
     C                     MOVE BDLKEI    KEEPAL
     C                     ENDIF                           E06
     C           I#DOC     WHEQ *ON                        X05
     C           BDLDOI    IFEQ *ON                        B06
     C                     MOVE BDLKEI    KEEPAL
     C                     ENDIF                           E06
     C                     OTHER                           X05
     C           BDLALI    IFEQ *ON                        B06
     C                     MOVE BDLKEI    KEEPAL
     C                     ENDIF                           E06
     C                     ENDSL                           E05
     C                     ENDIF                           E04
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Read next library in environment/appl.
      *          ------------------------------------------
     C  N98      $LBDK3    READEOMLBDL3                  99
     C   98      $LBDK2    READEOMLBDL2                  99
     C                     ENDDO                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check the result. We must fill KEEP
      *          ------------------------------------------
     C           KEEP      IFEQ *BLANK                     B01
     C           KEEPTP    IFNE *BLANK                     B02
     C                     MOVE KEEPTP    KEEP
     C                     ELSE                            X02
     C           KEEPAL    IFNE *BLANK                     B03
     C                     MOVE KEEPAL    KEEP
     C                     ELSE                            X03
     C                     MOVE *OFF      KEEP
     C                     ENDIF                           E03
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Save the result for the next check
      *          ------------------------------------------
     C                     MOVE RJOBJA    S#KPOA
     C                     MOVE RJOBJT    S#KPOT
     C                     MOVE RJOBJL    S#KPOL
     C                     MOVE RJPDLC    S#KPPL
     C                     MOVE KEEP      S#KEEP
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S08199    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0091 - Check "Dubbel onderhoud"                           *
      *                                                             *
      * When moving from *PROD or *ANY:                             *
      *  -   When a solution exist with a VRS#/MOD# > the current   *
      *      VRS#/MOD# then alert appl. managers of current APPC    *
      *  -   When in a related application (OMAIF) an object        *
      *      exist with the same code/type then whe also have to    *
      *      alert the application managers.                        *
      *                                                             *
      * When moving to *PROD:                                       *
      *  - Search OMOVC for an entry containing this object that is *
      *    not confirmed. If found, an error is signalled.          *
      *    This check is only made if Confirm Version Conflicts is  *
      *    active.
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0091    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Check object to be confirmed when moving
      *          to production.
      *          Entry should be confirmed if record found
      *          for current fix.
      *          ------------------------------------------
     C           I#OVC     IFNE *ON                        B01
     C                     OPEN OMOVCL2
     C                     OPEN OMOVCL3
     C                     OPEN OMOVCL5
      *
     C                     OPEN OMOVCL1
     C                     MOVE *ON       I#OVC
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Quit when not moving from *PROD or *ANY
      *          ------------------------------------------
     C           W3FRPL    IFNE D#HPLC                     B01
     C           W3FRPL    ANDNEC#ANY
     C                     GOTO S09199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Quit when SOTL not= 1,3 or 9
      *          ------------------------------------------
     C           W3SOLT    IFNE '1'                        B01
     C           W3SOLT    ANDNE'3'
     C           W3SOLT    ANDNE'9'
     C                     GOTO S09199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Quit when detail involved
      *          ------------------------------------------
     C           W3MBRC    IFNE *BLANK                     B01
     C                     GOTO S09199
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set concurrent maintenance indicator
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,3
      *
      *          ------------------------------------------
      ******     Check for solution with higher VRS#
      *          Check for all other solutions in current APPC
      *          ------------------------------------------
     C           1         OCUR APMDS
     C                     MOVELP#APPC    K#APPC
     C                     MOVELW3OBJC    K#OBJC    P
     C                     MOVELW3OBJT    K#OBJT
     C                     MOVELW3MBRC    K#MBRC
     C           $RO2K1    SETLLOMEROB2
     C           $RO2K1    READEOMEROB2                  99
      *
      *          ------------------------------------------
      ********** Process solutions with higher VRS#,MOD#
      *         Register all possible conflics for any pair of
      *         solutions which may be promoted once to *PROD
      *          ------------------------------------------
     C           *IN99     DOWEQ*OFF                       B01
      *
      *          ------------------------------------------
      *          Leave when VRS#, MOD# is lower/equal
      *          ------------------------------------------
     C*****      ROVRS#    IFLT W3VRS#                     B02
     C*****      ROVRS#    OREQ W3VRS#
     C********   ROMOD#    ANDLEW3MOD#
     C********             LEAVE
     C*******              ENDIF                           E02
      *
      *          ------------------------------------------
      *          Skip the current solution
      *          ------------------------------------------
     C           ROFIX#    IFNE W3FIX#                     B02
      *
     C*******    ROSTAT    ANDNEC#COMP    select/omit
     C*******    ROOVRC    ANDNE*ON       included in OMEROL7
     C******     ROOVRC    ANDNE'3'
      *
      *          ------------------------------------------
      *          If current  or co-existing solution are linked to
      *          emergency, solutions could pass each other so we
      *          need mutual conflict confirmation
      *          elder solution entering a conflict is now
      *          nominated a type '1' OVCC
      *          newer solution involving in a conflict is now
      *          nominated a type '3' OVCC
      *          ------------------------------------------
     C           W3TOPL    IFEQ D#EPLC                     B03
     C           ROPDLC    OREQ D#EPLC
      *
     C                     MOVE ROAPPC    VCAPPC
     C                     MOVE ROFIX#    VCFIX#
     C                     MOVE W3OBJC    VCOBJC
     C                     MOVE W3OBJT    VCOBJT
     C                     MOVE *BLANKS   VCMBRC
     C                     MOVE W3APPC    VCRAPC
     C                     MOVE W3FIX#    VCRFX#
     C                     MOVE *BLANKS   VCRMBC
     C                     MOVE '1'       VCOVCC
     C                     MOVE ' '       VCCMRQ
     C                     MOVE *BLANKS   VCCMUS
     C                     MOVE *ZEROS    VCCMDT
     C                     MOVE *ZEROS    VCCMTM
     C                     MOVE '0'       VCCMED
     C           $VC3K2    SETLLOMOVCL3                  98
     C  N98                WRITEOMOVCR
      *
      *          ------------------------------------------
      *          if existing solution yet first to *PROD the solution
      *          in the current fix becomes parent of the conflict;
      *          this situation  is now nominated a type '3' OVCC
      *          ------------------------------------------
      *
     C                     MOVE W3APPC    VCAPPC
     C                     MOVE W3FIX#    VCFIX#
     C                     MOVE W3OBJC    VCOBJC
     C                     MOVE W3OBJT    VCOBJT
     C                     MOVE *BLANKS   VCMBRC
     C                     MOVE ROAPPC    VCRAPC
     C                     MOVE ROFIX#    VCRFX#
     C                     MOVE *BLANKS   VCRMBC
     C                     MOVE '3'       VCOVCC
     C                     MOVE ' '       VCCMRQ
     C                     MOVE *BLANKS   VCCMUS
     C                     MOVE *ZEROS    VCCMDT
     C                     MOVE *ZEROS    VCCMTM
     C                     MOVE '0'       VCCMED
     C           $VC3K2    SETLLOMOVCL3                  98
     C  N98                WRITEOMOVCR
      *
     C                     ELSE                            X03
      *          ------------------------------------------
      *         The current soluiton could not pass the existing
      *         only the latest requires to be confirmed
      *          ------------------------------------------
      *
     C                     MOVE W3APPC    VCAPPC
     C                     MOVE W3FIX#    VCFIX#
     C                     MOVE W3OBJC    VCOBJC
     C                     MOVE W3OBJT    VCOBJT
     C                     MOVE *BLANKS   VCMBRC
     C                     MOVE ROAPPC    VCRAPC
     C                     MOVE ROFIX#    VCRFX#
     C                     MOVE *BLANKS   VCRMBC
     C                     MOVE '3'       VCOVCC
     C                     MOVE ' '       VCCMRQ
     C                     MOVE *BLANKS   VCCMUS
     C                     MOVE *ZEROS    VCCMDT
     C                     MOVE *ZEROS    VCCMTM
     C                     MOVE '0'       VCCMED
     C           $VC3K2    SETLLOMOVCL3                  98
     C  N98                WRITEOMOVCR
      *
     C                     ENDIF                           E03
      *          ------------------------------------------
      *          Read first code 3 User from array
      *          ------------------------------------------
     C                     Z-ADD1         IX
     C                     MOVE *OFF      P#RMTI
     C                     MOVEL'VRS0001' P#MSGN
     C                     MOVEL'OMSMSG'  P#MSGF
     C                     MOVEA*BLANKS   MC
     C                     MOVEAW3APPC    MC,1
     C                     MOVEAW3FIX#    MC,6
     C                     MOVEAW3OBJC    MC,16
     C                     MOVEAW3OBJT    MC,26
     C                     MOVEAC#ALL     MC,35
     C                     MOVEAROFIX#    MC,45
     C                     MOVEAMC        P#MSGD
      *
      *          ------------------------------------------
      *          Do for each application manager found
      *          ------------------------------------------
     C           IX        DOWLT11                         B03
     C           APM,IX    ANDNE*BLANKS
      *
      *          ------------------------------------------
      *          Send message to an application manager
      *          ------------------------------------------
     C                     MOVEAAPM,IX    P#USID
     C                     CALL 'OMX966C' $X966C
     C                     ADD  1         IX
     C                     ENDDO                           E03
      *
      *          ------------------------------------------
      *          Send message to the person processing this fix.
      *          ------------------------------------------
     C                     MOVE D#USID    P#USID
     C                     CALL 'OMX966C' $X966C
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Read next solution
      *          ------------------------------------------
     C           $RO2K1    READEOMEROB2                  99
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          Check for objects in RELATED applications
      *          ------------------------------------------
     C                     Z-ADD2         IX
      *
      *          ------------------------------------------
      *      Do for all related APPC's; reset *IN's per appc
      *          ------------------------------------------
     C           IX        DOWLE10                         B01
     C           APC,IX    ANDNE*BLANKS
      *
     C                     MOVE *OFF      *IN96
     C                     MOVE *OFF      *IN97
     C                     MOVE *OFF      *IN99
      *          ------------------------------------------
      *          Checking for single direction
      *          ------------------------------------------
     C           APT,IX    IFNE '1'                        B02
      *
      *          ------------------------------------------
      *          Check if object exists in related APPC
      *          ------------------------------------------
     C                     MOVEAAPC,IX    K#APPC
     C                     MOVELW3OBJC    K#OBJC    P
     C                     MOVELW3OBJT    K#OBJT
     C           $BJ4K1    SETLLOMOBJL4                  97
      *
      *          ------------------------------------------
      *          Checking for bi-directional
      *          ------------------------------------------
     C                     ELSE                            X02
      *
      *          ------------------------------------------
      *          Check if act. solution exists in related APPC
      *          ------------------------------------------
     C                     MOVEAAPC,IX    K#APPC
     C                     MOVELW3OBJC    K#OBJC    P
     C                     MOVELW3OBJT    K#OBJT
     C                     MOVELW3MBRC    K#MBRC
     C           $RO2K1    SETLLOMEROB2                  96
     C   96      $RO2K1    READEOMEROB2                  97
      *
      *          ------------------------------------------
      *          *IN97 = *ON : record found
      *          This replaces  the meaning of *IN99 in the
      *          previous version of this program.
      *          ------------------------------------------
     C           *IN96     IFEQ *ON                        B03
     C           *IN97     ANDEQ*OFF
     C                     MOVE *ON       *IN97
     C                     ENDIF                           E03
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Send messages to APPM's when found
      *          ------------------------------------------
     C           *IN97     IFEQ *ON                        B02
      *
      *          ------------------------------------------
      *          Read first code 3 User from array APM
      *          ------------------------------------------
     C           IX        OCUR APMDS
     C                     Z-ADD1         IY
     C                     MOVE *OFF      P#RMTI
     C                     MOVEL'VRS0002' P#MSGN
     C                     MOVEL'OMSMSG'  P#MSGF
     C                     MOVEA*BLANKS   MC
     C                     MOVEAW3APPC    MC,1
     C                     MOVEAW3FIX#    MC,6
     C                     MOVEAW3OBJC    MC,16
     C                     MOVEAW3OBJT    MC,26
     C                     MOVEAC#ALL     MC,35
     C                     MOVEAW3TOPL    MC,45
     C                     MOVEAAPC,IX    MC,50
     C           W3OCLS    IFEQ 'B'                        B03
     C                     CALL 'OMX422'  $MX422
     C           X#STAT    IFEQ C#NORM                     B04
     C                     MOVE 'VRS0007' P#MSGN
     C                     MOVEAP#IOBC    MC,55
     C                     ENDIF                           E04
     C                     ENDIF                           E03
     C                     MOVEAMC        P#MSGD
      *
      *          ------------------------------------------
      *          Write this conflict into the OMOVC if the
      *          active solution found in related bi-direct appl.
      *          ------------------------------------------
     C           APT,IX    IFEQ *ON                        B03
      *
      *          ------------------------------------------
      *          the same for all solutions in related appl
      *          ------------------------------------------
     C           *IN99     DOWEQ*OFF                       B04
      *
     C                     MOVE W3APPC    VCAPPC
     C                     MOVE W3FIX#    VCFIX#
     C                     MOVE W3OBJC    VCOBJC
     C                     MOVE W3OBJT    VCOBJT
     C                     MOVE *BLANKS   VCMBRC
     C                     MOVE K#APPC    VCRAPC
     C                     MOVE ROFIX#    VCRFX#
     C                     MOVE '2'       VCOVCC
     C                     MOVE ' '       VCCMRQ
     C                     MOVE *BLANKS   VCCMUS
     C                     MOVE *ZEROS    VCCMDT
     C                     MOVE *ZEROS    VCCMTM
     C                     MOVE '0'       VCCMED
     C           $VC3K2    SETLLOMOVCL3                  98
     C  N98                WRITEOMOVCR
      *
     C                     MOVE K#APPC    VCAPPC
     C                     MOVE ROFIX#    VCFIX#
     C                     MOVE W3OBJC    VCOBJC
     C                     MOVE W3OBJT    VCOBJT
     C                     MOVE *BLANKS   VCMBRC
     C                     MOVE W3APPC    VCRAPC
     C                     MOVE W3FIX#    VCRFX#
     C                     MOVE '2'       VCOVCC
     C                     MOVE ' '       VCCMRQ
     C                     MOVE *BLANKS   VCCMUS
     C                     MOVE *ZEROS    VCCMDT
     C                     MOVE *ZEROS    VCCMTM
     C                     MOVE '0'       VCCMED
     C           $VC3K2    SETLLOMOVCL3                  98
     C  N98                WRITEOMOVCR
      *
      *          ------------------------------------------
      *          Send the message
      *          ------------------------------------------
     C           $ERSK2    CHAINOMERSL1              95
     C           *IN95     IFEQ *OFF                       B05
     C                     MOVE RSPGMR    P#USID
     C                     CALL 'OMX966C' $X966C
     C                     ENDIF                           E05
      *
     C           $RO2K1    READEOMEROB2                  99
     C                     ENDDO                           E04
      *
      *
      *          ------------------------------------------
      *          if bi-direct
      *          Send message to the person processing this fix.
      *          ------------------------------------------
     C                     MOVE D#USID    P#USID
     C                     CALL 'OMX966C' $X966C
      *
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Do for each application manager found
      *          ------------------------------------------
     C           IY        DOWLT11                         B03
     C           APM,IY    ANDNE*BLANKS
      *
      *          ------------------------------------------
      *          Send message to an application manager
      *          ------------------------------------------
     C                     MOVEAAPM,IY    P#USID
     C                     CALL 'OMX966C' $X966C
     C                     ADD  1         IY
     C                     ENDDO                           E03
      *
      *          ------------------------------------------
      *          ------------------------------------------
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Read next related APPC
      *          ------------------------------------------
     C                     ADD  1         IX
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          Set concurrent maintenance indicator to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,3
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S09199    TAG
      *
     C           W3TOPL    IFEQ D#HPLC                     B01
      *
     C                     MOVE *OFF      ACT,3
      *
     C                     MOVELW3APPC    VCAPPC
     C                     MOVELW3FIX#    VCFIX#
     C                     MOVELW3OBJC    VCOBJC
     C                     MOVELW3OBJT    VCOBJT
     C                     MOVELW3FIX#    VCFIX#
     C           $OVCK2    CHAINOMOVCL2              99
     C           *IN99     IFEQ *OFF                       B02
     C           I#CMRQ    ANDEQ*ON
     C                     MOVE 'VRS0008' MSGID
     C                     MOVE *BLANKS   MC
     C                     MOVEAW3OBJC    MC,1
     C                     MOVEAW3OBJT    MC,11
     C                     MOVEAW3TOPL    MC,20
     C                     MOVEAVCRAPC    MC,25
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     MOVE *ON       I#CVER
     C                     EXSR SRERR
     C                     MOVE *OFF      I#CVER
     C                     ENDIF                           E02
      *
      * ----------------------------------------------------------- *
      *          Set records for all related solutions               *
      *          to be confirmed.                                   *
      * ----------------------------------------------------------- *
     C           *IN99     IFEQ *ON                        B02
     C                     MOVELW3APPC    VCRAPC
     C                     MOVELW3FIX#    VCRFX#
     C                     MOVELW3OBJC    VCOBJC
     C                     MOVELW3OBJT    VCOBJT
     C           $OVCK5    SETLLOMOVCL5                  96
     C           *IN96     IFEQ *ON                        B03
     C           $OVCK5    READEOMOVCL5                  97
     C           *IN97     DOUEQ*ON                        B04
     C           VCCMED    IFNE *ON                        B05
     C                     MOVE *ON       VCCMRQ
     C                     UPDATOMOVCR5
     C                     ENDIF                           E05
     C           $OVCK5    READEOMOVCL5                  97
     C                     ENDDO                           E04
     C                     ENDIF                           E03
     C                     ENDIF                           E02
      *
     C                     MOVE *ON       ACT,3
     C                     ENDIF                           E01
      *
     C                     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0092 - Change all object records using moved source.      *
      *                                                             *
      * Requires   - Key in S#                                      *
      * Destroys   - EOF                                            *
      *                                                             *
      * This routine reads all object records that use the source   *
      * that was moved.                                             *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0092    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Quit when solt = 9
      *          ------------------------------------------
     C           W3SOLT    CABEQ'9'       SR9299
      *
      *          ------------------------------------------
      *          Open OMOBJL7 when not open
      *          ------------------------------------------
     C           I#OBJ7    IFNE *ON                        B01
     C                     OPEN OMOBJL7
     C                     MOVE *ON       I#OBJ7
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Read all records.
      *          ------------------------------------------
     C                     MOVE S#SRCF    K#SRCF
     C                     MOVE S#SRCL    K#SRCL
     C                     MOVE S#SRCM    K#SRCM
     C           $OBJK3    SETLLOMOBJL7
     C           $OBJK3    READEOMOBJL7                  99
      *
      *          ------------------------------------------
      *          Do while not end of file.
      *          ------------------------------------------
     C           *IN99     DOWEQ*OFF                       B01
      *
      *          ------------------------------------------
      *          Init the OMQCHG buffer with defaults
      *          ------------------------------------------
     C                     MOVE '20'      O4ACTC
     C                     MOVE *BLANK    O4EOP
     C                     MOVE *OFF      O4W4
     C                     MOVE *BLANK    O4PRT
     C                     MOVE *BLANK    O4PR2
     C                     MOVE *ON       O4UPD
     C                     MOVE *OFF      O4UPB
     C                     MOVE *ON       O4LIB
     C                     MOVELC#SAME    O4APPC    P
     C                     MOVELC#SAME    O4PDLC    P
     C                     MOVE RJOBJC    O4OBJC
     C                     MOVE RJOBJL    O4OBJL
     C                     MOVE RJOBJT    O4OBJT
     C                     MOVELC#SAME    O4OBJA    P
     C                     MOVELC#SAME    O4OBJD    P
     C                     MOVELC#SAME    O4OCRT    P
     C                     MOVELC#RTV     O4SRCX    P
     C                     MOVE *BLANK    O4OBJX
     C                     MOVE *BLANK    O4CHGX
     C                     MOVELC#SAME    O4FIX#    P
     C                     MOVELC#SAME    O4USDF
     C                     MOVELC#SAME    O4EXCI
     C                     MOVELC#SAME    O4OCLS
     C                     Z-ADDRJVRS#    O4VRS#
     C                     Z-ADDRJMOD#    O4MOD#
     C                     MOVE *BLANK    O4RPLC
     C                     MOVE *BLANK    O4ROBL
      *
      *          ------------------------------------------
      *          Change object record to new source location.
      *          ------------------------------------------
     C                     MOVE S#TSRL    O4SRCL
     C                     MOVE S#TSRF    O4SRCF
     C                     MOVE S#TSRM    O4SRCM
      *
      *          ------------------------------------------
      *          Change new source status only for objects
      *          created by this fix.
      *          ------------------------------------------
     C           W3FIX#    IFEQ RJFIX#                     B02
     C                     MOVE S#SRCS    O4SRCS
     C                     ELSE                            X02
     C                     MOVELC#SAME    O4SRCS
     C                     ENDIF                           E02
     C*
     C                     CALL 'OMQCHGOB'$QCHGO
      *
      *          ------------------------------------------
      *          Read next object record.
      *          ------------------------------------------
     C           $OBJK3    READEOMOBJL7                  99
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           SR9299    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0093 - Update the solution file      (OMERO)              *
      *        - Message other based-on version                     *
      *        - Message related applications                       *
      *                                                             *
      * This routine updates the Solution File. The status and      *
      * Main Object Library will be updated.                        *
      * When an object has reached the highest level (production)   *
      * the status will be set to *CMP.                             *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0093    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine init.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Get current solution record without lock
      *          ------------------------------------------
     C           $RO1K1    CHAINOMEROL1             N99
      *
      *          ------------------------------------------
      *       1. Update the solution record
      *          Quit when W3SEQ# not= S#SEQ1 (1st local libl)
      *          This is possible when UPI changed FROL
      *          ------------------------------------------
     C           W3SEQ#    IFNE S#SEQ1                     B01
     C                     GOTO S09399
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set ACT,25 update omero to *OFF
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,25
      *
      *          ------------------------------------------
      *          Fill new OBJL and STAT
      *          ------------------------------------------
     C                     MOVE W3TOPL    ROPDLC
     C                     MOVE S#TOOL    ROOBJL
     C           W3TOPL    IFEQ D#HPLC                     B01
     C                     MOVELC#COMP    ROSTAT
     C                     ELSE                            X01
     C                     MOVE C#ACT     ROSTAT
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Fill the OMQCHGSO buffer
      *          ------------------------------------------
     C                     MOVE '29'      S4ACTC
     C                     MOVE *OFF      S4EOP
     C                     MOVE *ON       S4UPD
     C                     MOVE *ON       S4UPB
     C                     MOVE *ON       S4LIB
     C                     MOVE W3APPC    S4APPC
     C                     MOVE W3FIX#    S4FIX#
     C                     MOVE W3OBJC    S4OBJC
     C                     MOVE W3OBJT    S4OBJT
     C                     MOVE W3MBRC    S4MBRC
     C                     MOVE ROPDLC    S4PDLC
     C                     MOVE ROOBJL    S4OBJL
     C                     MOVE ROSTAT    S4STAT
     C                     CALL 'OMQCHGSO'$QCHGS
      *
      *          ------------------------------------------
      *          Send message when error occurred
      *          ------------------------------------------
     C           S4MSTP    IFEQ 'E'                        B01
     C                     MOVE S4MSID    MSGID
     C                     MOVELS4MSGD    MSGDTA
     C                     EXSR SNDMSG
     C                     EXSR SRERR
      *
      *          ------------------------------------------
      *          Set ACT,25 update omero to *ON
      *          ------------------------------------------
     C                     ELSE                            X01
     C                     MOVE *ON       ACT,25
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Quit when SOLT not= 1,3 or 9
      *          ------------------------------------------
     C           W3SOLT    IFNE '1'                        B01
     C           W3SOLT    ANDNE'3'
     C           W3SOLT    ANDNE'9'
     C                     GOTO S09399
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Quit when detail involved
      *          ------------------------------------------
     C           W3MBRC    IFNE *BLANK                     B01
     C                     GOTO S09399
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *       2  Current APPC: the object has been replaced
      *                  and the to-lib is *PRD level
      *          ------------------------------------------
     C           I#OBJR    IFEQ *ON                        B01
     C           W3TOPL    ANDEQD#HPLC
      *
      *          ------------------------------------------
      *          Set APM array to the first DS element = curr APPC
      *          ------------------------------------------
     C           1         OCUR APMDS
      *
      *          ------------------------------------------
      *          Check if OMERO's exist in this APPC
      *          We skip our own solution
      *          ------------------------------------------
     C                     MOVE W3APPC    K#APPC
     C                     MOVELW3OBJC    K#OBJC    P
     C                     MOVE W3OBJT    K#OBJT
     C                     MOVE W3MBRC    K#MBRC
     C           $RO2K1    SETLLOMEROB2
     C           $RO2K1    READEOMEROB2                  99
      *
      *          ------------------------------------------
      *          Process active solutions with version conflicts
      *          ------------------------------------------
     C           *IN99     DOWEQ*OFF                       B02
      *
      *        no more version conflict checking in this subrt.
      *          ------------------------------------------
      *          Skip our W3 Solution in the current applic.
      *          all conflict rec's have been created when initiating
      *          solutions coming downwards from production level
      *          now only signals that one of the group replaces
      *          version in production
      *          ------------------------------------------
     C           ROFIX#    IFNE W3FIX#                     B03
     C*******    ROOVRC    ANDNE'3'   reserved excluded by L7
      *
      *
      *          ------------------------------------------
      *          Read first code 3 User from array
      *          ------------------------------------------
     C                     Z-ADD1         IX
     C                     MOVE *OFF      P#RMTI
     C                     MOVEL'VRS0003' P#MSGN
     C                     MOVEL'OMSMSG'  P#MSGF
     C                     MOVEA*BLANKS   MC
     C                     MOVEAW3APPC    MC,1
     C                     MOVEAW3FIX#    MC,6
     C                     MOVEAW3OBJC    MC,16
     C                     MOVEAW3OBJT    MC,26
     C                     MOVEAC#ALL     MC,35
     C                     MOVEAW3TOPL    MC,45
     C                     MOVEAROFIX#    MC,50
     C                     MOVEAMC        P#MSGD
      *
      *          ------------------------------------------
      *          Do for each application manager found
      *          ------------------------------------------
     C           IX        DOWLT11                         B05
     C           APM,IX    ANDNE*BLANKS
      *
      *          ------------------------------------------
      *          Send message to an application manager
      *          ------------------------------------------
     C                     MOVEAAPM,IX    P#USID
     C                     CALL 'OMX966C' $X966C
     C                     ADD  1         IX
     C                     ENDDO                           E05
     C*
     C                     ENDIF                           E03
      *
      *   release 'reserved' is performed in OMQCHGSO
     C***        ROOVRC    IFEQ '3'     not in OMEROL7     B03
     C****       ROPDLC    ANDNE'*ANY'
     C****                 MOVE *BLANKS   ROOVRC
     C****                 UPDATOMEROB2
     C*****                ENDIF                           E03
      *
      *          ------------------------------------------
      *          Read next solution related to this fix
      *          ------------------------------------------
     C           $RO2K1    READEOMEROB2                  99
     C                     ENDDO                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *       3  Check for objects in RELATED applications
      *          ------------------------------------------
     C                     Z-ADD2         IX
      *
      *          ------------------------------------------
      *          Do for all related APPC's
      *          ------------------------------------------
     C           IX        DOWLE10                         B01
     C           APC,IX    ANDNE*BLANKS
      *
      *          ------------------------------------------
      *       reset proces indi's  for next related application
      *          ------------------------------------------
     C                     MOVE *OFF      I#OVCI
     C                     MOVE *OFF      I#VRWI
     C                     MOVE *OFF      *IN96
     C                     MOVE *OFF      *IN99
      *          ------------------------------------------
      *          Checking for single direction
      *          ------------------------------------------
     C           APT,IX    IFNE *ON                        B02
      *
      *          ------------------------------------------
      *          No messages when not to production
      *          Check if object exists in related APPC
      *          ------------------------------------------
     C           W3TOPL    IFEQ D#HPLC                     B03
     C                     MOVEAAPC,IX    K#APPC
     C                     MOVELW3OBJC    K#OBJC    P
     C                     MOVELW3OBJT    K#OBJT
     C           $BJ4K1    SETLLOMOBJL4                  99
     C   99                MOVE *ON       I#OVCI
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Checking for bi-directional
      *          ------------------------------------------
     C                     ELSE                            X02
      *
      *          ------------------------------------------
      *          Check if act. solution exists in related APPC
      *          ------------------------------------------
     C                     MOVEAAPC,IX    K#APPC
     C                     MOVELW3OBJC    K#OBJC    P
     C                     MOVELW3OBJT    K#OBJT
     C                     MOVELW3MBRC    K#MBRC
      ******chain replaced by reade because of reading to be continued
     C           $RO2K1    SETLLOMEROB2                  96
     C           $RO2K1    READEOMEROB2                  99
      *
      *          ------------------------------------------
      *          *IN99 = *OFF : record found
      *          because creation of conflict rec has been cancelled
      *          OMEROB2 retrieving cycle has not to be looped
      *          ------------------------------------------
      *
      *          ------------------------------------------
      *          When an active solution exists
      *          ------------------------------------------
     C           *IN99     IFEQ *OFF                       B03
      *
      *          ------------------------------------------
      *          Check if export libr in OMAIF is part of the
      *          this related APPC at the interfaced PDLC level
      *          ------------------------------------------
     C                     MOVEAAPC,IX    K#EAPC
     C                     MOVE W3APPC    K#IAPC
     C           $IF4K1    SETLLOMAIFL4
     C           $IF4K1    READEOMAIFL4                  90
     C           *IN90     DOWEQ*OFF                       B04
     C           IFIPLC    IFEQ P#TOPL                     B05
     C                     LEAVE
     C                     ENDIF                           E05
     C           $IF4K1    READEOMAIFL4                  90
     C                     ENDDO                           E04
     C           *IN90     IFEQ *OFF                       B04
     C                     MOVELK#EAPC    BDAPPC    P
     C                     MOVELIFEPLC    BDPDLC    P
     C                     MOVELIFEOBL    BDLIBC    P
     C           $BD3K4    CHAINOMLBDL3              99
     C           *IN99     IFEQ *OFF                       B05
     C           BDLOLI    IFEQ *ON                        B06
     C           BDLSOI    OREQ *ON
     C           BDLG4I    OREQ *ON
     C           BDLDOI    OREQ *ON
     C                     MOVE *ON       I#OVCI
     C                     ENDIF                           E06
     C                     ENDIF                           E05
     C                     ENDIF                           E04
      *
     C                     ENDIF                           E03
     C                     ENDIF                           E02 single/bi
      *
      *          ------------------------------------------
      *        Solution is found in the bi related with correct
      *        TOOL at the interfaced PDLC level  or
      *        Object is found in the single related APPC
      *          ------------------------------------------
     C           I#OVCI    IFEQ *ON                        B02
      *
      *          ------------------------------------------
      *          Read first code 3 User from array APM
      *          ------------------------------------------
     C           IX        OCUR APMDS
     C                     Z-ADD1         IY
     C                     MOVE *OFF      P#RMTI
     C                     MOVEL'VRS0002' P#MSGN
     C                     MOVEL'OMSMSG'  P#MSGF
     C                     MOVEAW3APPC    MC,1
     C                     MOVEAW3FIX#    MC,6
     C                     MOVEAW3OBJC    MC,16
     C                     MOVEAW3OBJT    MC,26
     C                     MOVEAC#ALL     MC,35
     C                     MOVEAW3TOPL    MC,45
     C                     MOVEAAPC,IX    MC,50
     C           W3OCLS    IFEQ 'B'                        B03
     C                     CALL 'OMX422'  $MX422
     C           X#STAT    IFEQ C#NORM                     B04
     C                     MOVE 'VRS0007' P#MSGN
     C                     MOVEAP#IOBC    MC,55
     C                     ENDIF                           E04
     C                     ENDIF                           E03
     C                     MOVEAMC        P#MSGD
      *
      *          ------------------------------------------
      *          Do for each application manager found
      *          ------------------------------------------
     C           IY        DOWLT11                         B03
     C           APM,IY    ANDNE*BLANKS
      *
      *          ------------------------------------------
      *          Send message to an application manager
      *          ------------------------------------------
     C                     MOVEAAPM,IY    P#USID
     C                     CALL 'OMX966C' $X966C
     C                     ADD  1         IY
     C                     ENDDO                           E03
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Read next related APPC
      *          ------------------------------------------
     C                     ADD  1         IX
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S09399    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0094 - Change the fixstatus (OMERS).                      *
      *                                                             *
      * This routine calls program OMX940. This program changes     *
      * the fix status.                                             *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0094    BEGSR
      *
      *          ------------------------------------------
      *          Init the update fix flag
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,29
      *
      *          ------------------------------------------
      *          Open file OMFCRL1
      *          ------------------------------------------
     C                     OPEN OMFCRL1
      *
      *          ------------------------------------------
      *          Processing Fix without objects.
      *          ------------------------------------------
     C           W3OBJC    IFEQ C#NONC                     B01
      *
      *          ------------------------------------------
      *          Change status and realized dates
      *          ------------------------------------------
     C           $ERSK1    CHAINOMERSL1              99
     C           W3TOPL    IFEQ D#HPLC                     B02
     C                     Z-ADDD#DATE    RSRCDT
     C                     MOVE C#COMP    RSFIXS
     C                     ELSE                            X02
     C                     MOVE W3TOPL    RSFIXS
     C                     ENDIF                           E02
     C           W3FRPL    IFEQ D#LPLC                     B02
     C           W3FRPL    OREQ D#EPLC
     C                     ADD  1         RSDEX#
     C                     Z-ADDD#DATE    RSRDDT
     C                     ENDIF                           E02
     C           W3TOPL    IFEQ D#LPLC                     B02
     C           W3TOPL    OREQ D#EPLC
     C                     Z-ADDD#DATE    RSRSDT
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Update the Fix record
      *          ------------------------------------------
     C  N99                UPDATOMERSR
      *
      *          ------------------------------------------
      *          Call OMX940 to change REQUEST status.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
     C                     MOVE *ON       P#OPTI
     C                     MOVE W3APPC    P#APPC
     C                     MOVE W3FIX#    P#ROF#
     C                     CALL 'OMX940'  $MX940
      *
      *          ------------------------------------------
      *          Delete fix currently running record
      *          ------------------------------------------
     C           $ERSK1    DELETOMFCRR               99
      *
      *          ------------------------------------------
      *          Set the update omero flag to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,29
     C                     GOTO S09499
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Init the current number of fixes
      *          ------------------------------------------
     C           1         ADD  W#FCUR    IX
      *
      *          ------------------------------------------
      *          Process all fixnumbers
      *          ------------------------------------------
     C           IX        DOWLE999                        B01
      *
      *          ------------------------------------------
      *          Fill W3FIX# with this Fix
      *          ------------------------------------------
     C                     MOVE FIX,IX    P#ROF#
     C                     MOVE FIX,IX    W3FIX#
      *
      *          ------------------------------------------
      *          Call OMX940 to set Fix status.
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
     C                     MOVE '2'       P#OPTI
     C                     MOVE W3APPC    P#APPC
     C                     CALL 'OMX940'  $MX940
      *
      *          ------------------------------------------
      *          When we move from *DEV or EMER then set
      *          realized development date + DEX#
      *          ------------------------------------------
     C           W3FRPL    IFEQ D#LPLC                     B02
     C           W3FRPL    OREQ D#EPLC
     C           $ERSK1    CHAINOMERSL1              99
     C                     ADD  1         RSDEX#
     C           W3FRPL    IFNE P#ROFS                     B03
     C                     Z-ADDD#DATE    RSRDDT
     C                     ENDIF                           E03
     C  N99                UPDATOMERSR
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Delete fix currently running record
      *          ------------------------------------------
     C           $ERSK1    DELETOMFCRR               99
      *
      *          ------------------------------------------
      *          Point to next fix
      *          ------------------------------------------
     C                     ADD  1         IX
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          Set the update omero flag to done
      *          ------------------------------------------
     C                     MOVE *ON       ACT,29
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S09499    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SR0100 - Additional processing for ILE objects              *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SR0100    BEGSR
      *
      *          ------------------------------------------
      *          Only process if registry entry OMQILEPRC
      *          is set for this environment.
      *          to prevent harm of input P#APPC use P@APPC
      *          ------------------------------------------
     C                     MOVELW3APPC    P@APPC
     C                     MOVELW3TOPL    P#PDLC
     C                     MOVE *BLANKS   P#ROTC
     C                     MOVE *BLANKS   P#PGMN
     C                     MOVELC#ILEP    P#KEYW    P
     C                     MOVE *OFF      A@EOP
     C                     MOVE *BLANKS   A@ERR
     C                     CALL 'OMQRTVSR'$RTVSR
      *
      *          ------------------------------------------
      *          Do if enabled for this environment.
      *          ------------------------------------------
     C           A@MSID    IFEQ *BLANKS
     C           A@KEYV    ANDEQ'1'
      *
      *          ------------------------------------------
      *          Set ACT,34 to *OFF
      *          ------------------------------------------
     C                     MOVE *OFF      ACT,34
      *
      *          ------------------------------------------
      *          Call program to do ILE processing
      *          ------------------------------------------
     C                     CALL 'OMX032'  $MX032
      *
      *          ------------------------------------------
      *          If return status is not normal, then
      *          execute error routine. Else, set ACT,34
      *          to *ON (means processed succesfully)
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     EXSR SRERR
     C                     ELSE                            X01
     C                     MOVE *ON       ACT,34
     C                     ENDIF                           E01
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           S10099    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ------------------------------------------------------------ *
      * SRXBLD - Build Selection Tabel for specific Uer exit Point   * /
      *                                                              *
      * All selections are checked for APPC, UEP, FRPL, TOPL and     *
      * the disabled indicator. All valid exceptions are stored.     *
      * During execution of a selection further checking must be     *
      * done about local or remote checking and about the critical   *
      * indicator.                                                   *
      *                                                              *
      * ------------------------------------------------------------ *
     C           SRXBLD    BEGSR
      *
      *          ------------------------------------------
      *          Restore Tabel Pointer and fill keys
      *          ------------------------------------------
     C                     Z-ADDS#XSEL    TX
     C                     MOVE P#APPC    K#APPC
     C                     MOVE S#XUEP    K#XUEP
      *
      *          ------------------------------------------
      *          Get first record from OMXSEL1
      *          ------------------------------------------
     C           $SE1K1    CHAINOMXSEL1              99
      *
      *          ------------------------------------------
      *          Do while records for this appc/uep
      *          ------------------------------------------
     C           *IN99     DOWEQ*OFF                       B01
     C           TX        ANDLTC#XSEL
      *
      *          ------------------------------------------
      *          Get the function
      *          ------------------------------------------
     C                     MOVE SEXFUC    K#XFUC
     C                     EXSR SRXGFU
      *
      *          ------------------------------------------
      *          Skip irrelevant records
      *          ------------------------------------------
(wj) C           SEDISI    IFEQ '1'                        B02
(wj) C           SEDISI    OREQ '2'
(wj) C           SEDISI    OREQ '4'
(wj) C           FUWTAI    OREQ '2'
     C           SETPDL    ORNE P#TOPL
     C           SETPDL    ANDNEC#ALL
     C           SEFPDL    ORNE P#FRPL
     C           SEFPDL    ANDNEC#ALL
     C                     ELSE                            X02
      *
      *          ------------------------------------------
      *          Store a selected record
      *          ------------------------------------------
     C                     ADD  1         TX
     C                     MOVEASEXPSQ    PSQ,TX
     C                     MOVEASEXSSQ    SSQ,TX
     C                     MOVEASEXFUC    FUC,TX
     C                     MOVEASEOBJC    OBC,TX
     C                     MOVEASEOBJT    OBT,TX
     C                     MOVEASEOBJA    OBA,TX
     C                     MOVEASEFROL    FOL,TX
     C                     MOVEASEFPDL    FPD,TX
     C                     MOVEASETOOL    TOL,TX
     C                     MOVEASETPDL    TPD,TX
     C                     MOVEASECRII    CRI,TX
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Read next Exception Selection Record
      *          ------------------------------------------
     C           $SE1K1    READEOMXSEL1                  99
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          Save Count Tabel Entry
      *          ------------------------------------------
     C                     Z-ADDTX        S#XSEL
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ------------------------------------------------------------ *
      /EJECT
      * ------------------------------------------------------------ *
      * SRXIFA - Check there are exceptions for this User exit Point * /
      *          for this solution                                   *
      * ------------------------------------------------------------ *
     C           SRXIFA    BEGSR
      *
      *          ------------------------------------------
      *          Initilialize Routine for a UEP
      *          UEP 3,5 and 7 are combined in one tabel
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
     C                     Z-ADD-1        S#XPSQ
      *
      *          ------------------------------------------
      *          Fill TX and S#XSEL depending on UEP
      *          ------------------------------------------
     C                     SELEC                           B01
      *
      *                    --------------------------------
      *                    UEP 3
      *                    --------------------------------
     C           S#XUEP    WHEQ C#XBSO                     X01
     C                     Z-ADD*ZERO     TX
     C                     Z-ADDS#XSE3    S#XSEL
      *
      *                    --------------------------------
      *                    UEP 5
      *                    --------------------------------
     C           S#XUEP    WHEQ C#XPRC                     X01
     C                     Z-ADDS#XSE3    TX
     C                     Z-ADDS#XSE5    S#XSEL
      *
      *                    --------------------------------
      *                    UEP 7
      *                    --------------------------------
     C           S#XUEP    WHEQ C#XESO                     X01
     C                     Z-ADDS#XSE5    TX
     C                     Z-ADDS#XSE7    S#XSEL
      *
      *                    --------------------------------
      *                    UEP 1
      *                    --------------------------------
     C           S#XUEP    WHEQ C#XBFX                     X01
     C                     Z-ADD*ZERO     TX
     C                     Z-ADDS#XSE1    S#XSEL
      *
      *                    --------------------------------
      *                    UEP 8
      *                    --------------------------------
     C           S#XUEP    WHEQ C#XRSO                     X01
     C                     Z-ADD*ZERO     TX
     C                     Z-ADDS#XSE8    S#XSEL
      *
      *                    --------------------------------
      *                    UEP 9
      *                    --------------------------------
     C           S#XUEP    WHEQ C#XEFX                     X01
     C                     Z-ADD*ZERO     TX
     C                     Z-ADDS#XSE9    S#XSEL
     C                     ENDSL                           E01
      *
      *          ------------------------------------------
      *          Get First Exception for this solution
      *          ------------------------------------------
     C                     EXSR SRXGSE
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ------------------------------------------------------------ *
      /EJECT
      * ------------------------------------------------------------ *
      * SRXPFA - Process all exceptions for this UEP, for this       * /
      *          solution                                            *
      *                                                              *
      * Input:   AC      Current ACT counter.                        *
      *                                                              *
      *                                                              *
      * ------------------------------------------------------------ *
     C           SRXPFA    BEGSR
      *
      *          ------------------------------------------
      *          Indicate method Exceptions
      *          ------------------------------------------
     C                     MOVE C#EXCP    W#MTHD
      *
      *          ------------------------------------------
      *          Process exceptions at specified UEP
      *          ------------------------------------------
     C           XEOF      DOWEQ*OFF                       B01
     C           I#QW3     ANDNE*ON
     C                     MOVE '0'       ACT,AC
     C                     EXSR SRXPSE
     C           I#QW3     IFNE *ON                        B02
     C                     EXSR SRXGSE
     C                     ENDIF                           E02
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ------------------------------------------------------------ *
      /EJECT
      * ------------------------------------------------------------ *
      * SRXGSE - Get next Valid Function for this                    * /
      *          Application                                         *
      *          Exception Phase                                     *
      *          Solution                                            *
      *                                                              *
      * Get next function out of tabel dependent on selection        *
      *                                                              *
      * ------------------------------------------------------------ *
     C           SRXGSE    BEGSR
      *
      *          ------------------------------------------
      *          Initilialize Routine
      *            *IN50 Selected
      *            *IN51 Not Selected
      *            TX    Tabel entry
      *          ------------------------------------------
      *
     C                     MOVE *OFF      *IN50
     C                     MOVE *OFF      XEOF
      *
      *          ------------------------------------------
      *          Search tabel till valid selection or EOT
      *          ------------------------------------------
     C           TX        DOWLTS#XSEL                     B01
     C           *IN50     ANDEQ*OFF
     C                     ADD  1         TX
      *
      *          ------------------------------------------
      *          Only for sequence not already been processed
      *          ------------------------------------------
     C           PSQ,TX    IFGT S#XPSQ                     B02
      *
      *          ------------------------------------------
      *          Check generic object code
      *          ------------------------------------------
     C                     MOVE *OFF      *IN51
     C                     EXSR SRXOBC
      *
      *          ------------------------------------------
      *          Check selection fields
      *          ------------------------------------------
     C           W#OBCL    IFLE W3OBJC                     B03
     C           W#OBCH    ANDGEW3OBJC
      *
     C           TOL,TX    IFEQ C#ALL                      B04
     C           TOL,TX    OREQ W3TOOL
      *
     C           OBT,TX    IFEQ C#ALL9                     B05
     C           OBT,TX    OREQ W3OBJT
     C           OBT,TX    OREQ D#GL4N
     C           W3OCLS    ANDEQS#OCLS
      *
     C           OBA,TX    IFEQ C#ALL                      B06
     C           OBA,TX    OREQ W3OBJA
      *
     C           FOL,TX    IFEQ C#ALL                      B07
     C           FOL,TX    OREQ W3FROL
      *
     C                     MOVE *ON       *IN50
     C                     ENDIF                           E07
     C                     ENDIF                           E06
     C                     ENDIF                           E05
     C                     ENDIF                           E04
     C                     ENDIF                           E03
      *
     C                     ENDIF                           E02
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          Selected     => Save Sequence number
      *          Not selected => Force end of tabel
      *          ------------------------------------------
     C           *IN50     IFEQ *ON                        B01
     C                     Z-ADDPSQ,TX    S#XPSQ
     C                     ELSE                            X01
     C                     MOVE *ON       XEOF
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ------------------------------------------------------------ *
      /EJECT
      * ------------------------------------------------------------ *
      * SRXGFU - Get the exception function                          * /
      *                                                              *
      * Input : P#APPC  (Application code)                           *
      *         K#XFUC  (Exception function)                         *
      *                                                              *
      *                                                              *
      * Output: *IN99   (0=Found)                                    *
      *                 (1=Not found or not correct function)        *
      * ------------------------------------------------------------ *
     C           SRXGFU    BEGSR
      *
      *          ------------------------------------------
      *          Init Subroutine
      *          ------------------------------------------
      *
      *          ------------------------------------------
      *          Get Function
      *          ------------------------------------------
     C           $FU1K1    CHAINOMXFUL1              99
      *
      *          ------------------------------------------
      *          Function not found, check system function
      *          ------------------------------------------
     C           *IN99     IFEQ *ON                        B01
      *
      *          ------------------------------------------
      *          Open OMXFUL2 when not open
      *          ------------------------------------------
     C           I#OFU2    IFNE *ON                        B02
     C                     OPEN OMXFUL2
     C                     MOVE *ON       I#OFU2
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Get Function
      *          ------------------------------------------
     C           $FU2K1    CHAINOMXFUL2              99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ------------------------------------------------------------ *
      /EJECT
      * ------------------------------------------------------------ *
      * SRXPSE - Process Next Selected  Function                     * /
      *                                                              *
      * Entry Found, Process function defined in entry               *
      *                                                              *
      * ------------------------------------------------------------ *
     C           SRXPSE    BEGSR
      *
      *          ------------------------------------------
      *          Init Subroutine
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Get Function
      *          ------------------------------------------
     C                     MOVEAFUC,TX    K#XFUC
     C                     EXSR SRXGFU
      *
      *          ------------------------------------------
      *          Function not found
      *          ------------------------------------------
     C           *IN99     IFEQ *ON                        B01
     C                     MOVEAK#XFUC    MC,1
     C                     MOVEAW3FIX#    MC,11
     C                     MOVE 'EXC0005' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     EXSR SRERR
     C                     GOTO XPSE99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Skip functions only for remote
      *          ------------------------------------------
     C           FUWTAI    CABEQ'2'       XPSE99
      *
      *          ------------------------------------------
      *          If command filled
      *          ------------------------------------------
     C           FUXFUN    IFNE *BLANKS                    B01
      *
      *          ------------------------------------------
      *          Get first 10 positions of commandstring
      *          ------------------------------------------
     C                     MOVEAFUXFUN    TCX
     C                     Z-ADD1         FX
     C                     MOVE *BLANK    W#XCMD
     C           FX        DOWLEC#CMDL                     B02
     C           W#XCMD    ANDEQ*BLANK
     C           TCX,FX    IFNE ' '                        B03
     C                     MOVEATCX,FX    W#XCMD
     C                     ENDIF                           E03
     C                     ADD  1         FX
     C                     ENDDO                           E02
      *
      *          ------------------------------------------
      *          String is blank ?
      *          ------------------------------------------
     C           W#XCMD    IFEQ *BLANK                     B02
     C                     MOVEAFUXFUC    MC,1
     C                     MOVEAW3FIX#    MC,11
     C                     MOVE 'EXC0006' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     EXSR SRERR
     C                     GOTO XPSE99
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Command "CHGOMSVAR"
      *          ------------------------------------------
     C           W#XCMD    CASEQC#XCMD    SRXPRN
      *
      *          ------------------------------------------
      *          Other command
      *          ------------------------------------------
     C                     CAS            SRXPCM
     C                     ENDCS
      *
      *          ------------------------------------------
      *          Procedure
      *          ------------------------------------------
     C                     ELSE                            X01
     C                     EXSR SRXPPR
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C           XPSE99    ENDSR
      * ------------------------------------------------------------ *
      /EJECT
      * ------------------------------------------------------------ *
      * SRXPRN - Command CHGVAROMS                                   * /
      *
      * ------------------------------------------------------------ *
     C           SRXPRN    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine Init
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Call the CHGVAROMS convertor
      *          ------------------------------------------
     C                     MOVELD#W3RC    P#W3RC    P
     C                     CALL 'OMX303'  $MX303         99
     C  N99                MOVE *ON       I#X303
     C   99                MOVE *OFF      I#X303
      *
      *          ------------------------------------------
      *          Error encountered
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
      *
     C           S#XUEP    IFEQ '1'                        B02
     C           S#XUEP    OREQ '9'
     C                     MOVEA*BLANKS   MC
     C                     MOVEAC#NONE    MC,1
     C                     MOVEAC#NONE    MC,13
     C                     MOVEAC#NONE    MC,22
     C                     ELSE                            X02
     C                     MOVEAW3OBJC    MC,1
     C                     MOVEAW3OBJT    MC,13
     C                     MOVEAW3TOOL    MC,22
     C                     ENDIF                           E02
     C                     MOVEAFUXFUC    MC,32
     C                     MOVEAS#XUEP    MC,42
     C                     MOVEAFUXFUN    MC,43
     C                     MOVE 'EXC0004' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     EXSR SRERR
      *
      *          ------------------------------------------
      *          Send ok message
      *          ------------------------------------------
     C                     ELSE                            X01
     C           S#XUEP    IFEQ '1'                        B02
     C           S#XUEP    OREQ '9'
     C                     MOVEA*BLANKS   MC
     C                     MOVEAC#NONE    MC,1
     C                     MOVEAC#NONE    MC,13
     C                     MOVEAC#NONE    MC,22
     C                     ELSE                            X02
     C                     MOVEAW3OBJC    MC,1
     C                     MOVEAW3OBJT    MC,13
     C                     MOVEAW3TOOL    MC,22
     C                     ENDIF                           E02
     C                     MOVEAFUXFUC    MC,32
     C                     MOVEAS#XUEP    MC,42
     C                     MOVEAFUXFUN    MC,43
     C                     MOVE 'EXC0002' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
      *
      *          ------------------------------------------
      *          Normal ending, fill the W3 buffer.
      *          ------------------------------------------
     C                     MOVELP#W3RC    D#W3RC    P
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ------------------------------------------------------------ *
      /EJECT
      * ------------------------------------------------------------ *
      * SRXPPR - Call user  defined Procedure                        * /
      *
      * ------------------------------------------------------------ *
     C           SRXPPR    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine Init
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Call the correct procedure executor.
      *          This depends on the FUINTL interface level.
      *          ------------------------------------------
     C           FUINTL    CASEQC#V210    SRX210
     C           FUINTL    CASEQC#V300    SRX300
     C                     CAS            SRXUNK
     C                     ENDCS
      *
      *          ------------------------------------------
      *          Check for error
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     EXSR SRERR
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ------------------------------------------------------------ *
      /EJECT
      * ------------------------------------------------------------ *
      * SRX210 - User defined procedure for exception level V2R1M0   * /
      *                                                              *
      * ------------------------------------------------------------ *
     C           SRX210    BEGSR
      *
      *          ------------------------------------------
      *          Do it.
      *          ------------------------------------------
     C                     CALL 'OMX952C' $X952C
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ------------------------------------------------------------ *
      /EJECT
      * ------------------------------------------------------------ *
      * SRX300 - User defined procedure for exception level V3R0M0   * /
      *                                                              *
      * ------------------------------------------------------------ *
     C           SRX300    BEGSR
      *
      *          ------------------------------------------
      *          Fill the W3 fields into the V3R0M0 W3 buffer.
      *          ------------------------------------------
     C                     MOVE W3JOB#    #3JOB#
     C                     MOVE W3TFRC    #3TFRC
     C                     MOVE W3TSB#    #3TSB#
     C                     MOVE W3APPC    #3APPC
     C                     MOVE W3ERR#    #3ERR#
     C                     MOVE W3RLS#    #3RLS#
     C                     MOVE W3FIX#    #3FIX#
     C                     MOVE W3OBJC    #3OBJC
     C                     MOVE W3OBJT    #3OBJT
     C                     MOVE W3OBJA    #3OBJA
     C                     MOVE W3MBRC    #3MBRC
     C                     MOVE W3OCLS    #3OCLS
     C                     MOVE W3EXCI    #3EXCI
     C                     MOVE W3OVRC    #3OVRC
     C                     MOVE W3SOLT    #3SOLT
     C                     MOVE W3SRTC    #3SRTC
     C                     MOVE W3OPTI    #3OPTI
     C                     MOVE W3SRCP    #3SRCP
     C                     MOVE W3FRPL    #3FRPL
     C                     MOVE W3FROL    #3FROL
     C                     MOVE W3FSRL    #3FSRL
     C                     MOVE W3FSRF    #3FSRF
     C                     MOVE W3FSRM    #3FSRM
     C                     MOVE W3TOPL    #3TOPL
     C                     MOVE W3SEQ#    #3SEQ#
     C                     MOVE W3LBLT    #3LBLT
     C                     MOVE W3FLBI    #3FLBI
     C                     MOVE W3QTPI    #3QTPI
     C                     MOVE W3TOOL    #3TOOL
     C                     MOVE W3SRCL    #3SRCL
     C                     MOVE W3SRCF    #3SRCF
     C                     MOVE W3SRCM    #3SRCM
     C                     MOVE W3CNVT    #3CNVT
     C                     MOVE W3CNVS    #3CNVS
     C                     MOVE W3PGMN    #3PGMN
     C                     MOVE W3PGML    #3PGML
     C                     MOVE W3ROBC    #3ROBC
     C                     MOVE W3CATT    #3CATT
     C                     MOVE W3CATS    #3CATS
     C                     MOVE W3CAUT    #3CAUT
     C                     MOVE W3CAUS    #3CAUS
     C                     MOVE W3CJOT    #3CJOT
     C                     MOVE W3CJOS    #3CJOS
     C                     MOVE W3SRCS    #3SRCS
     C                     MOVE W3SRCX    #3SRCX
     C                     MOVE W3OBJX    #3OBJX
     C                     MOVE W3CHGX    #3CHGX
     C                     MOVE W3VRSB    #3VRSB
     C                     MOVE W3MODB    #3MODB
     C                     MOVE W3VRS#    #3VRS#
     C                     MOVE W3MOD#    #3MOD#
     C                     MOVE W3OBJR    #3OBJR
     C                     MOVE W3VRSR    #3VRSR
     C                     MOVE W3MODR    #3MODR
     C                     MOVE W3FIXR    #3FIXR
     C                     MOVE W3ACTO    #3ACTO
     C                     MOVE W3STAT    #3STAT
     C                     MOVE I#RCVM    #3RCVM
     C                     MOVE I#DSTA    #3DSTA
     C                     MOVE W#LBLE    #3LBLE
     C                     MOVE W#LBLW    #3LBLW
      *
      *          ------------------------------------------
      *          Do it.
      *          ------------------------------------------
     C                     MOVE *HIVAL    W3XBUF
     C                     MOVELX3R0M0    W3XBUF
     C                     CALL 'OMX952C2'$952C2       99
     C                     MOVELW3XBUF    X3R0M0
      *
      *          ------------------------------------------
      *          Move back the changed fields into the W3 buffer.
      *          If no errors occured.
      *          ------------------------------------------
     C           P#STAT    IFNE C#TERM                     B01
     C           *IN99     ANDEQ*OFF
      *
     C                     MOVE #3JOB#    W3JOB#
     C                     MOVE #3TFRC    W3TFRC
     C                     MOVE #3TSB#    W3TSB#
     C                     MOVE #3APPC    W3APPC
     C                     MOVE #3ERR#    W3ERR#
     C                     MOVE #3RLS#    W3RLS#
     C                     MOVE #3FIX#    W3FIX#
     C                     MOVE #3OBJC    W3OBJC
     C                     MOVE #3OBJT    W3OBJT
     C                     MOVE #3OBJA    W3OBJA
     C                     MOVE #3MBRC    W3MBRC
     C                     MOVE #3OCLS    W3OCLS
     C                     MOVE #3EXCI    W3EXCI
     C                     MOVE #3OVRC    W3OVRC
     C                     MOVE #3SOLT    W3SOLT
     C                     MOVE #3SRTC    W3SRTC
     C                     MOVE #3OPTI    W3OPTI
     C                     MOVE #3SRCP    W3SRCP
     C                     MOVE #3FRPL    W3FRPL
     C                     MOVE #3FROL    W3FROL
     C                     MOVE #3FSRL    W3FSRL
     C                     MOVE #3FSRF    W3FSRF
     C                     MOVE #3FSRM    W3FSRM
     C                     MOVE #3TOPL    W3TOPL
     C                     MOVE #3SEQ#    W3SEQ#
     C                     MOVE #3LBLT    W3LBLT
     C                     MOVE #3FLBI    W3FLBI
     C                     MOVE #3QTPI    W3QTPI
     C                     MOVE #3TOOL    W3TOOL
     C                     MOVE #3SRCL    W3SRCL
     C                     MOVE #3SRCF    W3SRCF
     C                     MOVE #3SRCM    W3SRCM
     C                     MOVE #3CNVT    W3CNVT
     C                     MOVE #3CNVS    W3CNVS
     C                     MOVE #3PGMN    W3PGMN
     C                     MOVE #3PGML    W3PGML
     C                     MOVE #3ROBC    W3ROBC
     C                     MOVE #3CATT    W3CATT
     C                     MOVE #3CATS    W3CATS
     C                     MOVE #3CAUT    W3CAUT
     C                     MOVE #3CAUS    W3CAUS
     C                     MOVE #3CJOT    W3CJOT
     C                     MOVE #3CJOS    W3CJOS
     C                     MOVE #3SRCS    W3SRCS
     C                     MOVE #3SRCX    W3SRCX
     C                     MOVE #3OBJX    W3OBJX
     C                     MOVE #3CHGX    W3CHGX
     C                     MOVE #3VRSB    W3VRSB
     C                     MOVE #3MODB    W3MODB
     C                     MOVE #3VRS#    W3VRS#
     C                     MOVE #3MOD#    W3MOD#
     C                     MOVE #3OBJR    W3OBJR
     C                     MOVE #3VRSR    W3VRSR
     C                     MOVE #3MODR    W3MODR
     C                     MOVE #3FIXR    W3FIXR
     C                     MOVE #3ACTO    W3ACTO
     C                     MOVE #3STAT    W3STAT
     C                     MOVE #3RCVM    I#RCVM
     C                     MOVE #3DSTA    I#DSTA
     C                     MOVE #3LBLE    W#LBLE
     C                     MOVE #3LBLW    W#LBLW
      *
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ------------------------------------------------------------ *
      /EJECT
      * ------------------------------------------------------------ *
      * SRXUNK - User defined procedure for exception level UNKNOWN  * /
      *                                                              *
      * ------------------------------------------------------------ *
     C           SRXUNK    BEGSR
      *
      *          ------------------------------------------
      *          Fill the W3 fields into the V3R0M0 W3 buffer.
      *          ------------------------------------------
     C                     MOVE W3JOB#    #3JOB#
     C                     MOVE W3TFRC    #3TFRC
     C                     MOVE W3TSB#    #3TSB#
     C                     MOVE W3APPC    #3APPC
     C                     MOVE W3ERR#    #3ERR#
     C                     MOVE W3RLS#    #3RLS#
     C                     MOVE W3FIX#    #3FIX#
     C                     MOVE W3OBJC    #3OBJC
     C                     MOVE W3OBJT    #3OBJT
     C                     MOVE W3OBJA    #3OBJA
     C                     MOVE W3MBRC    #3MBRC
     C                     MOVE W3OCLS    #3OCLS
     C                     MOVE W3EXCI    #3EXCI
     C                     MOVE W3OVRC    #3OVRC
     C                     MOVE W3SOLT    #3SOLT
     C                     MOVE W3SRTC    #3SRTC
     C                     MOVE W3OPTI    #3OPTI
     C                     MOVE W3SRCP    #3SRCP
     C                     MOVE W3FRPL    #3FRPL
     C                     MOVE W3FROL    #3FROL
     C                     MOVE W3FSRL    #3FSRL
     C                     MOVE W3FSRF    #3FSRF
     C                     MOVE W3FSRM    #3FSRM
     C                     MOVE W3TOPL    #3TOPL
     C                     MOVE W3SEQ#    #3SEQ#
     C                     MOVE W3LBLT    #3LBLT
     C                     MOVE W3FLBI    #3FLBI
     C                     MOVE W3QTPI    #3QTPI
     C                     MOVE W3TOOL    #3TOOL
     C                     MOVE W3SRCL    #3SRCL
     C                     MOVE W3SRCF    #3SRCF
     C                     MOVE W3SRCM    #3SRCM
     C                     MOVE W3CNVT    #3CNVT
     C                     MOVE W3CNVS    #3CNVS
     C                     MOVE W3PGMN    #3PGMN
     C                     MOVE W3PGML    #3PGML
     C                     MOVE W3ROBC    #3ROBC
     C                     MOVE W3CATT    #3CATT
     C                     MOVE W3CATS    #3CATS
     C                     MOVE W3CAUT    #3CAUT
     C                     MOVE W3CAUS    #3CAUS
     C                     MOVE W3CJOT    #3CJOT
     C                     MOVE W3CJOS    #3CJOS
     C                     MOVE W3SRCS    #3SRCS
     C                     MOVE W3SRCX    #3SRCX
     C                     MOVE W3OBJX    #3OBJX
     C                     MOVE W3CHGX    #3CHGX
     C                     MOVE W3VRSB    #3VRSB
     C                     MOVE W3MODB    #3MODB
     C                     MOVE W3VRS#    #3VRS#
     C                     MOVE W3MOD#    #3MOD#
     C                     MOVE W3OBJR    #3OBJR
     C                     MOVE W3VRSR    #3VRSR
     C                     MOVE W3MODR    #3MODR
     C                     MOVE W3FIXR    #3FIXR
     C                     MOVE W3ACTO    #3ACTO
     C                     MOVE W3STAT    #3STAT
     C                     MOVE I#RCVM    #3RCVM
     C                     MOVE I#DSTA    #3DSTA
     C                     MOVE W#LBLE    #3LBLE
     C                     MOVE W#LBLW    #3LBLW
      *
      *          ------------------------------------------
      *          Do it.
      *          ------------------------------------------
     C                     MOVE *HIVAL    W3XBUF
     C                     MOVELX3R0M0    W3XBUF
     C                     CALL 'OMX952C2'$952C2       99
     C                     MOVELW3XBUF    X3R0M0
      *
      *          ------------------------------------------
      *          Move back the changed fields into the W3 buffer.
      *          If no errors occured.
      *          ------------------------------------------
     C           P#STAT    IFNE C#TERM                     B01
     C           *IN99     ANDEQ*OFF
      *
     C                     MOVE #3JOB#    W3JOB#
     C                     MOVE #3TFRC    W3TFRC
     C                     MOVE #3TSB#    W3TSB#
     C                     MOVE #3APPC    W3APPC
     C                     MOVE #3ERR#    W3ERR#
     C                     MOVE #3RLS#    W3RLS#
     C                     MOVE #3FIX#    W3FIX#
     C                     MOVE #3OBJC    W3OBJC
     C                     MOVE #3OBJT    W3OBJT
     C                     MOVE #3OBJA    W3OBJA
     C                     MOVE #3MBRC    W3MBRC
     C                     MOVE #3OCLS    W3OCLS
     C                     MOVE #3EXCI    W3EXCI
     C                     MOVE #3OVRC    W3OVRC
     C                     MOVE #3SOLT    W3SOLT
     C                     MOVE #3SRTC    W3SRTC
     C                     MOVE #3OPTI    W3OPTI
     C                     MOVE #3SRCP    W3SRCP
     C                     MOVE #3FRPL    W3FRPL
     C                     MOVE #3FROL    W3FROL
     C                     MOVE #3FSRL    W3FSRL
     C                     MOVE #3FSRF    W3FSRF
     C                     MOVE #3FSRM    W3FSRM
     C                     MOVE #3TOPL    W3TOPL
     C                     MOVE #3SEQ#    W3SEQ#
     C                     MOVE #3LBLT    W3LBLT
     C                     MOVE #3FLBI    W3FLBI
     C                     MOVE #3QTPI    W3QTPI
     C                     MOVE #3TOOL    W3TOOL
     C                     MOVE #3SRCL    W3SRCL
     C                     MOVE #3SRCF    W3SRCF
     C                     MOVE #3SRCM    W3SRCM
     C                     MOVE #3CNVT    W3CNVT
     C                     MOVE #3CNVS    W3CNVS
     C                     MOVE #3PGMN    W3PGMN
     C                     MOVE #3PGML    W3PGML
     C                     MOVE #3ROBC    W3ROBC
     C                     MOVE #3CATT    W3CATT
     C                     MOVE #3CATS    W3CATS
     C                     MOVE #3CAUT    W3CAUT
     C                     MOVE #3CAUS    W3CAUS
     C                     MOVE #3CJOT    W3CJOT
     C                     MOVE #3CJOS    W3CJOS
     C                     MOVE #3SRCS    W3SRCS
     C                     MOVE #3SRCX    W3SRCX
     C                     MOVE #3OBJX    W3OBJX
     C                     MOVE #3CHGX    W3CHGX
     C                     MOVE #3VRSB    W3VRSB
     C                     MOVE #3MODB    W3MODB
     C                     MOVE #3VRS#    W3VRS#
     C                     MOVE #3MOD#    W3MOD#
     C                     MOVE #3OBJR    W3OBJR
     C                     MOVE #3VRSR    W3VRSR
     C                     MOVE #3MODR    W3MODR
     C                     MOVE #3FIXR    W3FIXR
     C                     MOVE #3ACTO    W3ACTO
     C                     MOVE #3STAT    W3STAT
     C                     MOVE #3RCVM    I#RCVM
     C                     MOVE #3DSTA    I#DSTA
     C                     MOVE #3LBLE    W#LBLE
     C                     MOVE #3LBLW    W#LBLW
      *
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ------------------------------------------------------------ *
      /EJECT
      * ------------------------------------------------------------ *
      * SRXPCM - Execute Command                                     * /
      *
      * ------------------------------------------------------------ *
     C           SRXPCM    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine Init
      *          ------------------------------------------
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Substitute the command values.
      *          ------------------------------------------
     C                     MOVELD#W3RC    P#W3RC
     C                     CALL 'OMX304'  $MX304         99
     C  N99                MOVE *ON       I#X304
     C   99                MOVE *OFF      I#X304
      *
      *          ------------------------------------------
      *          Execute Command if substitution was ok.
      *          ------------------------------------------
     C           P#STAT    IFEQ C#NORM                     B01
     C                     CALL 'OME003C' $E003C
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Fill message data
      *          ------------------------------------------
     C           S#XUEP    IFEQ '1'                        B01
     C           S#XUEP    OREQ '9'
     C                     MOVEA*BLANKS   MC
     C                     MOVEAC#NONE    MC,1
     C                     MOVEAC#NONE    MC,13
     C                     MOVEAC#NONE    MC,22
     C                     ELSE                            X01
     C                     MOVEAW3OBJC    MC,1
     C                     MOVEAW3OBJT    MC,13
     C                     MOVEAW3TOOL    MC,22
     C                     ENDIF                           E01
     C                     MOVEAFUXFUC    MC,32
     C                     MOVEAS#XUEP    MC,42
     C                     MOVEAFUXFUN    MC,43
      *
     C           P#STAT    IFEQ C#NORM                     B01
     C                     MOVE 'EXC0002' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     ELSE                            X01
     C                     MOVE 'EXC0004' MSGID
     C                     MOVEAMC        MSGDTA
     C                     EXSR SNDMSG
     C                     EXSR SRERR
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ------------------------------------------------------------ *
      /EJECT
      * ------------------------------------------------------------ *
      * SRXOBC - Get the Range of Object in Selection File           * /
      *                                                              *
      * ------------------------------------------------------------ *
     C           SRXOBC    BEGSR
      *
      *          ------------------------------------------
      *          Selection is *ALL
      *          ------------------------------------------
     C           OBC,TX    IFEQ C#ALL                      B01
     C                     MOVE *LOVAL    W#OBCL
     C                     MOVE *HIVAL    W#OBCH
     C                     ELSE                            X01
     C                     MOVEAOBC,TX    OBW,1
     C                     Z-ADD2         IX
     C           '*'       LOKUPOBW,IX                   99
      *
      *          ------------------------------------------
      *          Selection is generic*
      *          ------------------------------------------
     C           *IN99     IFEQ *ON                        B02
     C                     MOVEA*LOVAL    OBW,IX
     C                     MOVEAOBW,1     W#OBCL
     C                     MOVEA*HIVAL    OBW,IX
     C                     MOVEAOBW,1     W#OBCH
     C                     ELSE                            X02
     C                     MOVEAOBW,1     W#OBCL
     C                     MOVEAOBW,1     W#OBCH
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ------------------------------------------------------------ *
      /EJECT
      * ------------------------------------------------------------ *
      * SRAPPR - Call Action selection program                       * /
      *                                                              *
      * ------------------------------------------------------------ *
     C           SRAPPR    BEGSR
      *
      *          ------------------------------------------
      *          Subroutine Init
      *          ------------------------------------------
      *
     C           P#PRCS    IFEQ 'CO'                       B01
      *LV2       Handle compilation library list
     C                     EXSR SRHNDL
     C                     ENDIF                           E01
      *
     C                     MOVE C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Indicate method Actions
      *          ------------------------------------------
     C                     MOVE C#ACTN    W#MTHD
      *
      *          ------------------------------------------
      *          Put the W3 fields into the X3R0M0 buffer
      *          ------------------------------------------
     C                     MOVE W3JOB#    #3JOB#
     C                     MOVE W3TFRC    #3TFRC
     C                     MOVE W3TSB#    #3TSB#
     C                     MOVE W3APPC    #3APPC
     C                     MOVE W3ERR#    #3ERR#
     C                     MOVE W3RLS#    #3RLS#
     C                     MOVE W3FIX#    #3FIX#
     C                     MOVE W3OBJC    #3OBJC
     C                     MOVE W3OBJT    #3OBJT
     C                     MOVE W3OBJA    #3OBJA
     C                     MOVE W3MBRC    #3MBRC
     C                     MOVE W3OCLS    #3OCLS
     C                     MOVE W3EXCI    #3EXCI
     C                     MOVE W3OVRC    #3OVRC
     C                     MOVE W3SOLT    #3SOLT
     C                     MOVE W3SRTC    #3SRTC
     C                     MOVE W3OPTI    #3OPTI
     C                     MOVE W3SRCP    #3SRCP
     C                     MOVE W3FRPL    #3FRPL
     C                     MOVE W3FROL    #3FROL
     C                     MOVE W3FSRL    #3FSRL
     C                     MOVE W3FSRF    #3FSRF
     C                     MOVE W3FSRM    #3FSRM
     C                     MOVE W3TOPL    #3TOPL
     C                     MOVE W3SEQ#    #3SEQ#
     C                     MOVE W3LBLT    #3LBLT
     C                     MOVE W3FLBI    #3FLBI
     C                     MOVE W3QTPI    #3QTPI
     C                     MOVE W3TOOL    #3TOOL
     C                     MOVE W3SRCL    #3SRCL
     C                     MOVE W3SRCF    #3SRCF
     C                     MOVE W3SRCM    #3SRCM
     C                     MOVE W3CNVT    #3CNVT
     C                     MOVE W3CNVS    #3CNVS
     C                     MOVE W3PGMN    #3PGMN
     C                     MOVE W3PGML    #3PGML
     C                     MOVE W3ROBC    #3ROBC
     C                     MOVE W3CATT    #3CATT
     C                     MOVE W3CATS    #3CATS
     C                     MOVE W3CAUT    #3CAUT
     C                     MOVE W3CAUS    #3CAUS
     C                     MOVE W3CJOT    #3CJOT
     C                     MOVE W3CJOS    #3CJOS
     C                     MOVE W3SRCS    #3SRCS
     C                     MOVE W3SRCX    #3SRCX
     C                     MOVE W3OBJX    #3OBJX
     C                     MOVE W3CHGX    #3CHGX
     C                     MOVE W3VRSB    #3VRSB
     C                     MOVE W3MODB    #3MODB
     C                     MOVE W3VRS#    #3VRS#
     C                     MOVE W3MOD#    #3MOD#
     C                     MOVE W3OBJR    #3OBJR
     C                     MOVE W3VRSR    #3VRSR
     C                     MOVE W3MODR    #3MODR
     C                     MOVE W3FIXR    #3FIXR
     C                     MOVE W3ACTO    #3ACTO
     C                     MOVE W3STAT    #3STAT
     C                     MOVE I#RCVM    #3RCVM
     C                     MOVE I#DSTA    #3DSTA
     C                     MOVE W#LBLE    #3LBLE
     C                     MOVE W#LBLW    #3LBLW
      *
      *          ------------------------------------------
      *          Fill the buffer parameter
      *          ------------------------------------------
     C                     MOVE *HIVAL    W3XBUF
     C                     MOVELX3R0M0    W3XBUF
      *
      *          ------------------------------------------
      *          Call program
      *          ------------------------------------------
     C                     MOVE *OFF      P#CRAI
     C                     CALL 'OMC007'  $MC007       9899
     C   99                MOVE *OFF      I#C007
     C  N99                MOVE *ON       I#C007
      *
      *          ------------------------------------------
      *          Put the buffer parameter in X3R0M0 buffer
      *          ------------------------------------------
     C                     MOVELW3XBUF    X3R0M0
      *
      *          ------------------------------------------
      *          If call ended normally;
      *          Set ACT,13 if this is 'CO'
      *          Move X3R0M0 buffer fields in W3 fields
      *          ------------------------------------------
     C           P#STAT    IFNE C#TERM                     B01
     C           *IN98     ANDEQ*OFF
      *
     C                     MOVE #3JOB#    W3JOB#
     C                     MOVE #3TFRC    W3TFRC
     C                     MOVE #3TSB#    W3TSB#
     C                     MOVE #3APPC    W3APPC
     C                     MOVE #3ERR#    W3ERR#
     C                     MOVE #3RLS#    W3RLS#
     C                     MOVE #3FIX#    W3FIX#
     C                     MOVE #3OBJC    W3OBJC
     C                     MOVE #3OBJT    W3OBJT
     C                     MOVE #3OBJA    W3OBJA
     C                     MOVE #3MBRC    W3MBRC
     C                     MOVE #3OCLS    W3OCLS
     C                     MOVE #3EXCI    W3EXCI
     C                     MOVE #3OVRC    W3OVRC
     C                     MOVE #3SOLT    W3SOLT
     C                     MOVE #3SRTC    W3SRTC
     C                     MOVE #3OPTI    W3OPTI
     C                     MOVE #3SRCP    W3SRCP
     C                     MOVE #3FRPL    W3FRPL
     C                     MOVE #3FROL    W3FROL
     C                     MOVE #3FSRL    W3FSRL
     C                     MOVE #3FSRF    W3FSRF
     C                     MOVE #3FSRM    W3FSRM
     C                     MOVE #3TOPL    W3TOPL
     C                     MOVE #3SEQ#    W3SEQ#
     C                     MOVE #3LBLT    W3LBLT
     C                     MOVE #3FLBI    W3FLBI
     C                     MOVE #3QTPI    W3QTPI
     C                     MOVE #3TOOL    W3TOOL
     C                     MOVE #3SRCL    W3SRCL
     C                     MOVE #3SRCF    W3SRCF
     C                     MOVE #3SRCM    W3SRCM
     C                     MOVE #3CNVT    W3CNVT
     C                     MOVE #3CNVS    W3CNVS
     C                     MOVE #3PGMN    W3PGMN
     C                     MOVE #3PGML    W3PGML
     C                     MOVE #3ROBC    W3ROBC
     C                     MOVE #3CATT    W3CATT
     C                     MOVE #3CATS    W3CATS
     C                     MOVE #3CAUT    W3CAUT
     C                     MOVE #3CAUS    W3CAUS
     C                     MOVE #3CJOT    W3CJOT
     C                     MOVE #3CJOS    W3CJOS
     C                     MOVE #3SRCS    W3SRCS
     C                     MOVE #3SRCX    W3SRCX
     C                     MOVE #3OBJX    W3OBJX
     C                     MOVE #3CHGX    W3CHGX
     C                     MOVE #3VRSB    W3VRSB
     C                     MOVE #3MODB    W3MODB
     C                     MOVE #3VRS#    W3VRS#
     C                     MOVE #3MOD#    W3MOD#
     C                     MOVE #3OBJR    W3OBJR
     C                     MOVE #3VRSR    W3VRSR
     C                     MOVE #3MODR    W3MODR
     C                     MOVE #3FIXR    W3FIXR
     C                     MOVE #3ACTO    W3ACTO
     C                     MOVE #3STAT    W3STAT
     C                     MOVE #3RCVM    I#RCVM
     C                     MOVE #3DSTA    I#DSTA
     C                     MOVE #3LBLE    W#LBLE
     C                     MOVE #3LBLW    W#LBLW
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Error handling
      *          Set error array.
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C           *IN98     OREQ *ON
      *
     C           P#PRCS    IFEQ 'CO'                       B02
     C                     MOVE *OFF      ACT,13
     C                     ENDIF                           E02
      *
     C                     EXSR SRERR
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          If call ended normally;
      *          Set ACT,13 if this is 'CO'
      *          ------------------------------------------
     C           P#PRCS    IFEQ 'CO'                       B02
     C                     MOVE *ON       ACT,13
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ------------------------------------------------------------ *
      /EJECT
      * ----------------------------------------------------------- *
      * SRINIT - Program main initialization routine.               *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRINIT    BEGSR
      *
      *          ------------------------------------------
      *          Retrieve application info
      *          ------------------------------------------
     C                     CALL 'OMX001'  $X001
      *
      *          ------------------------------------------
      *          Retrieve dump library (application record)
      *          ------------------------------------------
     C                     OPEN OMAPPL1
     C           P#APPC    CHAINOMAPPL1              99
     C                     CLOSEOMAPPL1
      *
      *          ------------------------------------------
      *          Check if interfacing with a 4GL
      *          ------------------------------------------
     C                     MOVE D#GL4N    P#GL4N
     C           D#GL4N    IFNE *BLANKS                    B01
      *
      *          ------------------------------------------
      *          Retrieve OCLS when not powerhouse
      *          ------------------------------------------
     C           D#GL4N    IFNE C#PWH                      B02
      *
      *          ------------------------------------------
      *          Retreive OCLS for other 4GL
      *          ------------------------------------------
     C                     CALL 'OMX969'  $X969
      *
      *          ------------------------------------------
      *          Store the retreived OCLS
      *          ------------------------------------------
     C           1         SUBSTP#OUT     S#OCLS
     C                     MOVE S#OCLS    P#OCLS
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Fill array APC/APM when moving from *PROD
      *          or *ANY or when moving to *PROD
      *          ------------------------------------------
     C           P#FRPL    IFEQ D#HPLC                     B01
     C           P#FRPL    OREQ C#ANY
     C           P#TOPL    OREQ D#HPLC
      *
      *          ------------------------------------------
      *          Fill array APC and APM for CURRENT APPC
      *          ------------------------------------------
     C                     OPEN OMSEQL3
     C                     OPEN OMEROL7
      *******   OMAIFL2  cancelled
      *******   OMAIFL4 no  longer user control
      *          ------------------------------------------
      *         point to  AIM array covering the first DS element
      *          ------------------------------------------
     C           1         OCUR APMDS
     C                     MOVEAP#APPC    APC,1
     C                     Z-ADD0         IY
      *
      *          ------------------------------------------
      *          Read first code 3 User
      *          ------------------------------------------
     C                     MOVE P#APPC    K#APPC
     C                     MOVE *BLANKS   K#PDLC
     C                     MOVE '3'       K#AUTC
     C                     MOVEL'*9'      K#USID    P
     C           $EQ3K1    SETLLOMSEQL3
     C           $EQ3K2    READEOMSEQL3                  99
      *
      *          ------------------------------------------
      *          Do for each application manager found
      *          ------------------------------------------
     C           *IN99     DOWEQ*OFF                       B02
     C           IY        ANDLT10
     C                     ADD  1         IY
     C                     MOVEAEQUSID    APM,IY
      *
      *          ------------------------------------------
      *          Read next code 3 User
      *          ------------------------------------------
     C           $EQ3K2    READEOMSEQL3                  99
     C                     ENDDO                           E02
      *
      *          ------------------------------------------
      *          Fill array APC and APM for RELATED APPC's
      *          ------------------------------------------
     C                     Z-ADD1         IX
      *
      *          ------------------------------------------
      *          Read first related APPC export to import
      *          ------------------------------------------
     C                     MOVE P#APPC    K#EAPC
     C                     MOVE *BLANK    K#IAPC
      ****** APPC interface at PDLC (envir.) level cancelled
     C           $IF4K1    SETLLOMAIFL4
     C           K#EAPC    READEOMAIFL4                  99
      *
      *          ------------------------------------------
      *          Do while APPC's found (Maximum 9)
      *          ------------------------------------------
     C           IX        DOWLT10                         B02
     C           *IN99     ANDEQ*OFF
      *
      *          ------------------------------------------
      *          Check if APPC has been retrieved before
      *          ------------------------------------------
     C                     MOVE IFIAPC    S#APPC
     C           IFIAPC    LOKUPAPC,1                    98
      *
      *          ------------------------------------------
      *          New APPC  Fill data in APC
      *          ------------------------------------------
     C           *IN98     IFNE *ON                        B03
     C                     ADD  1         IX
     C           IX        OCUR APMDS
     C                     MOVEAIFIAPC    APC,IX
      *
      *          ------------------------------------------
      *          Get interface-type (bi-directional or single)
      *          if bi, fill exporting libr for envir. check
      *          ------------------------------------------
     C                     MOVE IFIAPC    K#EAPC
     C                     MOVE P#APPC    K#IAPC
     C           $IF4K1    SETLLOMAIFL4                  99
     C           *IN99     IFEQ *ON                        B04
     C                     MOVEA'1'       APT,IX
     C                     ELSE                            X04
     C                     MOVEA'0'       APT,IX
     C                     ENDIF                           E04
      *
      *          ------------------------------------------
      *          Read first code 3 User
      *          ------------------------------------------
     C                     Z-ADD0         IY
     C                     MOVE IFIAPC    K#APPC
     C                     MOVE *BLANKS   K#PDLC
     C                     MOVE '3'       K#AUTC
     C                     MOVEL'*9'      K#USID    P
     C           $EQ3K1    SETLLOMSEQL3
     C           $EQ3K2    READEOMSEQL3                  99
      *
      *          ------------------------------------------
      *          Do for each application manager found
      *          ------------------------------------------
     C           *IN99     DOWEQ*OFF                       B04
     C           IY        ANDLT10
     C                     ADD  1         IY
     C                     MOVEAEQUSID    APM,IY
      *
      *          ------------------------------------------
      *          Read next code 3 User
      *          ------------------------------------------
     C           $EQ3K2    READEOMSEQL3                  99
     C                     ENDDO                           E04
     C                     ENDIF                           E03
      *
      *          ------------------------------------------
      *          Read next related APPC after renewed positioning
      *          because of interruption by bi-directional check
      *          ------------------------------------------
     C           4         SUBSTS#APPC    W#APPC
     C           W#APPC    CAT  '9':0     K#IAPC
     C                     MOVE P#APPC    K#EAPC
     C           $IF4K1    SETLLOMAIFL4
     C           K#EAPC    READEOMAIFL4                  99
     C                     ENDDO                           E02
      *
      *          ------------------------------------------
      *          Close the extra files
      *          ------------------------------------------
     C                     CLOSEOMSEQL3
     C**********           CLOSEOMAIFL4
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Make name of fallback library
      *          ------------------------------------------
     C                     MOVELP#TFRC    W#FLBL    P
     C                     MOVEL'OM'      W#FLBL
     C                     MOVE P#TFRC    K#TFRC
      *
      *          ------------------------------------------
      *          Get receiving mode from transfer number
      *          ------------------------------------------
     C           1         SUBSTP#TFRC:2  W#POS1
      *
      *          ------------------------------------------
      *          If program is in receiving mode
      *          ------------------------------------------
     C           W#POS1    IFEQ 'R'                        B01
      *
      *          ------------------------------------------
      *          Set receiving mode indicator on
      *          ------------------------------------------
     C                     MOVE *ON       I#RCVM
      *
      *          ------------------------------------------
      *          Retrieve FROM ADDR record
      *          ------------------------------------------
     C                     Z-ADD0         K#TSB#
     C                     MOVEL'FROM'    K#TKY1    P
     C                     MOVEL'ADDR'    K#TKY2    P
     C           $TD2K1    CHAINOMOTDL2             N9999
     C           *IN99     IFEQ *OFF                       B02
     C                     MOVELTDTVL1    D#SNDN
     C                     MOVELTDTVL2    D#SNDI
     C                     ELSE                            X02
     C                     MOVE *BLANK    D#SNDN
     C                     MOVE *BLANK    D#SNDI
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Determine the device code
      *          ------------------------------------------
     C           D#MEDI    IFEQ '1'                        B02
     C                     MOVEL'*TCP'    P#DEVC
     C                     ELSE                            X02
     C           D#MEDI    IFEQ '0'                        B03
     C                     MOVE *BLANKS   P#DEVC
     C                     ENDIF                           E03
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          When monitoring inform sender we started
      *          ------------------------------------------
     C           D#MONI    IFEQ *ON                        B02
     C                     MOVEL'*STR'    P#ACTI
     C                     CALL 'OMX994C' $X994C
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Else (not in receiving mode)
      *          ------------------------------------------
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          Set receiving mode indicator off
      *          ------------------------------------------
     C                     MOVE *OFF      I#RCVM
      *
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Retrieve critical OTD record
      *          ------------------------------------------
     C                     Z-ADD0         K#TSB#
     C                     MOVEL'SET'     K#TKY1    P
     C                     MOVEL'CRIT'    K#TKY2    P
     C           $TD2K1    CHAINOMOTDL2             N9999
     C           *IN99     IFEQ *ON                        B01
     C                     MOVE *ALL'*'   TDTVL1
     C                     MOVE *ALL'*'   TDTVL2
     C                     MOVE *ALL'*'   TDTVL3
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Determine processing direction - first
      *          translate special value *CMP to the value
      *          of the highest production level (this
      *          value is stored in the field D#HPLC)
      *          ------------------------------------------
     C           P#FRPL    IFEQ C#COMP                     B01
     C                     MOVE D#HPLC    W#FRPL
     C                     ELSE                            X01
     C                     MOVE P#FRPL    W#FRPL
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          If from production level is *ANY
      *          ------------------------------------------
     C           W#FRPL    IFEQ C#ANY                      B01
      *
      *          ------------------------------------------
      *          Processing direction will always be down
      *          ------------------------------------------
     C                     MOVE '1'       P#DIRC
      *
      *          ------------------------------------------
      *          Else (from production level is not *ANY)
      *          ------------------------------------------
     C                     ELSE                            X01
      *
      *          ------------------------------------------
      *          If from and to production level are equal
      *          ------------------------------------------
     C           W#FRPL    IFEQ P#TOPL                     B02
      *
      *          ------------------------------------------
      *          Transfer direction is horizontal
      *          ------------------------------------------
     C                     MOVE '2'       P#DIRC
      *
      *          ------------------------------------------
      *          Else (from and to prod level not equal)
      *          ------------------------------------------
     C                     ELSE                            X02
      *
      *          ------------------------------------------
      *          Get prod level seq numbers of from and to
      *          ------------------------------------------
     C                     OPEN OMPDLL1
      *
     C                     MOVE W#FRPL    K#PDLC
     C           $DL1K1    CHAINOMPDLL1              99
     C                     Z-ADDDLSEQ#    W#FPL#
      *
     C                     MOVE P#TOPL    K#PDLC
     C           $DL1K1    CHAINOMPDLL1              99
     C                     Z-ADDDLSEQ#    W#TPL#
      *
     C                     CLOSEOMPDLL1
      *
      *          ------------------------------------------
      *          Determine direction (W#TPL# and W#FPL# can
      *          not be equal - that was handled in the
      *          IF-branch of this block)
      *          ------------------------------------------
     C           W#TPL#    IFGT W#FPL#                     B03
     C                     MOVE '0'       P#DIRC
     C                     ELSE                            X03
     C                     MOVE '1'       P#DIRC
     C                     ENDIF                           E03
      *
     C                     ENDIF                           E02
      *
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Initialize buffer for OMQCHGOB and SO
      *          ------------------------------------------
     C                     MOVEL'V3R0M0'  O4INTL    P
     C                     MOVE *BLANKS   O4MSQ
     C                     MOVEL'V3R0M0'  S4INTL    P
     C                     MOVE *BLANKS   S4MSQ
      *
      *       -----------------------------------------------
      *       Processing component details ? CLD in O4PRC buffer
      *       -----------------------------------------------
     C                     EXSR SRLDTL
      *
      *          ------------------------------------------
      *          Initialize 'Distribution allowed' to *ON
      *          ------------------------------------------
     C                     MOVE *ON       I#DSTA
      *
      *          ------------------------------------------
      *          Initialize W#LBLE and W#LBLW
      *          ------------------------------------------
     C                     MOVE '0'       W#LBLE
     C                     MOVE '0'       W#LBLW
      *
      *          ------------------------------------------
      *          Initialize indicators
      *          ------------------------------------------
     C                     MOVE *OFF      I#FLBC
     C                     MOVE *OFF      I#FBCF
     C                     MOVE *OFF      I#DOCC
     C                     MOVE *OFF      I#IFSC
      *
      *          ------------------------------------------
      *          Fill datastructure for 7-digit today date
      *          ------------------------------------------
     C                     Z-ADDUYEAR     D#YY
     C                     Z-ADDUMONTH    D#MM
     C                     Z-ADDUDAY      D#DD
     C           D#YYCC    SUB  19        D#CC
      *
      *          ------------------------------------------
      *          Confirm Version Conflicts?
      *          ------------------------------------------
     C                     EXSR SRCMRQ
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C                     ENDSR
      * ------------------------------------------------------------ *
      /EJECT
      * ------------------------------------------------------------ *
      * SRERR  - Routine for error handling                          * /
      *                                                              * /
      * When an error occured this routine check what to do.         * /
      * The ACT array contains indicators what caused the error      *
      * and what has been executed already:                          *
      * 1   update omero from       21   Distribution                *
      * 2   update omobj from       22   Actions SP & SL             *
      * 3   check dubbel onderhoud  23   Actions SO & EO             *
      * 4   UEP 3                   24   Actions EL & EP             *
      * 5   check from object       25   update omero new location   *
      * 6   check from source       26   Remove from object          *
      * 7   dump from source        27   Remove from source          *
      * 8   cpy source to fb        28   Invalid folder              *
      * 9   move object to fb       29   Set Fix status              *
      *10   delete to object        30   UEP 9                       *
      *11   cpy src + dlt to-src    31   UEP 1                       *
      *12   create object           32   Actions SD & ED             *
      *13   UEP 5 or Action CO      33   fallback initiated for libl *
      *14   PF conversion           34   update pgm/srvpgm           *
      *15   set attributes          35                               *
      *16   set authority           36                               *
      *17   set journalling         37   save / clear fb             *
      *18   UEP 7                   38   crt omfbc in fb             *
      *19   refresh new obj-rec     39   crt fb lib                  *
      *20   UEP 8                   40   0 = start w3; 1 = end w3    *
      *                                                              *
      * Each ACT element can have four values:                       *
      *     blank  this action is not relevant                       *
      *     0      this action started and did not end               *
      *     1      this action has been processed succesfully        *
      *     2      this warning has been logged before               *
      *                                                              *
      * How do we decide what to do:                                 *
      *     When this is a warning we log a message and continue     *
      *     When error occured at creating FLB quit libl             *
      *     When this is an error we have to analyze the W3QTPI      *
      *     field:                                                   *
      *                                                              *
      *     W3QTPI=0 Quit this W3 record and continue with others    *
      *                                                              *
      *     W3QTPI=1 Quit this W3                                    *
      *              Start Fallback for this library-list            *
      *              When this is first libl quit the program        *
      *                                                              *
      *     W3QTPI=2 Quit this W3                                    *
      *              When I#CRIT=*ON  we processed a critical object *
      *              When I#CRIT=*OFF we passed the critical one     *
      *                                                              *
      * ------------------------------------------------------------ *
     C           SRERR     BEGSR
      *
      *          ------------------------------------------
      *          Open OMLOG when not open
      *          ------------------------------------------
     C           I#OLOG    IFNE *ON                        B01
     C                     OPEN OMLOG
     C                     MOVE *ON       I#OLOG
      *
      *          ------------------------------------------
      *          Log the general start message in second job
      *          ------------------------------------------
     C                     MOVEAP#TFRC    MC,1
     C                     MOVEAW3FIX#    MC,11
     C                     MOVEAW3RLS#    MC,21
     C                     MOVEAW3ERR#    MC,31
     C                     MOVEAW3APPC    MC,41
     C                     MOVE 'OTP0001' MSGID
     C                     MOVEAMC        MSGDTA
      *
      *          ------------------------------------------
      *          Init OMLOG and write start record
      *          ------------------------------------------
     C                     MOVELP#TFRC    OGJOBN
     C                     MOVE C#LOG     OGUSID
     C                     Z-ADDD#JOB#    OGJOB#
     C                     Z-ADDD#DATE    OGINDT
     C                     TIME           OGINTM
     C                     MOVE W3APPC    OGAPPC
     C                     MOVE D#PGM     OGPGMN
     C                     MOVE MSGID     OGMSGN
     C                     MOVEL'OMSMSG'  OGMSGF    P
     C                     MOVELMSGDTA    OGMSGD    P
     C                     EXSR SRWMLE
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Set array to the error or warning
      *          ------------------------------------------
     C                     MOVE D#ACTO    W3ACTO
     C           '0'       SCAN W3ACTO    IZ
     C           IZ        IFEQ *ZERO                      B01
     C                     Z-ADD40        IZ
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Fill OMLOG record with standard fields
      *          ------------------------------------------
     C                     MOVEAW3APPC    MC,1
     C                     MOVEAW3FIX#    MC,6
     C                     MOVEAW3OBJC    MC,16
     C                     MOVEAW3OBJT    MC,28
     C                     MOVEAW3MBRC    MC,37
     C                     MOVEAW3FROL    MC,47
     C                     MOVEAW3TOOL    MC,57
     C                     Z-ADDIZ        D#IZ#
     C                     MOVEAD#IZC     MC,67
     C           I#IFS     IFEQ *ON                        B01
     C                     MOVEAIO1       MC,69
     C                     MOVEAW#FDIR    MC,109
     C                     MOVEAW#TDIR    MC,179
     C                     ELSE                            X01
     C                     MOVE *BLANKS   FLD180180
     C                     MOVE FLD180    MC,69
     C                     ENDIF                           E01
     C                     MOVEAMC        MSGDTA
     C                     MOVE W3APPC    OGAPPC
     C                     MOVELMSGDTA    OGMSGD    P
      *
      *          ------------------------------------------
      *          Check if this is warning
      *          ------------------------------------------
     C           IZ        IFEQ 3                          B01
     C           I#CVER    ANDEQ*OFF
     C           IZ        OREQ 7
     C           IZ        OREQ 15
     C           IZ        OREQ 16
     C           IZ        OREQ 17
     C           IZ        OREQ 19
     C           IZ        OREQ 25
     C           IZ        OREQ 26
     C           IZ        OREQ 27
     C           IZ        OREQ 29
      *
      *          ------------------------------------------
      *          Log the warning message
      *          ------------------------------------------
     C           I#IFS     IFEQ *ON                        B02
     C                     MOVE 'OTPE005' MSGID
     C                     ELSE                            X02
     C                     MOVE 'OTPE002' MSGID
     C                     ENDIF                           E02
     C                     MOVE MSGID     OGMSGN
     C                     EXSR SRWMLE
      *
      *          ------------------------------------------
      *          Continue W3 processing: Set Act to checked
      *          ------------------------------------------
     C                     ADD  1         W#WR#
     C                     MOVE '2'       ACT,IZ
     C                     GOTO ERR99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check if this is a UEP
      *          ------------------------------------------
     C           IZ        IFEQ 4                          B01
     C           IZ        OREQ 13
     C           IZ        OREQ 18
     C           IZ        OREQ 20
     C           IZ        OREQ 30
     C           IZ        OREQ 31
      *
      *          ------------------------------------------
      *          Fill indicator 'Critical Y/N' according
      *          to the current creation method
      *          ------------------------------------------
     C                     SELEC                           B02
     C           W#MTHD    WHEQ C#ACTN                     X02
     C                     MOVE P#CRAI    I#CRII
     C           W#MTHD    WHEQ C#EXCP                     X02
     C                     MOVE CRI,TX    I#CRII
     C                     ENDSL                           E02
      *
      *          ------------------------------------------
      *          Warning when not critical or uep 8, 9
      *          ------------------------------------------
     C           I#CRII    IFNE *ON                        B02
     C           IZ        OREQ 20
     C           IZ        OREQ 30
      *
      *          ------------------------------------------
      *          Log the warning message
      *          ------------------------------------------
     C           I#IFS     IFEQ *ON                        B03
     C                     MOVE 'OTPE005' MSGID
     C                     ELSE                            X03
     C                     MOVE 'OTPE002' MSGID
     C                     ENDIF                           E03
     C                     MOVE MSGID     OGMSGN
     C                     EXSR SRWMLE
      *
      *          ------------------------------------------
      *          Continue W3 processing: Set Act to checked
      *          ------------------------------------------
     C                     ADD  1         W#WR#
     C                     MOVE '2'       ACT,IZ
     C                     GOTO ERR99
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check if this is an action
      *          ------------------------------------------
     C           IZ        IFEQ 22                         B01
     C           IZ        OREQ 23
     C           IZ        OREQ 24
     C           IZ        OREQ 32
      *
      *          ------------------------------------------
      *          Warning when not critical
      *          ------------------------------------------
     C           P#CRAI    IFNE *ON                        B02
      *
      *          ------------------------------------------
      *          Log the warning message
      *          ------------------------------------------
     C           I#IFS     IFEQ *ON                        B03
     C                     MOVE 'OTPE005' MSGID
     C                     ELSE                            X03
     C                     MOVE 'OTPE002' MSGID
     C                     ENDIF                           E03
     C                     MOVE MSGID     OGMSGN
     C                     EXSR SRWMLE
      *
      *          ------------------------------------------
      *          Continue W3 processing: Set Act to checked
      *          ------------------------------------------
     C                     ADD  1         W#WR#
     C                     MOVE '2'       ACT,IZ
     C                     GOTO ERR99
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Check if this is a create FB error
      *          or critical UEP 1 or critical action SP or SL
      *          ------------------------------------------
     C           IZ        IFGT 36                         B01
     C           IZ        OREQ 31
     C           IZ        OREQ 22
      *
      *          ------------------------------------------
      *          Log the error message
      *          ------------------------------------------
     C           I#IFS     IFEQ *ON                        B02
     C                     MOVE 'OTPE004' MSGID
     C                     ELSE                            X02
     C                     MOVE 'OTPE001' MSGID
     C                     ENDIF                           E02
     C                     MOVE MSGID     OGMSGN
     C                     EXSR SRWMLE
      *
      *          ------------------------------------------
      *          Quit W3, Quit libl and Quit program
      *          ------------------------------------------
     C                     ADD  1         D#ER#
     C                     MOVE *ON       I#QW3
     C                     MOVE *ON       I#QLBL
     C                     MOVE *ON       I#QPGM
     C                     MOVE '2'       ACT,IZ
     C                     GOTO ERR99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Error for other values of IZ or crit. UEP's
      *          ------------------------------------------
     C                     ADD  1         W#ER#
     C           I#IFS     IFEQ *ON                        B01
     C                     MOVE 'OTPE004' MSGID
     C                     ELSE                            X01
     C                     MOVE 'OTPE001' MSGID
     C                     ENDIF                           E01
     C                     MOVE *ON       I#QW3
     C                     MOVE '2'       ACT,IZ
      *
      *          ------------------------------------------
      *          Fill and write OMLOG record
      *          ------------------------------------------
     C                     MOVE MSGID     OGMSGN
     C                     EXSR SRWMLE
      *
      *          ------------------------------------------
      *          Continue processing when QTPI=*OFF
      *          ------------------------------------------
     C           W3QTPI    IFEQ *OFF                       B01
      *
      *          ------------------------------------------
      *          Continue processing when QTPI=2 and
      *          we passed the critical object
      *          ------------------------------------------
     C           W3QTPI    OREQ '2'
     C           I#CRIT    ANDEQ*OFF
     C                     GOTO ERR99
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Quit processing is *ON  (fallback)  or
      *          Quit processing is '2' in critical part
      *          Set quit libl to true
      *          ------------------------------------------
     C                     MOVE *ON       I#QLBL
      *
      *          ------------------------------------------
      *          When first libl set quit program to true
      *          ------------------------------------------
     C           W3SEQ#    IFEQ S#SEQF                     B01
     C                     MOVE *ON       I#QPGM
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Start rollback for this libl
      *          ------------------------------------------
     C           I#FLBC    IFEQ *ON                        B01
     C           I#FBCF    ANDEQ*ON
     C                     CALL 'OMX991'  $X991
      *
      *          ------------------------------------------
      *          Set quit-progam to *ON when not *NORM
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B02
     C           W#ONR#    ORNE *ZERO
     C                     MOVE *ON       I#QPGM
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Save keyfields of this W3 record
      *          ------------------------------------------
     C                     MOVE W3SRTC    S#SRTC
     C                     MOVE W3OBJT    S#OBJT
     C                     MOVE W3OBJA    S#OBJA
     C                     MOVE W3OBJC    S#OBJC
     C                     MOVE W3MBRC    S#MBRC
      *
      *          ------------------------------------------
      *          Process this libl and set ACT to *OFF
      *          ------------------------------------------
     C                     Z-ADDS#SEQC    K#SEQ3
     C           $W31K1    SETLLOMOW3L1
     C           $W31K1    READEOMOW3L1                  99
     C           *IN99     DOWEQ*OFF                       B01
      *
      *          ------------------------------------------
      *          Stop reading when we met our old W3
      *          ------------------------------------------
     C           W3OBJC    IFEQ S#OBJC                     B02
     C           W3OBJT    ANDEQS#OBJT
     C           W3MBRC    ANDEQS#MBRC
     C           W3SRTC    ANDEQS#SRTC
     C           W3OBJA    ANDEQS#OBJA
     C                     MOVE *ON       *IN99
     C                     ELSE                            X02
      *
      *          ------------------------------------------
      *          Read W3 record for update
      *          ------------------------------------------
     C           RRNW31    CHAINOMOW3                99
      *
      *          ------------------------------------------
      *          Update W3ACTO
      *          ------------------------------------------
     C                     MOVE W3ACTO    D#ACTO
     C                     MOVE *ON       ACT,33
     C           ACT,40    IFEQ *ON                        B03
     C                     MOVE *OFF      ACT,40
     C                     ENDIF                           E03
     C                     MOVE D#ACTO    W3ACTO
      *
      *          ------------------------------------------
      *          Update W3 record and read next
      *          ------------------------------------------
     C                     UPDATOMOW3R
     C           $W31K1    READEOMOW3L1                  99
     C                     ENDIF                           E02
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          Quit this routine
      *          ------------------------------------------
     C                     GOTO ERR99
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C           ERR99     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SRWMLE - Write Multiple Log Entries                         *
      *                                                             *
      * This routine writes on or more entries to the OMS-log.      *
      * The message data in this program has a length of 256. The   *
      * field OGMSGD has a length of 80, so a maximum of 4 records  *
      * is written.                                                 *
      * ----------------------------------------------------------- *
     C           SRWMLE    BEGSR
      *
     C           MSGDT1    IFNE *BLANKS                    B01
     C                     Z-ADD1         OGSEQ#
     C                     MOVELMSGDT1    OGMSGD    P
     C                     WRITEOMLOGR
     C                     ENDIF                           E01
      *
     C           MSGDT2    IFNE *BLANKS                    B01
     C                     Z-ADD2         OGSEQ#
     C                     MOVELMSGDT2    OGMSGD    P
     C                     WRITEOMLOGR
     C                     ENDIF                           E01
      *
     C           MSGDT3    IFNE *BLANKS                    B01
     C                     Z-ADD3         OGSEQ#
     C                     MOVELMSGDT3    OGMSGD    P
     C                     WRITEOMLOGR
     C                     ENDIF                           E01
      *
     C           MSGDT4    IFNE *BLANKS                    B01
     C                     Z-ADD4         OGSEQ#
     C                     MOVELMSGDT4    OGMSGD    P
     C                     WRITEOMLOGR
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      *                                                             *
      * SRHNDL - Handle the compilation library list.               *  /
      *                                                             *
      * This routine checks if a compilation library list exists.   *
      * If once exist, the library list is build and set.           *
      * Also the flag I#CLBL is set *ON.                            *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRHNDL    BEGSR
      *
     C                     MOVE *OFF      I#CLBL
     C                     Z-ADDW3SEQ#    P#SEQ#
      *
     C           $LLCK1    CHAINOMLLCL1              99
     C           *IN99     IFEQ *OFF                       B01
     C                     MOVE *ON       I#CLBL
      *          Build the compilation library list.
     C                     EXSR SRBLDL
      *          Set the compilation library list :
      *                    When to activate = 'Always' or 'User Exit'
      *          Terminate if errors.
     C           LCAWHN    IFEQ '1'                        B02
     C           LCAWHN    OREQ '2'
     C                     EXSR SRSETL
     C                     ENDIF                           E02
      *
      *          ------------------------------------------
      *          Run Extended Relations program.
      *          ------------------------------------------
     C           LCRELI    IFEQ '1'                        B02
     C                     MOVE '1'       P#RELI
     C                     CALL 'OMU001C' $U001C
     C           P#STAT    CASNEC#NORM    SRTTLR
     C                     ENDCS
     C                     ENDIF                           E02
      *
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      *                                                             *
      * SRBLDL - Build the library list.                            *  /
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRBLDL    BEGSR
      *
     C                     Z-ADD*ZEROS    IQ
     C                     MOVEA*BLANKS   LBI
      *
     C           LCLBLT    IFEQ '1'                        B01
      *          Library list action = Add, place libraries in array.
     C                     EXSR SRADDL
     C                     ENDIF                           E01
      *
      *          Read first compilation library list.
     C           $LDCK1    SETLLOMLDCL1
     C           $LDCK1    READEOMLDCL1                  99
      *
     C           *IN99     DOWEQ*OFF                       B01
     C           DCLIBC    IFEQ C#OMSL                     B02
     C                     MOVELP#PGML    W#LB11 11 P
     C                     ELSE                            X02
     C                     MOVELDCLIBC    W#LB11 11 P
     C                     ENDIF                           E02
      *          Move the libraryname to table entry.
     C                     EXSR SRMOVL
      *
     C           $LDCK1    READEOMLDCL1                  99
     C                     ENDDO                           E01
      *
      *          Always move the OMS libraryname to the end of the table
      *          (if not already exists in the table).
     C                     MOVELP#PGML    W#LB11 11 P
     C                     EXSR SRMOVL
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      *                                                             *
      * SRMOVL - Move the libraryname to table entry.               *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRMOVL    BEGSR
      *
     C           W#LB11    LOKUPLBI                      94
     C           *IN94     IFEQ *OFF                       B01
     C                     ADD  1         IQ
     C           IQ        IFGT NBRLIB                     B02
      *                    Log message
     C                     MOVE 'LIBE015' MSGID
     C                     EXSR SNDMSG
     C                     MOVELC#TERM    P#STAT
     C                     EXSR SRTTLR
     C                     ENDIF                           E02
     C                     MOVELW#LB11    LBI,IQ
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      *                                                             *
      * SRSETL - Set the Compilation library list.                  *  /
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRSETL    BEGSR
      *
     C           W#CALL    IFEQ *BLANKS                    B01
     C           P#PGML    CAT  '/':0     W#CALL
     C           W#CALL    CAT  C#X960:0  W#CALL
     C                     ENDIF                           E01
      *
     C                     MOVE '2'       P1OPTI
     C                     CALL W#CALL    $X960C
      *
      *          ------------------------------------------
      *          Check the result
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     EXSR SRPM01
     C                     EXSR *PSSR
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      /EJECT
      * ----------------------------------------------------------- *
      *                                                             *
      * SRRSTL - Restore the library list.                          *  /
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRRSTL    BEGSR
      *
     C           W#CALL    IFEQ *BLANKS                    B01
     C           P#PGML    CAT  '/':0     W#CALL
     C           W#CALL    CAT  C#X960:0  W#CALL
     C                     ENDIF                           E01
      *
     C                     MOVEALBO       LBI
     C                     MOVE '2'       P1OPTI
     C                     CALL W#CALL    $X960C
      *
      *          ------------------------------------------
      *          Check the result
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     EXSR SRPM01
     C                     EXSR *PSSR
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      *                                                             *
      * SRADDL - Add libraries to compilation library list.         *  /
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRADDL    BEGSR
      *
     C                     Z-ADD1         IQ
      *
     C           LBO,IQ    DOUEQ*BLANKS                    B01
     C           IQ        ORGE NBRLIB
     C                     ADD  1         IQ
     C                     MOVELLBO,IQ    LBI,IQ
     C                     ENDDO                           E01
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ----------------------------------------------------------- *
      * ----------------------------------------------------------- *
      * SRLDTL - check component details processing required        *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRLDTL    BEGSR
      *
      *          ------------------------------------------
      *          Only process if registry entry OMQLDDTLCLASS
      *          is set for at all  system level
      *                     at application level
      *                     at environment level
      *          ------------------------------------------
     C                     MOVE *BLANKS   P@APPC
     C                     MOVE *BLANKS   P#PDLC
     C                     MOVE *BLANKS   P#ROTC
     C                     MOVE *BLANKS   P#PGMN
     C                     MOVELC#LDTL    P#KEYW    P
     C                     MOVE *OFF      A@EOP
     C                     MOVE *BLANKS   A@ERR
     C                     CALL 'OMQRTVSR'$RTVSR
      *
      *          ------------------------------------------
      *          If not found an the system level try application level
      *          ------------------------------------------
     C           A@MSTP    IFNE *BLANK                     B01
     C                     MOVE P#APPC    P@APPC
     C                     CALL 'OMQRTVSR'$RTVSR
      *
      *          ------------------------------------------
      *          If not found an the application level try environment.
      *          ------------------------------------------
     C           A@MSTP    IFNE *BLANK                     B02
     C                     MOVE P#TOPL    P#PDLC
     C                     CALL 'OMQRTVSR'$RTVSR
      *
     C                     ENDIF                           E02
     C                     ENDIF                           E01
      *          ------------------------------------------
      *          Do if enabled for this environment.
      *          ------------------------------------------
     C           A@MSTP    IFEQ *BLANK
     C           A@KEYV    ANDEQ'1'
      *
      *          ------------------------------------------
      *          Set proces ind. CLD to *ON  in O4PRC buffer
      *          ------------------------------------------
     C                     MOVE *ON       O4CLD
      *
      *          ------------------------------------------
      *          No details processing
      *          ------------------------------------------
     C                     ELSE                            X01
     C                     MOVE *OFF      O4CLD
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C           SDTL99    ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * *PSSR  - Error handler                                      *
      *                                                             *
      * Standard RPG error handler.                                 *
      * Make sure the data structure PGM is defined as the          *
      * program status data structure (SDS) with a length of 429.   *
      * The file information data structure is also passed, but     *
      * not the complete data structure, only the relevant info.    *
      * After the program is called, the messages in the queue      *
      * of this program are passes back to the queue of the         *
      * calling program and the *CANCL procedure is invoked.        *
      *                                                             *
      * ----------------------------------------------------------- *
     C           *PSSR     BEGSR
      *
      *          ------------------------------------------
      *LV2       Restore library list
      *          ------------------------------------------
     C           I#CLBL    IFEQ *ON                        B01
     C                     EXSR SRRSTL
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Do if error not in this routine.
      *          ------------------------------------------
     C           I#PSSR    IFNE *ON                        B01
     C                     MOVE *ON       I#PSSR  1
      *
      *          ------------------------------------------
      *          Post information about the last used file
      *          ------------------------------------------
     C                     SELEC                           B02
     C           E#FILE    WHEQ 'OMOBJL8 '                 X02
     C                     MOVELOBJL8     P#FILE
      *
     C           E#FILE    WHEQ 'OMOW3   '                 X02
     C                     MOVELOW3       P#FILE
      *
     C           E#FILE    WHEQ 'OMOW3L1 '                 X02
     C                     MOVELOW3I1     P#FILE
      *
     C           E#FILE    WHEQ 'OMOW3L2 '                 X02
     C                     MOVELOW3I2     P#FILE
      *
     C           E#FILE    WHEQ 'OMEROL1 '                 X02
     C                     MOVELEROL1     P#FILE
      *
     C           E#FILE    WHEQ 'OMEROL7 '                 X02
     C                     MOVELEROL7     P#FILE
      *
     C           E#FILE    WHEQ 'OMEROL3 '                 X02
     C                     MOVELEROL3     P#FILE
      *
     C           E#FILE    WHEQ 'OMEROL4 '                 X02
     C                     MOVELEROL4     P#FILE
      *
     C           E#FILE    WHEQ 'OMERSL1 '                 X02
     C                     MOVELERSL1     P#FILE
      *
     C           E#FILE    WHEQ 'OMLBLL1 '                 X02
     C                     MOVELLBLL1     P#FILE
      *
     C           E#FILE    WHEQ 'OMLBDL1 '                 X02
     C                     MOVELLBDL1     P#FILE
      *
     C           E#FILE    WHEQ 'OMLBDL2 '                 X02
     C                     MOVELLBDL2     P#FILE
      *
     C           E#FILE    WHEQ 'OMLBDL3 '                 X02
     C                     MOVELLBDL3     P#FILE
      *
     C           E#FILE    WHEQ 'OMOBJL4 '                 X02
     C                     MOVELOBJL4     P#FILE
      *
     C           E#FILE    WHEQ 'OMOBJL5 '                 X02
     C                     MOVELOBJL5     P#FILE
      *
     C           E#FILE    WHEQ 'OMOBJL7 '                 X02
     C                     MOVELOBJL7     P#FILE
      *
     C           E#FILE    WHEQ 'OMMBRL1 '                 X02
     C                     MOVELMBRL1     P#FILE
      *
     C           E#FILE    WHEQ 'OMDMPL1 '                 X02
     C                     MOVELDMPL1     P#FILE
      *
     C           E#FILE    WHEQ 'OMDMPL2 '                 X02
     C                     MOVELDMPL2     P#FILE
      *
     C           E#FILE    WHEQ 'OMFBC   '                 X02
     C                     MOVELFBC       P#FILE
      *
     C           E#FILE    WHEQ 'OMFLB   '                 X02
     C                     MOVELFLB       P#FILE
      *
     C           E#FILE    WHEQ 'OMLOG   '                 X02
     C                     MOVELLOG       P#FILE
      *
     C           E#FILE    WHEQ 'OMOVCL1 '                 X02
     C                     MOVELOVCL1     P#FILE
      *
     C           E#FILE    WHEQ 'OMOVCL2 '                 X02
     C                     MOVELOVCL2     P#FILE
      *
     C           E#FILE    WHEQ 'OMOVCL3 '                 X02
     C                     MOVELOVCL3     P#FILE
      *
     C           E#FILE    WHEQ 'OMOVCL5 '                 X02
     C                     MOVELOVCL5     P#FILE
      *
     C           E#FILE    WHEQ 'OMXFUL1 '                 X02
     C                     MOVELXFUL1     P#FILE
      *
     C           E#FILE    WHEQ 'OMXFUL2 '                 X02
     C                     MOVELXFUL2     P#FILE
      *
     C           E#FILE    WHEQ 'OMSEQL3 '                 X02
     C                     MOVELSEQL3     P#FILE
      *
     C           E#FILE    WHEQ 'OMAIFL2 '                 X02
     C                     MOVELAIFL2     P#FILE
      *
     C           E#FILE    WHEQ 'OMAPPL1 '                 X02
     C                     MOVELAPPL1     P#FILE
      *
     C           E#FILE    WHEQ 'OMOTDL2 '                 X02
     C                     MOVELOTDL2     P#FILE
      *
     C           E#FILE    WHEQ 'OMOW3L9 '                 X02
     C                     MOVELOW3L9     P#FILE
      *
     C           E#FILE    WHEQ 'OMFCRL1 '                 X02
     C                     MOVELFCRL1     P#FILE
      *
     C           E#FILE    WHEQ 'OMHFSL1 '                 X02
     C                     MOVELHFSL1     P#FILE
      *
     C           E#FILE    WHEQ 'OMLOAL1 '                 X02
     C                     MOVELLOAL1     P#FILE
      *
     C           E#FILE    WHEQ 'OMPDLL1 '                 X02
     C                     MOVELPDLL1     P#FILE
      *
     C           E#FILE    WHEQ 'OMIOPL1 '                 X02
     C                     MOVELIOPL1     P#FILE
      *
     C           E#FILE    WHEQ 'OMIONL1 '                 X02
     C                     MOVELIONL1     P#FILE
      *
     C           E#FILE    WHEQ 'OMRTLL3 '                 X02
     C                     MOVELRTLL3     P#FILE
      *
     C           E#FILE    WHEQ 'OMRTLL5 '                 X02
     C                     MOVELRTLL5     P#FILE
      *
     C           E#FILE    WHEQ 'OMLLCL1 '                 X02
     C                     MOVELLLCL1     P#FILE
      *
     C           E#FILE    WHEQ 'OMLDCL1 '                 X02
     C                     MOVELLDCL1     P#FILE
      *
     C           E#FILE    WHEQ 'OMO001W4'                 X02
     C                     MOVELOW4       P#FILE
      *
     C                     ENDSL                           E02
      *
      *          ------------------------------------------
      *          Call the error handler
      *          ------------------------------------------
     C                     CALL 'OMX961'
     C                     PARM           PGM
     C                     PARM           P#FILE 57
      *
      *          ------------------------------------------
      *          Move the messages to the queue of the caller
      *          ------------------------------------------
     C                     MOVEL'*COMP'   P#MSTA 40
     C           P#MSTA    CAT  '*DIAG':5 P#MSTA
     C           P#MSTA    CAT  '*ESCA':5 P#MSTA
     C           P#MSTA    CAT  'PE':0    P#MSTA
     C           P#MSTA    CAT  '*INFO':3 P#MSTA
     C                     CALL 'QMHMOVPM'
     C                     PARM *BLANKS   P#MSKC
     C                     PARM           P#MSTA
     C                     PARM 4         P#LOB#
     C                     PARM '*'       P#PMQC
     C                     PARM 1         P#PSC#
     C                     PARM           P#ERR
      *
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Exit.
      *          ------------------------------------------
     C                     MOVE C#TERM    P#STAT
     C                     EXSR SRTTLR
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ------------------------------------------------------------ *
      * SRCMRQ  -  Version Conflict Confirmation Required            *
      *                                                              *
      * This subroutine sets the I#CMRQ indicator:                   *
      *  *ON  - Version Conflict Confirmation is active              *
      *  *OFF - Version Conflict Confirmation is not active          *
      *                                                              *
      * If data-area OMCVC is not found, I#CMRQ is set off           *
      *                                                              *
      * ------------------------------------------------------------ *
     C           SRCMRQ    BEGSR
     C                     IN   OMCVC                  99
     C   99                MOVE *OFF      I#CMRQ
     C  N99                MOVE D#CMRQ    I#CMRQ
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SRTTLR - Total last record processing                       *
      *                                                             *
      * This routine sets the last record indicator on.             *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRTTLR    BEGSR
      *
      *          ------------------------------------------
      *          Seton last record
      *          ------------------------------------------
     C                     SETON                     LR
     C                     RETRN
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ----------------------------------------------------------- *
      /EJECT
      * ----------------------------------------------------------- *
      * SRPM01 - Send program message to caller.                    *
      *                                                             *
      * This routine sends a program message to OMA005. The message *
      * controls the handling of the deeper relations.              *
      *                                                             *
      * ----------------------------------------------------------- *
     C           SRPM01    BEGSR
      *
      *          ------------------------------------------
      *          Do it.
      *          ------------------------------------------
     C                     MOVE '00'      M#OPTI
     C                     MOVE *BLANKS   M#OBJC
     C                     MOVE *BLANKS   M#OBJT
     C                     MOVE *BLANKS   M#OBJL
     C                     MOVE *BLANKS   M#MBRC
     C                     MOVE *BLANKS   M#PRCN
     C                     MOVEL'OMO001_2'M#PGMC    P
      *
     C                     CALL 'QMHSNDPM'
     C                     PARM 'OBJE013' MSGID
     C                     PARM C#OMSG    P#MSGQ
     C                     PARM           D#RQST
     C                     PARM 117       P#LOB#
     C                     PARM '*INFO'   P#MSTC
     C                     PARM 'OMO001'  P#PMQC
     C                     PARM 1         P#PSC#
     C                     PARM *BLANKS   P#MSKC
     C                     PARM           P#ERR
      *
      *          ------------------------------------------
      *          End of subroutine
      *          ------------------------------------------
     C                     ENDSR
      * ------------------------------------------------------------ *
      /EJECT
      * ----------------------------------------------------------- *
      * *INZSR - Program initialization routine.                    *
      *                                                             *
      * ----------------------------------------------------------- *
     C           *INZSR    BEGSR
      *
      *          ------------------------------------------
      *          Define array index variables.
      *          ------------------------------------------
     C                     Z-ADD*ZEROS    IK      90
     C                     Z-ADD*ZEROS    IQ      90
     C                     Z-ADD*ZEROS    IS      50
     C                     Z-ADD*ZEROS    IX      50
     C                     Z-ADD*ZEROS    IY      50
     C                     Z-ADD*ZEROS    IW      50
     C                     Z-ADD*ZEROS    IV      50
     C                     Z-ADD*ZEROS    IT      50
     C                     Z-ADD999       IP      50
     C                     Z-ADD*ZEROS    IZ      50
     C                     Z-ADD*ZEROS    S#IX    50
     C                     Z-ADD*ZEROS    S#IY    50
     C                     Z-ADD*ZEROS    S#IX2   50
     C                     Z-ADD*ZEROS    S#IY2   50
     C                     Z-ADD*ZEROS    AC      50
      *
     C                     Z-ADD*ZEROS    WX      50
     C                     Z-ADD*ZEROS    FX      50
     C                     Z-ADD*ZEROS    FY      50
     C                     Z-ADD*ZEROS    SX      50
     C                     Z-ADD*ZEROS    TX      50
      *
      *          ------------------------------------------
      *          Define workfields
      *          ------------------------------------------
     C           *LIKE     DEFN PDLC      W#EPDL
     C           *LIKE     DEFN PDLC      W#PPDL
     C           *LIKE     DEFN MUTC      W#MUTC
     C           *LIKE     DEFN *IN99     W#EXCT           Normal execut.
     C           *LIKE     DEFN *IN99     W#LBLE
     C           *LIKE     DEFN *IN99     W#LBLW
     C           *LIKE     DEFN EXCI      W#EXCI
     C           *LIKE     DEFN OBJC      W#OBJC                       t.
     C           *LIKE     DEFN OBJT      W#OBJT                       t.
     C           *LIKE     DEFN MBRC      W#MBRC                       t.
     C           *LIKE     DEFN OBJC      W#CNPF                       t.
     C           *LIKE     DEFN OBJL      W#CNPL                       t.
     C           *LIKE     DEFN VRS#      W#VRS#                       t.
     C           *LIKE     DEFN MOD#      W#MOD#                       t.
     C           *LIKE     DEFN OBJL      W#FLBL           Fallback libt.
     C           *LIKE     DEFN OBJC      W#REFC
     C           *LIKE     DEFN OBJL      W#REFL
     C           *LIKE     DEFN OBJT      W#REFT
     C           *LIKE     DEFN PDLC      W#REFP
     C           *LIKE     DEFN W3SEQ#    W#REFS
     C           *LIKE     DEFN CATS      W#SCPL
     C           *LIKE     DEFN CATS      W#SCPH
     C           *LIKE     DEFN FLRC      W#FFLR
     C           *LIKE     DEFN FLRC      W#TFLR
     C           *LIKE     DEFN SEQ#      W#FPL#
     C           *LIKE     DEFN SEQ#      W#TPL#
     C           *LIKE     DEFN PDLC      W#FRPL
     C           *LIKE     DEFN APPC      W#APPC
     C                     Z-ADD*ZEROS    W#NOTF  30
     C                     Z-ADD999       W#FMAX  50       max # fixes
     C                     Z-ADD999       W#FCUR  50       cur # fixes
     C                     Z-ADD999       W#PMAX  50       max # pgmrs
     C                     Z-ADD999       W#PCUR  50       cur # pgmrs
     C                     Z-ADD999       W#PF#   50       PF processed
     C                     Z-ADD*ZERO     W#DOC#  50       docs proc.
     C                     Z-ADD*ZERO     W#IFS#  50       ifs proc.
     C                     MOVE *BLANKS   W#MTHD  5        creation method
     C                     MOVE *BLANKS   W#CALL 21
     C                     Z-ADD*ZEROS    W#LIB@  90
      *
      *          ------------------------------------------
      *          Define savefields
      *          ------------------------------------------
     C           *LIKE     DEFN PDLC      S#FRPL
     C           *LIKE     DEFN PDLC      S#TOPL
     C           *LIKE     DEFN *IN99     S#DRCT
     C           *LIKE     DEFN SEQ#      S#FRPS
     C           *LIKE     DEFN SEQ#      S#TOPS
     C           *LIKE     DEFN PDLC      S#PDLC
     C           *LIKE     DEFN OBJC      S#OBJC
     C           *LIKE     DEFN OBJL      S#OBJL
     C           *LIKE     DEFN OBJL      S#FROL
     C           *LIKE     DEFN OBJT      S#OBJT
     C           *LIKE     DEFN OBJA      S#OBJA
     C           *LIKE     DEFN MBRC      S#MBRC
     C           *LIKE     DEFN OCLS      S#OCLS
     C           *LIKE     DEFN SRCF      S#SRCF
     C           *LIKE     DEFN SRCL      S#SRCL
     C           *LIKE     DEFN SRCM      S#SRCM
     C           *LIKE     DEFN SRCS      S#SRCS
     C           *LIKE     DEFN SRCX      S#SRCX
     C           *LIKE     DEFN SRCX      S#TSRX
     C           *LIKE     DEFN SRCF      S#TSRF
     C           *LIKE     DEFN SRCL      S#TSRL
     C           *LIKE     DEFN SRCM      S#TSRM
     C           *LIKE     DEFN OBJL      S#TOOL
     C           *LIKE     DEFN STAT      S#SGRP                       t.
     C           *LIKE     DEFN SRTC      S#SRTC                       t.
     C           *LIKE     DEFN OBJL      S#RCPF           rcrt by pf
     C           *LIKE     DEFN OBJL      S#RCPL           rcrt pf-lib
     C           *LIKE     DEFN SMLC      S#T4GL
     C           *LIKE     DEFN *IN99     S#DSTR           Distr. recs
     C           *LIKE     DEFN *IN99     S#NEXT           Distr. recs
     C           *LIKE     DEFN *IN99     S#EXCT           Normal exec.
     C           *LIKE     DEFN APPC      S#APPC
     C           *LIKE     DEFN MBRA      S#MBRA
     C           *LIKE     DEFN MBRD      S#MBRD
     C           *LIKE     DEFN VRS#      S#VRSR
     C           *LIKE     DEFN MOD#      S#MODR
     C           *LIKE     DEFN LIBC      S#LIBR
     C           *LIKE     DEFN W3SEQ#    S#SEQF           First libl#
     C           *LIKE     DEFN W3SEQ#    S#SEQC           Curr. libl#
     C           *LIKE     DEFN W3SEQ#    S#SEQN           Next  libl#
     C           *LIKE     DEFN W3SEQ#    S#SEQ1           1st local
     C           *LIKE     DEFN W3SEQ#    S#SEQL           1st local
     C           *LIKE     DEFN *IN99     S#IN99
     C           *LIKE     DEFN *IN99     S#EXCI           Temp found
     C           *LIKE     DEFN FIX#      S#FIX#
     C           *LIKE     DEFN PGMR      S#PGMR
     C           *LIKE     DEFN OBJL      S#DTLL
     C           *LIKE     DEFN MBRC      S#DTLM
     C           *LIKE     DEFN OBJL      S#DTLF
     C           *LIKE     DEFN OBJT      S#DTLT
     C           *LIKE     DEFN OBJA      S#KPOA
     C           *LIKE     DEFN OBJT      S#KPOT
     C           *LIKE     DEFN OBJL      S#KPOL
     C           *LIKE     DEFN PDLC      S#KPPL
     C           *LIKE     DEFN *IN99     S#KEEP
      *
     C                     MOVE *BLANK    W#XSPC  6                    t.
     C                     Z-ADD*ZERO     S#XSEL  30
     C                     Z-ADD*ZERO     W#XW3L  30
     C           *LIKE     DEFN OBJC      W#XW3F
     C           *LIKE     DEFN OBJC      W#OBCL
     C           *LIKE     DEFN OBJC      W#OBCH
     C           *LIKE     DEFN XFUC      W#XFUC
     C           *LIKE     DEFN S#XSEL    S#XSE1
     C           *LIKE     DEFN S#XSEL    S#XSE3
     C           *LIKE     DEFN S#XSEL    S#XSE5
     C           *LIKE     DEFN S#XSEL    S#XSE7
     C           *LIKE     DEFN S#XSEL    S#XSE8
     C           *LIKE     DEFN S#XSEL    S#XSE9
     C           *LIKE     DEFN XUEP      S#XUEP
     C           *LIKE     DEFN XPSQ      S#XPSQ
     C           *LIKE     DEFN *IN99     S#LF
     C           *LIKE     DEFN *IN99     S#PF
     C           *LIKE     DEFN *IN99     S#PFFB
     C           *LIKE     DEFN *IN99     S#FLBI
     C           *LIKE     DEFN *IN99     S#MORE
      *
      *          ------------------------------------------
      *          Define indicator fields
      *          ------------------------------------------
     C           *LIKE     DEFN *IN99     EOF
     C           *LIKE     DEFN *IN99     FOUND
     C           *LIKE     DEFN *IN99     KEEP
     C           *LIKE     DEFN *IN99     KEEPTP
     C           *LIKE     DEFN *IN99     KEEPAL
     C           *LIKE     DEFN *IN99     ERROR
     C           *LIKE     DEFN *IN99     XEOF
     C           *LIKE     DEFN *IN99     I#XKEY
     C           *LIKE     DEFN *IN99     I#ASET
     C           *LIKE     DEFN *IN99     I#SYN
     C           *LIKE     DEFN *IN99     I#LAN
     C           *LIKE     DEFN *IN99     I#LDEP
     C           *LIKE     DEFN *IN99     I#SRCC
     C           *LIKE     DEFN *IN99     I#OBJC
     C           *LIKE     DEFN *IN99     I#OBJR
     C           *LIKE     DEFN *IN99     I#FLBC           Fallback crt
     C           *LIKE     DEFN *IN99     I#DOCC           FLB doc  crt
     C           *LIKE     DEFN *IN99     I#IFSC           FLB IFS  crt
     C           *LIKE     DEFN *IN99     I#FBCF           OMFBC crt
     C           *LIKE     DEFN *IN99     I#FLBF           OMFLB open
     C           *LIKE     DEFN *IN99     I#QW3
     C           *LIKE     DEFN *IN99     I#QLBL
     C           *LIKE     DEFN *IN99     I#QPGM
     C           *LIKE     DEFN *IN99     I#RCRT
     C           *LIKE     DEFN *IN99     I#CRIT
     C           *LIKE     DEFN *IN99     I#RSTR           Restart
     C           *LIKE     DEFN *IN99     I#KPW3           Keep W3
     C           *LIKE     DEFN *IN99     I#OLOG
     C           *LIKE     DEFN *IN99     I#OHFS
     C           *LIKE     DEFN *IN99     I#OIFS
     C           *LIKE     DEFN *IN99     I#OFLB
     C           *LIKE     DEFN *IN99     I#OLOA
     C           *LIKE     DEFN *IN99     I#ORTL
     C           *LIKE     DEFN *IN99     I#OFU2
     C           *LIKE     DEFN *IN99     I#OBJ7
     C           *LIKE     DEFN *IN99     I#EXIS
     C           *LIKE     DEFN *IN99     I#RCVM
     C           *LIKE     DEFN *IN99     I#X303
     C           *LIKE     DEFN *IN99     I#X304
     C           *LIKE     DEFN *IN99     I#C007
     C           *LIKE     DEFN *IN99     I#PFER           PF in error
     C           *LIKE     DEFN *IN99     I#LDUP           CRTDUPOBJ LF
     C           *LIKE     DEFN *IN99     I#FRTO           FROL=TOOL
     C           *LIKE     DEFN *IN99     I#OPW4           Open W4
     C           *LIKE     DEFN *IN99     I#DSTA
     C           *LIKE     DEFN *IN99     I#FRST
     C           *LIKE     DEFN *IN99     I#CRII
     C           *LIKE     DEFN *IN99     I#OVCI            SOL CONFLIC
     C           *LIKE     DEFN *IN99     I#VRWI
     C           *LIKE     DEFN *IN99     I#OVC1            OPEN OMOVCL1
     C           *LIKE     DEFN *IN99     I#OVC             OPEN OMOVCL2
     C           *LIKE     DEFN *IN99     I#CLBL
     C           *LIKE     DEFN *IN99     I#CVER            ERROR ON ACT,3
     C           *LIKE     DEFN D#CMRQ    I#CMRQ
     C                     MOVE *OFF      I#CVER
      *
      *          ------------------------------------------
     C           *NAMVAR   DEFN           OMCVC
      *          ------------------------------------------
      *          Keyfield definition
      *          ------------------------------------------
     C           *LIKE     DEFN LSQ#      K#LSQ#
     C           *LIKE     DEFN PDLC      K#PDLC
     C           *LIKE     DEFN OBJT      K#FILE
     C           *LIKE     DEFN OBJL      K#OBJL
     C           *LIKE     DEFN OBJL      K#FROL
     C           *LIKE     DEFN OBJC      K#OBJC
     C           *LIKE     DEFN OBJT      K#OBJT
     C           *LIKE     DEFN OBJA      K#OBJA
     C           *LIKE     DEFN SRCL      K#SRCL
     C           *LIKE     DEFN SRCF      K#SRCF
     C           *LIKE     DEFN SRCM      K#SRCM
     C           *LIKE     DEFN OBJC      K#ROBC
     C           *LIKE     DEFN OBJT      K#ROBT
     C           *LIKE     DEFN OBJL      K#ROBL
     C           *LIKE     DEFN MBRC      K#MBRC
     C           *LIKE     DEFN XFUC      K#XFUC
     C           *LIKE     DEFN SMDL      K#SMDL
     C           *LIKE     DEFN AUTC      K#AUTC
     C           *LIKE     DEFN USID      K#USID
     C           *LIKE     DEFN APPC      K#APPC
     C           *LIKE     DEFN APPC      K#EAPC
     C           *LIKE     DEFN APPC      K#IAPC
     C           *LIKE     DEFN VRS#      K#VRS#
     C           *LIKE     DEFN MOD#      K#MOD#
     C           *LIKE     DEFN XUEP      K#XUEP
     C           *LIKE     DEFN TFRC      K#TFRC
     C           *LIKE     DEFN TSB#      K#TSB#
     C           *LIKE     DEFN TKY1      K#TKY1
     C           *LIKE     DEFN TKY2      K#TKY2
     C           *LIKE     DEFN SRTC      K#SRTC
     C           *LIKE     DEFN W3SEQ#    K#SEQ3
     C           *LIKE     DEFN OCLS      K#OCLS
      *
      *          ------------------------------------------
      *          Define parameter list fields
      *          ------------------------------------------
     C           *LIKE     DEFN ROTC      P#ROTC
     C           *LIKE     DEFN PGMN      P#PGMN
     C           *LIKE     DEFN KEYW      P#KEYW
     C           *LIKE     DEFN OBJC      P#CHKT
     C           *LIKE     DEFN *IN99     P#APRI           Actions Prc.
     C           *LIKE     DEFN *IN99     P#CRAI           Crit. Action
     C           *LIKE     DEFN *IN99     P#CFLR           Create folder Y/N
     C           *LIKE     DEFN *IN99     P#CDIR           Create directory Y/N
     C           *LIKE     DEFN APPC      P#APPC
     C           *LIKE     DEFN PDLC      P#FRPL
     C           *LIKE     DEFN PDLC      P#TOPL
     C           *LIKE     DEFN APNM      P#APNM
     C           *LIKE     DEFN CONM      P#CONM
     C           *LIKE     DEFN GL4N      P#GL4N
     C           *LIKE     DEFN OCLS      P#OCLS
     C           *LIKE     DEFN AUTC      P#AUTC
     C           *LIKE     DEFN STAT      X#STAT
      *
     C           *LIKE     DEFN SRCL      P#SRCL
     C           *LIKE     DEFN SRCF      P#SRCF
     C           *LIKE     DEFN SRCM      P#SRCM
     C           *LIKE     DEFN SRCL      P#TSCL
     C           *LIKE     DEFN SRCF      P#TSCF
     C           *LIKE     DEFN SRCM      P#TSCM
      *
     C           *LIKE     DEFN OBJL      P#FLBL           Fallback libt.
     C           *LIKE     DEFN LIBC      P#LIBC
     C           *LIKE     DEFN OBJL      P#FOBL
     C           *LIKE     DEFN OBJL      P#TOBL
     C           *LIKE     DEFN OBJL      P#OBJL
     C           *LIKE     DEFN OBJL      P#ODBL
     C           *LIKE     DEFN OBJL      P#FROL
      *
     C           *LIKE     DEFN FLRC      P#FLRC
     C           *LIKE     DEFN FLRC      P#TFLC
      *
     C           *LIKE     DEFN OBJC      P#OBJC
     C           *LIKE     DEFN OBJC      P#FOBC
     C           *LIKE     DEFN OBJC      P#TOBC
     C           *LIKE     DEFN MBRC      P#MBRC
     C           *LIKE     DEFN MBRC      P#DTLC
     C           *LIKE     DEFN MBRA      P#MBRA
     C           *LIKE     DEFN MBRD      P#MBRD
     C           *LIKE     DEFN OBJC      P#RNMC
     C           *LIKE     DEFN OBJC      P#REFC
     C           *LIKE     DEFN OBJL      P#REFL
     C           *LIKE     DEFN OBJT      P#REFT
      *
     C           *LIKE     DEFN OBJT      P#OBJT
     C           *LIKE     DEFN OBJT      P#FOBT
     C           *LIKE     DEFN OBJT      P#TOBT
      *
     C           *LIKE     DEFN JOBN      P#JOBN
     C           *LIKE     DEFN JOB#      P#JOB#
      *
     C           *LIKE     DEFN APPC      P@APPC
     C           *LIKE     DEFN PDLC      P#PDLC
     C           *LIKE     DEFN OBJA      P#OBJA
     C           *LIKE     DEFN STAT      P#STAT
     C           *LIKE     DEFN PRCI      P#PRCI
     C           *LIKE     DEFN CNVT      P#CNVT
     C           *LIKE     DEFN USRI      P#USRI
      *
     C           *LIKE     DEFN PRCS      P#PRCS
     C           *LIKE     DEFN AWHN      P#AWHN
     C           *LIKE     DEFN AWHR      P#AWHR
     C           *LIKE     DEFN DIRC      P#DIRC
      *
     C                     MOVE *BLANKS   P#FREE256
      *
     C           *LIKE     DEFN *IN99     P#OPTI
     C           *LIKE     DEFN INDI      P1OPTI
     C           *LIKE     DEFN *IN99     P#COMO
     C           *LIKE     DEFN *IN99     P#UPDI
     C           *LIKE     DEFN *IN99     P#RMTI
     C           *LIKE     DEFN MSGN      P#MSGN
     C           *LIKE     DEFN MSGF      P#MSGF
     C           *LIKE     DEFN PDLC      P#ROFS
     C           *LIKE     DEFN ERR#      P#ROF#
     C           *LIKE     DEFN ERR#      P#ERR#
     C           *LIKE     DEFN ERRB      P#ERRN
     C           *LIKE     DEFN USDF      P#USDF
     C           *LIKE     DEFN EXCI      P#EXCI
     C           *LIKE     DEFN SRCX      P#SRCX
     C           *LIKE     DEFN SRCX      P#CHGX
     C           *LIKE     DEFN USID      P#USID
     C           *LIKE     DEFN OBJD      P#OBJD
     C           *LIKE     DEFN FIX#      P#FIX#
     C           *LIKE     DEFN VRS#      P#VRS#
     C           *LIKE     DEFN MOD#      P#MOD#
     C           *LIKE     DEFN XFUN      P#XFUN
     C           *LIKE     DEFN RLS#      P#RLS#
     C           *LIKE     DEFN RELI      P#RELI
     C           *LIKE     DEFN SRCX      W#SRCX
     C           *LIKE     DEFN SRCX      W#SRCO
     C           *LIKE     DEFN SRCX      W#OBJX
     C           *LIKE     DEFN SRCX      W#OBJO
     C           *LIKE     DEFN OBJL      W#XCMD
     C           *LIKE     DEFN OBJL      W#XVAL
     C           *LIKE     DEFN OBJL      P#PGML
     C                     MOVE *BLANK    W#XKEY  7
     C                     Z-ADD*ZERO     W#CMDL  50
     C                     Z-ADD*ZERO     W#VARL  50
     C                     Z-ADD*ZERO     S#XBFX  50
     C                     Z-ADD*ZERO     S#XEFX  50
     C                     Z-ADD*ZERO     RRNW3   70
      *
     C                     Z-ADD*ZERO     P#CMDL 155
     C                     MOVE *BLANKS   P#ACTI  5
     C           *LIKE     DEFN OBJL      P#JRN
     C           *LIKE     DEFN OBJL      P#JRNL
     C           *LIKE     DEFN OBJL      P#SAVF
     C           *LIKE     DEFN LSQ#      P#LSQ#
     C           *LIKE     DEFN SEQ#      P#SEQ#
     C           *LIKE     DEFN DEVC      P#DEVC
     C                     MOVE *BLANK    P#JRNA  4
     C                     MOVE *BLANK    P#IMAG  6
     C                     MOVE *BLANK    P#OMIT  7
      *
     C           *LIKE     DEFN INDI      P#LOG
     C           *LIKE     DEFN INDI      P#DSP
      *
      *          ------------------------------------------
      *          Other API Parameter Definition
      *          ------------------------------------------
      /COPY QAPISRC,DEFOTHER
      *
      *          ------------------------------------------
      *          Parameter list for DMD001C (Distribute objects)
      *          ------------------------------------------
     C           $D001C    PLIST
     C                     PARM           P#TFRC
     C                     PARM           P#APPC
     C                     PARM           P#FRPL
     C                     PARM           P#TOPL
     C                     PARM           P#ODBL
     C                     PARM           P#FIX#
     C                     PARM           P#ERR#
     C                     PARM           P#RLS#
     C                     PARM           P#GL4N
     C                     PARM           P#OCLS
     C                     PARM           P#CFLR
     C                     PARM           P#CDIR
     C                     PARM           P#STAT
     C                     PARM           W#ADC            address dist
     C                     PARM           W#ANDC           address not
      *
      *          ------------------------------------------
      *          Parameter list for OMC007 (Action selection)
      *          ------------------------------------------
     C           $MC007    PLIST
     C                     PARM           P#PRCS
     C                     PARM '0'       P#AWHN
     C                     PARM '0'       P#AWHR
     C                     PARM           P#DIRC
     C                     PARM           W3XBUF
     C                     PARM           P#CRAI
     C                     PARM           P#APRI
     C                     PARM C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OME003C
      *          ------------------------------------------
     C           $E003C    PLIST
     C                     PARM           D#XCO
     C                     PARM           P#CMDL
     C                     PARM C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX001 (Get system info)
      *          ------------------------------------------
     C           $X001     PLIST
     C                     PARM '3'       P#OPTI
     C                     PARM           P#APPC
     C                     PARM '2'       P#AUTC
     C                     PARM           P#STAT
     C                     PARM           OMSDT1
     C                     PARM           OMSDT2
     C                     PARM           OMSDT3
      *
      *          ------------------------------------------
      *          Parameter list for OMX005C (Retrieve OS/400 Release)
      *          ------------------------------------------
     C           $MX005    PLIST
     C                     PARM           P#OSR#
     C                     PARM           P#SRN#  8
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list OMX022 Get file relations
      *          ------------------------------------------
     C           $X022     PLIST
     C                     PARM           P#OBJC
     C                     PARM           P#OBJL
     C                     PARM           P#OBJA
     C                     PARM           P#LFR
     C                     PARM           P#STAT
     C           $X022P    PLIST
     C                     PARM           P#OBJC
     C                     PARM           P#OBJL
     C                     PARM           P#OBJA
     C                     PARM           P#PFR
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list OMX032 ILE processing
      *          ------------------------------------------
     C           $MX032    PLIST
     C                     PARM           W3APPC
     C                     PARM           W3TOPL
     C                     PARM           W3OBJC
     C                     PARM           W3TOOL
     C                     PARM           W3OBJT
     C                     PARM           W3OBJA
     C                     PARM '1'       P#LOG
     C                     PARM '0'       P#DSP
     C                     PARM C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Parse chgvaroms command.
      *          ------------------------------------------
     C           $MX303    PLIST
     C                     PARM           P#W3RC
     C                     PARM FUXFUN    P#XFUN
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          OMX304, substitute values in command.
      *          ------------------------------------------
     C           $MX304    PLIST
     C                     PARM FUXFUN    P#XFUN
     C                     PARM           D#XCO
     C                     PARM           P#W3RC
     C                     PARM 0         P#CMDL
     C                     PARM C#NORM    P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX401  (IFS retrieve object)
      *          ------------------------------------------
     C           $MX401    PLIST
     C                     PARM 5000      P#PTH#  50
     C                     PARM           IOB
     C                     PARM           D#FINF
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX405C (Delete IFS object)
      *          ------------------------------------------
     C           $X405C    PLIST
     C                     PARM 640       P#PTH#  50
     C                     PARM           W#TFPC
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX406C (Copy IFS object)
      *          ------------------------------------------
     C           $X406C    PLIST
     C                     PARM           W#FDIR
     C                     PARM           W#TDIR
     C                     PARM           IO1
     C                     PARM           P#CHKT
     C                     PARM           P#STAT
      *
     C           $X407C    PLIST
     C                     PARM           W#TDIR
     C                     PARM           P#IDRC
     C                     PARM           IO1
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX408C (create folder)
      *          ------------------------------------------
     C           $X408C    PLIST
     C                     PARM           P#IDRC
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX409C (delete directory)
      *          ------------------------------------------
     C           $X409C    PLIST
     C                     PARM           P#IDRC
     C                     PARM *ON       P#OPTI
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX410C (save folder)
      *          ------------------------------------------
     C           $X410C    PLIST
     C                     PARM           P#IDRC
     C                     PARM           P#SAVF
     C                     PARM PPFBLC    P#FLBL
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX805C (delete DOC)
      *          ------------------------------------------
     C           $X805C    PLIST
     C                     PARM           P#OBJC
     C                     PARM           P#FLRC
     C                     PARM           P#OBJT
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX807C (copy DOC)
      *          ------------------------------------------
     C           $X807C    PLIST
     C                     PARM           P#OBJC
     C                     PARM           P#FLRC
     C                     PARM           P#OBJT
     C                     PARM           P#OBJA
     C                     PARM           P#TFLC
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX808C (create folder)
      *          ------------------------------------------
     C           $X808C    PLIST
     C                     PARM W#FLBL    P#OBJC
     C                     PARM C#NONE    P#FLRC
     C                     PARM           W3TOOL
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX809C (delete folder)
      *          ------------------------------------------
     C           $X809C    PLIST
     C                     PARM W#FLBL    P#OBJC
     C                     PARM C#NONE    P#FLRC
     C                     PARM *ON       P#OPTI
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX810C (save folder)
      *          ------------------------------------------
     C           $X810C    PLIST
     C                     PARM W#FLBL    P#OBJC
     C                     PARM C#NONE    P#FLRC
     C                     PARM           P#SAVF
     C                     PARM PPFBLC    P#FLBL
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX812C (move DOC)
      *          ------------------------------------------
     C           $X812C    PLIST
     C                     PARM           P#OBJC
     C                     PARM           P#FLRC
     C                     PARM           P#TFLC
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX813C (check DOC)
      *          ------------------------------------------
     C           $X813C    PLIST
     C                     PARM           P#OBJC
     C                     PARM           P#FLRC
     C                     PARM           P#OBJT
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX901C (send message)
      *          ------------------------------------------
     C           $X901C    PLIST
     C                     PARM           MSGID   7
     C                     PARM           MSGF   10
     C                     PARM '*LIBL'   MSGLIB 10
     C                     PARM           MSGDTA
      *
      *          ------------------------------------------
      *          Parameter list for OMX909C (Check object)
      *          ------------------------------------------
     C           $X909C    PLIST
     C                     PARM           P#OBJL
     C                     PARM           P#OBJC
     C                     PARM           P#MBRC
     C                     PARM           P#OBJT
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX914C (delete object)
      *          ------------------------------------------
     C           $X914C    PLIST
     C                     PARM           P#OBJC
     C                     PARM           P#OBJL
     C                     PARM           P#OBJT
     C                     PARM           P#OBJA
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX918C (Dump source member)
      *          ------------------------------------------
     C           $X918C    PLIST
     C                     PARM           P#SRCF
     C                     PARM           P#SRCL
     C                     PARM           P#SRCM
     C                     PARM           P#TSCF
     C                     PARM           P#TSCL
     C                     PARM           P#TSCM
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX921C (copy object)
      *          ------------------------------------------
     C           $X921C    PLIST
     C                     PARM           P#OBJC
     C                     PARM           P#FOBL
     C                     PARM           P#OBJT
     C                     PARM           P#OBJA
     C                     PARM           P#TOBL
     C                     PARM           P#CNVT
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX922C (copy source)
      *          ------------------------------------------
     C           $X922C    PLIST
     C                     PARM           P#SRCL
     C                     PARM           P#SRCF
     C                     PARM           P#SRCM
     C                     PARM           P#TSCL
     C                     PARM           P#TSCF
     C                     PARM           P#TSCM
     C                     PARM           P#SRCX
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX923C (delete source member)
      *          ------------------------------------------
     C           $X923C    PLIST
     C                     PARM           P#OBJL
     C                     PARM           P#OBJC
     C                     PARM           P#DTLC
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX924C (convert data)
      *          ------------------------------------------
     C           $X924C    PLIST
     C                     PARM           P#FOBC
     C                     PARM           P#FOBL
     C                     PARM           P#FOBT
     C                     PARM           P#TOBC
     C                     PARM           P#TOBL
     C                     PARM           P#TOBT
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX925C (create logical)
      *          ------------------------------------------
     C           $X925C    PLIST
     C                     PARM           P#OBJC
     C                     PARM           P#OBJL
     C                     PARM           P#SRCL
     C                     PARM           P#SRCF
     C                     PARM           P#SRCM
     C                     PARM           P#TFRC
     C                     PARM W#FLBL    P#FLBL
     C                     PARM           P#FROL
     C                     PARM S#SEQC    P#LSQ#
     C                     PARM           LLA
     C                     PARM           IV
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX930C (Set authority)
      *          ------------------------------------------
     C           $X930C    PLIST
     C                     PARM           P#OBJC
     C                     PARM           P#OBJL
     C                     PARM           P#OBJT
     C                     PARM           P#REFC
     C                     PARM           P#REFL
     C                     PARM           P#REFT
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX932C (External conversion)
      *          ------------------------------------------
     C           $X932C    PLIST
     C                     PARM           W3FRPL
     C                     PARM           P#FOBC
     C                     PARM           P#FOBL
     C                     PARM           W3TOPL
     C                     PARM           P#TOBC
     C                     PARM           P#TOBL
     C                     PARM           W3PGMN
     C                     PARM           W3PGML
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX940 (Set status)
      *          ------------------------------------------
     C           $MX940    PLIST
     C                     PARM           P#OPTI
     C                     PARM           P#APPC
     C                     PARM           W3FIX#
     C                     PARM           P#ROFS
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX941C (create Physical)
      *          ------------------------------------------
     C***        $X941C    PLIST
     C***                  PARM           P#LFIL
     C***                  PARM           P#LLIB
     C***                  PARM           P#OBJL
     C***                  PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX942C (Retrieve memberd)
      *          ------------------------------------------
     C           $X942C    PLIST
     C                     PARM           P#OBJC
     C                     PARM           P#OBJL
     C                     PARM           P#MBRC
     C                     PARM           P#MBRA
     C                     PARM           P#MBRD
      *
      *          ------------------------------------------
      *          Parameter list for OMX946C (Retr. source chg date)
      *          ------------------------------------------
     C           $X946C    PLIST
     C                     PARM           P#SRCL
     C                     PARM           P#SRCF
     C                     PARM           P#SRCM
     C                     PARM           P#SRCX
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for Exception Procedure V2R1M0
      *          ------------------------------------------
     C           $X952C    PLIST
     C                     PARM           FUXFUC
     C                     PARM           S#XUEP
     C                     PARM           FUPGMN
     C                     PARM           FUPGML
     C                     PARM           W3APPC
     C                     PARM           W3OPTI  1
     C                     PARM           W3FIX#
     C                     PARM           W3FRPL
     C                     PARM           W3TOPL
     C                     PARM           W3SEQ#
     C                     PARM           W3OBJC
     C                     PARM           W3MBRC
     C                     PARM           W3FROL
     C                     PARM           W3OBJT
     C                     PARM           W3OBJA
     C                     PARM           W3TOOL
     C                     PARM           W3SRCL
     C                     PARM           W3SRCF
     C                     PARM           W3SRCM
     C                     PARM           W3FSRL
     C                     PARM           W3FSRF
     C                     PARM           W3FSRM
     C                     PARM           W3LBLT
     C                     PARM           W3CNVT
     C                     PARM           W3PGMN
     C                     PARM           W3PGML
     C                     PARM           W3ROBC
     C                     PARM           W3OCLS
     C                     PARM           W3F4GL 10
     C                     PARM           W3T4GL 10
     C                     PARM           W3EXCI
     C                     PARM           W3SRCP
     C                     PARM           W3SRCS
     C                     PARM           W3SRCX
     C                     PARM           W3OBJX
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for Exception Procedure V3R0M0
      *          ------------------------------------------
     C           $952C2    PLIST
     C                     PARM           FUXFUC
     C                     PARM           S#XUEP
     C                     PARM           CRI,TX
     C                     PARM           P#FREE
     C                     PARM           FUINTL
     C                     PARM           FUPGMN
     C                     PARM           FUPGML
     C                     PARM           W3XBUF
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX953C (Check message)
      *          ------------------------------------------
     C           $X953C    PLIST
     C                     PARM           MSGID
     C                     PARM           P#OBJC
     C                     PARM           P#OBJL
     C                     PARM           MSGTXT132
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX954C (Dlt message)
      *          ------------------------------------------
     C           $X954C    PLIST
     C                     PARM           P#OBJC
     C                     PARM           P#OBJL
     C                     PARM           P#DTLC
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX955C (Copy message)
      *          ------------------------------------------
     C           $X955C    PLIST
     C                     PARM           P#OBJC
     C                     PARM           P#FOBL
     C                     PARM           P#OBJT
     C                     PARM           MSGID
     C                     PARM           P#TOBL
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX964 (Rtv attributes)
      *          ------------------------------------------
     C           $X964     PLIST
     C                     PARM           P#REFC
     C                     PARM           P#REFL
     C                     PARM           P#OBJT
     C                     PARM           P#OBJA
     C                     PARM           P#MBRC
     C                     PARM           P#OBJC
     C                     PARM           P#OBJL
     C                     PARM           P#MBRC
     C                     PARM           P#CMD# 155
     C                     PARM           P#CMD
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX966 (Send message)
      *          ------------------------------------------
     C           $X966C    PLIST
     C                     PARM           P#USID
     C                     PARM           P#RMTI
     C                     PARM           P#MSGN
     C                     PARM           P#MSGF
     C                     PARM           P#MSGD132
      *
      *          ------------------------------------------
      *          Parameter list for OMX969 (Rtv 4GL Class)
      *          ------------------------------------------
     C           $X969     PLIST
     C                     PARM           P#STAT
     C                     PARM '3'       P#OPTI
     C                     PARM           D#GL4N
     C                     PARM           P#NBR#  2
     C                     PARM           P#COD 200
     C                     PARM           P#OUT  76
      *
      *          ------------------------------------------
      *          Parameter list for OMX979C Fallback
      *          ------------------------------------------
     C           $X979C    PLIST
     C                     PARM           W#FLBL
     C                     PARM           W3TOOL
     C                     PARM           W3OCLS
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX980C (Move object)
      *          ------------------------------------------
     C           $X980C    PLIST
     C                     PARM           P#OBJC
     C                     PARM           P#OBJL
     C                     PARM           P#OBJT
     C                     PARM           W#FLBL
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX981C Exec. command
      *          ------------------------------------------
     C           $X981C    PLIST
     C                     PARM           P#CMD
     C                     PARM           P#CMD#
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX982C Rtv jrn info
      *          ------------------------------------------
     C           $X982C    PLIST
     C                     PARM           P#REFC
     C                     PARM           P#REFL
     C                     PARM           P#JRNA
     C                     PARM           P#JRN
     C                     PARM           P#JRNL
     C                     PARM           P#IMAG
     C                     PARM           P#OMIT
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX984C Start journal PF
      *          ------------------------------------------
     C           $X984C    PLIST
     C                     PARM           P#OBJC
     C                     PARM           P#OBJL
     C                     PARM           P#JRN
     C                     PARM           P#JRNL
     C                     PARM           P#REFC
     C                     PARM           P#REFL
     C                     PARM           P#IMAG
     C                     PARM           P#OMIT
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX987C Save library
      *          ------------------------------------------
     C           $X987C    PLIST
     C                     PARM           W#FLBL
     C                     PARM           P#SAVF
     C                     PARM           PPFBLC
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMI010 Write Fix transfer rel.
      *          ------------------------------------------
     C           $I010     PLIST
     C                     PARM           P#APPC
     C                     PARM           P#FIX#
     C                     PARM           P#OBJC
     C                     PARM           P#OBJT
     C                     PARM           P#OBJA
     C                     PARM           P#VRS#
     C                     PARM           P#MOD#
     C                     PARM           P#TFRC
     C                     PARM           P#FRPL
     C                     PARM           P#TOPL
     C                     PARM           P#USID
     C                     PARM           P#ERRN
     C                     PARM           P#JOBN
     C                     PARM           P#JOB#
      *
      *          ------------------------------------------
      *          Parameter list for OMX989C Clear library
      *          ------------------------------------------
     C           $X989C    PLIST
     C                     PARM           W#FLBL
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX990C Delete library
      *          ------------------------------------------
     C           $X990C    PLIST
     C                     PARM           W#FLBL
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX991  Rollback
      *          ------------------------------------------
     C           $X991     PLIST
     C                     PARM           P#TFRC
     C                     PARM           P#APPC
     C                     PARM           P#FRPL
     C                     PARM           P#TOPL
     C                     PARM           P#STAT
     C                     PARM           W#ORC
     C                     PARM           W#ONRC
      *
      *          ------------------------------------------
      *          Parameter list for OMX994C Monitor sender
      *          ------------------------------------------
     C           $X994C    PLIST
     C                     PARM           P#ACTI
     C                     PARM           P#APPC
     C                     PARM           P#TFRC
     C                     PARM 'OMS'     P#USRI
     C                     PARM           D#SNDN
     C                     PARM           P#DEVC
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMQCHGOB
      *          ------------------------------------------
     C           $QCHGO    PLIST
     C                     PARM           O4INTL
     C                     PARM           O4ACTC
     C                     PARM           O4BUF
     C                     PARM           O4PRC
     C                     PARM           O4ERR
     C                     PARM           O4FLD
      *
      *          ------------------------------------------
      *          Parameter list for OMQCHGSO
      *          ------------------------------------------
     C           $QCHGS    PLIST
     C                     PARM           S4INTL
     C                     PARM           S4ACTC
     C                     PARM           S4BUF
     C                     PARM           S4PRC
     C                     PARM           S4ERR
     C                     PARM           S4FLD
      *
      *          ------------------------------------------
      *          Parameter list for OMQRTVSR
      *          ------------------------------------------
     C           $RTVSR    PLIST
     C                     PARM           P@APPC
     C                     PARM           P#PDLC
     C                     PARM           P#ROTC
     C                     PARM           P#PGMN
     C                     PARM           P#KEYW
     C                     PARM           A@KEYV
     C                     PARM           A@ERR
     C                     PARM           A@PRCA
      *
      *          ------------------------------------------
      *          Parameter list for OMX422
      *          (Retrieve IFS-object names)
      *          ------------------------------------------
     C           $MX422    PLIST
     C                     PARM           W3OBJC
     C                     PARM           W3FROL
     C                     PARM           P#IOBC
     C                     PARM           P#IDRC
     C                     PARM           X#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMX960C (Library list handler)
      *          ------------------------------------------
     C           $X960C    PLIST
     C                     PARM           LBI
     C                     PARM           LBO
     C                     PARM           P1OPTI
     C                     PARM           P#PGML
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          Parameter list for OMU001C (Extended Relations handler)
      *          ------------------------------------------
     C           $U001C    PLIST
     C                     PARM           W3OBJC
     C                     PARM           W3TOOL
     C                     PARM           W3OBJT
     C                     PARM           P#RELI
     C                     PARM           P#STAT
      *
      *          ------------------------------------------
      *          OMOW3    keylists
      *          ------------------------------------------
     C           $W31K1    KLIST
     C                     KFLD           K#TFRC
     C                     KFLD           K#SEQ3
     C           $W32K1    KLIST
     C                     KFLD           K#TFRC
     C                     KFLD           K#SRTC
     C                     KFLD           K#OBJT
     C                     KFLD           K#OBJA
     C                     KFLD           K#OBJC
     C                     KFLD           K#MBRC
     C                     KFLD           K#FROL
     C                     KFLD           K#SEQ3
     C           $W32K2    KLIST
     C                     KFLD           K#TFRC
     C                     KFLD           K#SRTC
     C                     KFLD           K#OBJT
     C                     KFLD           K#OBJA
     C                     KFLD           K#OBJC
     C                     KFLD           K#MBRC
     C                     KFLD           K#FROL
     C           $W32K3    KLIST
     C                     KFLD           K#TFRC
     C                     KFLD           K#SRTC
     C                     KFLD           K#OBJT
     C                     KFLD           K#OBJA
     C                     KFLD           K#OBJC
     C                     KFLD           K#MBRC
     C                     KFLD           K#FROL
     C                     KFLD           S#SEQL
      *
      *          ------------------------------------------
      *          OMOBJ object file keylist
      *          ------------------------------------------
     C           $OBJK3    KLIST
     C                     KFLD           K#SRCF
     C                     KFLD           K#SRCL
     C                     KFLD           K#SRCM
      *
      *          ------------------------------------------
      *          OMOBJ object file keylist
      *          ------------------------------------------
     C           $OBJK5    KLIST
     C                     KFLD           P#APPC
     C                     KFLD           K#PDLC
     C                     KFLD           K#OBJC
     C                     KFLD           K#OBJT
      *
      *          ------------------------------------------
      *          OMOBJ object file keylist
      *          ------------------------------------------
     C           $BJ8K1    KLIST
     C                     KFLD           K#OBJC
     C                     KFLD           K#OBJT
     C                     KFLD           K#OBJL
     C           $BJ4K1    KLIST
     C                     KFLD           K#APPC
     C                     KFLD           K#OBJC
     C                     KFLD           K#OBJT
     C           $BJ4K2    KLIST
     C                     KFLD           K#APPC
     C                     KFLD           K#OBJC
     C                     KFLD           K#OBJT
     C                     KFLD           K#PDLC
      *
      *          ------------------------------------------
      *          OMOBJ object file keylist
      *          ------------------------------------------
     C           $OBJK9    KLIST
     C                     KFLD           K#ROBC
     C                     KFLD           K#ROBT
     C                     KFLD           K#ROBL
      *
      *          ------------------------------------------
      *          OMMBR Member file keylist
      *          ------------------------------------------
     C           $BR1K1    KLIST
     C                     KFLD           K#OBJC
     C                     KFLD           K#OBJT
     C                     KFLD           K#OBJL
     C                     KFLD           K#MBRC
      *
      *          ------------------------------------------
      *          OMMBR Member file keylist
      *          ------------------------------------------
     C           $MBRK2    KLIST
     C                     KFLD           K#OBJC
     C                     KFLD           K#OBJT
     C                     KFLD           K#SRCL
     C                     KFLD           K#SRCM
      *
      *          ------------------------------------------
      *          OMMBR Member file keylist
      *          ------------------------------------------
     C           $MBRK3    KLIST
     C                     KFLD           K#OBJC
     C                     KFLD           K#OBJT
     C                     KFLD           K#OBJL
     C                     KFLD           K#MBRC
      *
      *          ------------------------------------------
      *          OMDMP key list.
      *          ------------------------------------------
     C           $MP2K1    KLIST
     C                     KFLD           P#APPC
     C                     KFLD           W3FIX#
     C                     KFLD           W3OBJC
     C                     KFLD           W3OBJT
      *
      *          ------------------------------------------
      *          OMLBL Key list
      *          ------------------------------------------
     C           $BL1K1    KLIST
     C                     KFLD           K#APPC
     C                     KFLD           K#PDLC
      *
      *          ------------------------------------------
      *          OMLBD Library list detail file list
      *          ------------------------------------------
     C           $BD1K1    KLIST
     C                     KFLD           K#APPC
     C                     KFLD           K#PDLC
     C           $BD1K2    KLIST
     C                     KFLD           K#APPC
     C                     KFLD           K#PDLC
     C                     KFLD           BLSEQ#
     C           $LBDK1    KLIST
     C                     KFLD           P#APPC
     C                     KFLD           K#PDLC
     C                     KFLD           K#OBJL
     C           $LBDK3    KLIST
     C                     KFLD           P#APPC
     C                     KFLD           K#PDLC
     C                     KFLD           K#OBJL
     C                     KFLD           BDSEQ#
      *
     C           $BD3K4    KLIST
     C                     KFLD           BDAPPC
     C                     KFLD           BDPDLC
     C                     KFLD           BDLIBC
      *
      *          ------------------------------------------
      *          OMLBD Library list detail file list
      *          ------------------------------------------
     C           $LBDK2    KLIST
     C                     KFLD           P#APPC
     C                     KFLD           K#OBJL
     C           $BD2K1    KLIST
     C                     KFLD           K#APPC
     C                     KFLD           K#OBJL
      *
      *          ------------------------------------------
      *          OMERO solution file keylist.
      *          ------------------------------------------
     C           $RO1K1    KLIST
     C                     KFLD           P#APPC
     C                     KFLD           W3FIX#
     C                     KFLD           W3OBJC
     C                     KFLD           W3OBJT
     C                     KFLD           W3MBRC
     C           $RO2K1    KLIST
     C                     KFLD           K#APPC
     C                     KFLD           K#OBJC
     C                     KFLD           K#OBJT
     C                     KFLD           K#MBRC
      *
      *          ------------------------------------------
      *          OMERO Solution file keylist
      *          ------------------------------------------
     C           $RO3K2    KLIST
     C                     KFLD           P#APPC
     C                     KFLD           W3OBJC
     C                     KFLD           W3OBJT
     C                     KFLD           W3MBRC
     C           $RO4K1    KLIST
     C                     KFLD           RJOBJC
     C                     KFLD           RJOBJT
     C                     KFLD           RJOBJL
     C           $RO4K2    KLIST
     C                     KFLD           W3OBJC
     C                     KFLD           W3OBJT
     C                     KFLD           W3FROL
     C                     KFLD           W3MBRC
      *
      *          ------------------------------------------
      *          OMSEQ Sequrity file per AUTC
      *          ------------------------------------------
     C           $EQ3K1    KLIST
     C                     KFLD           K#APPC
     C                     KFLD           K#PDLC
     C                     KFLD           K#AUTC
     C                     KFLD           K#USID
     C           $EQ3K2    KLIST
     C                     KFLD           K#APPC
     C                     KFLD           K#PDLC
     C                     KFLD           K#AUTC
      *
      *          ------------------------------------------
      *          Keylist for file OMERSL1 (reqst solution file)
      *          ------------------------------------------
     C           $ERSK1    KLIST
     C                     KFLD           P#APPC
     C                     KFLD           W3FIX#
     C           $ERSK2    KLIST
     C                     KFLD           ROAPPC
     C                     KFLD           ROFIX#
      *
      *          ------------------------------------------
      *          Key list OMXFULx
      *          ------------------------------------------
     C           $FU1K1    KLIST
     C                     KFLD           P#APPC
     C                     KFLD           K#XFUC
     C           $FU2K1    KLIST
     C                     KFLD           K#XFUC
      *
      *          ------------------------------------------
      *          Key list OMXSE files
      *          ------------------------------------------
     C           $SE1K1    KLIST
     C                     KFLD           K#APPC
     C                     KFLD           K#XUEP
      *
      *          ------------------------------------------
      *          Keylist for file OMAIF
      *          ------------------------------------------
      ********   $IF2K1    KLIST  cancelled for removal OMAIFL2
      *******
      ********
     C           $IF4K1    KLIST
     C                     KFLD           K#EAPC
     C                     KFLD           K#IAPC
      *
      *          ------------------------------------------
      *          Keylist for file OMOTD
      *          ------------------------------------------
     C           $TD2K1    KLIST
     C                     KFLD           K#TFRC
     C                     KFLD           K#TSB#
     C                     KFLD           K#TKY1
     C                     KFLD           K#TKY2
      *
      *          ------------------------------------------
      *          Keylist for file OMOW3L9
      *          ------------------------------------------
     C           $W39K2    KLIST
     C                     KFLD           W3TFRC
     C                     KFLD           W3SEQ#
     C                     KFLD           K#OCLS
      *
     C           $W39K3    KLIST
     C                     KFLD           W3TFRC
     C                     KFLD           K#OCLS
      *
      *          ------------------------------------------
      *          Keylist for file OMLOA
      *          ------------------------------------------
     C           $OA1K1    KLIST
     C                     KFLD           P#APPC
     C                     KFLD           BDPDLC
     C                     KFLD           BDSEQ#
     C                     KFLD           BDLSQ#
     C                     KFLD           RJOBJT
     C                     KFLD           RJOBJA
     C           $OA1K2    KLIST
     C                     KFLD           P#APPC
     C                     KFLD           BDPDLC
     C                     KFLD           BDSEQ#
     C                     KFLD           BDLSQ#
     C                     KFLD           RJOBJT
     C                     KFLD           K#OBJA
      *
      *          ------------------------------------------
      *          Keylist for file OMPDLL1
      *          ------------------------------------------
     C           $DL1K1    KLIST
     C                     KFLD           P#APPC
     C                     KFLD           K#PDLC
      *
      *          ------------------------------------------
      *          Keylist for file OMRTLL3
      *          ------------------------------------------
     C           $TL3K1    KLIST
     C                     KFLD           RJAPPC
     C                     KFLD           RJPDLC
     C                     KFLD           RJOBJL
      *
      *          ------------------------------------------
      *          Keylist for file OMRTLL5
      *          ------------------------------------------
     C           $TL5K1    KLIST
     C                     KFLD           RJAPPC
     C                     KFLD           RJPDLC
     C                     KFLD           OPROTC
      *
      *          ------------------------------------------
      *          Keylist for file OMOVCL2
      *          ------------------------------------------
     C           $OVCK2    KLIST
     C                     KFLD           VCAPPC
     C                     KFLD           VCOBJC
     C                     KFLD           VCOBJT
     C                     KFLD           VCFIX#
      *
      *          ------------------------------------------
      *          Keylist for file OMOVCL3
      *          ------------------------------------------
     C           $OVCK3    KLIST
     C                     KFLD           U#APPC
     C                     KFLD           U#FIX#
     C                     KFLD           U#RAPC
     C                     KFLD           U#RFX#
     C                     KFLD           U#OBJC
     C                     KFLD           U#OBJT
      *
     C           $VC3K2    KLIST
     C                     KFLD           VCAPPC
     C                     KFLD           VCFIX#
     C                     KFLD           VCRAPC
     C                     KFLD           VCRFX#
     C                     KFLD           VCOBJC
     C                     KFLD           VCOBJT
      *
      *          ------------------------------------------
      *          Keylist for file OMOVCL5
      *          ------------------------------------------
     C           $OVCK5    KLIST
     C                     KFLD           VCRAPC
     C                     KFLD           VCRFX#
     C                     KFLD           VCOBJC
     C                     KFLD           VCOBJT
      *
      *          ------------------------------------------
      *          Keylist for file OMLLCL1
      *          ------------------------------------------
     C           $LLCK1    KLIST
     C                     KFLD           W3APPC
     C                     KFLD           W3TOPL
     C                     KFLD           P#SEQ#
      *
      *          ------------------------------------------
      *          Keylist for file OMLDCL1
      *          ------------------------------------------
     C           $LDCK1    KLIST
     C                     KFLD           W3APPC
     C                     KFLD           W3TOPL
     C                     KFLD           P#SEQ#
      *
      *          ------------------------------------------
      *          Initialize work/fields
      *          ------------------------------------------
     C                     Z-ADD0         D#OC#
     C                     Z-ADD0         D#ONC#
     C                     Z-ADD0         D#OD#
     C                     Z-ADD0         D#OND#
     C                     Z-ADD0         D#OS#
     C                     Z-ADD0         D#ONS#
     C                     Z-ADD0         D#OR#
     C                     Z-ADD0         D#ONR#
     C                     Z-ADD0         D#ER#
     C                     Z-ADD0         D#WR#
     C                     Z-ADD0         D#AD#
     C                     Z-ADD0         D#AND#
      *
      *          ------------------------------------------
      *          Retrieve OS/400 Release (V5RxMx) (P#VER# = pos 2)
      *          ------------------------------------------
     C                     CALL 'OMX005C' $MX005
     C           P#VER#    IFGE '5'                        B01
     C                     Z-ADD250       NBRLIB  50
     C                     ELSE                            X01
     C                     Z-ADD25        NBRLIB
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          Clear the input and output library lists
      *          ------------------------------------------
     C                     MOVEA*BLANKS   LBI
     C                     MOVEA*BLANKS   LBO
      *
      *          ------------------------------------------
      *          Save the old library list.
      *          Terminate if errors.
      *          ------------------------------------------
     C                     MOVE '1'       P1OPTI
     C                     CALL 'OMX960C' $X960C
      *
      *          ------------------------------------------
      *          Check the result
      *          ------------------------------------------
     C           P#STAT    IFNE C#NORM                     B01
     C                     EXSR SRPM01
     C                     EXSR *PSSR
     C                     ENDIF                           E01
      *
      *          ------------------------------------------
      *          End of subroutine.
      *          ------------------------------------------
     C                     ENDSR
